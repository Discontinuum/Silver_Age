#textdomain wesnoth-2
#define APPLY_TO_VARIATION NAME
    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=variation
            name={NAME}
        [/effect]
    [/object]
#enddef

#define WEAPON_SPECIAL_DISABLED
    [chance_to_hit]
        id=disabled
	multiply=0
	apply_to=self
        [filter_self]
	    status=disabled   
        [/filter_self]
    [/chance_to_hit]
    [chance_to_hit]
        id=disabled
	value=90
	apply_to=opponent
        [filter_self]
	    status=disabled
        [/filter_self]
        [filter_opponent]
	    [not]
		status=disabled
	    [/not]    
        [/filter_opponent]
    [/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_THROWING
    [damage]
        id=throwing
	name= _ "throwng"
        description= _ "Traits ''strong'' increases damage of this attack as if it were melee. Trait ''weak'' accordingly descreases damage of the attack"
    [/damage]
    [damage]
	add=1
        id=throwing0
        [filter_self]
	    trait=strong
	    [filter_weapon]
		range=ranged
	    [/filter_weapon]
	[/filter_self]
    [/damage]
    [damage]
	sub=1
        id=throwing1
        [filter_self]
	    trait=weak
	    [filter_weapon]
		range=ranged
	    [/filter_weapon]
	[/filter_self]
    [/damage]
    [damage]
	add=2
        id=throwing2
        [filter_self]
	    trait=strong_double
	    [filter_weapon]
		range=ranged
	    [/filter_weapon]
	[/filter_self]
    [/damage]
#enddef
#define WEAPON_SPECIAL_CONTACTLESS
    [damage]
        id=contactless
	name= _ "indirect"
        description= _ "Traits ''strong'' and ''weak'' can't affect damage of this attack"
    [/damage]
    [damage]
	sub=1
        id=contactless0
        [filter_self]
	    trait=strong
	    [filter_weapon]
		range=melee
	    [/filter_weapon]
	[/filter_self]
    [/damage]
    [damage]
	add=1
        id=contactless1
        [filter_self]
	    trait=weak
	    [filter_weapon]
		range=melee
	    [/filter_weapon]
	[/filter_self]
    [/damage]
    [damage]
	sub=2
        id=contactless2
        [filter_self]
	    trait=strong_double
	    [filter_weapon]
		range=melee
	    [/filter_weapon]
	[/filter_self]
    [/damage]
#enddef
#define ABILITY_INTERFERENCE_AURA
    [dummy]
        id=interference aura
        name= _ "interference aura"
        female_name= _ "female^interference aura"
        description= _ "Adjacent units has -10% accuracy even in favorable time of day"
    [/dummy] 
#enddef
#define ABILITY_TROLLING
    [dummy]
        id=trolling
        name= _ "trolling"
        female_name= _ "female^trolling"
        description= _ "When attacked at ranged combat, can understand and repeat almost any magical attack, counterattacking with same spells, which power will fit 3rd level"
    [/dummy]
#enddef
[event]
     id=trolling_end
     name=attack end
     first_time_only=no
     [filter]
	{IS_MAGE}
     [/filter]
     [filter_second]
	ability=trolling
     [/filter_second]
     [set_variables]
	name=second_unit.attack
	to_variable=reserve_unit.attack
     [/set_variables]
     [unstore_unit]
	variable=second_unit
	find_vacant=no
     [/unstore_unit]
     {CLEAR_VARIABLE reserve_unit}
[/event]
#define ABILITY_CALL_SPIRIT
    [dummy]
        id=call spirit
        name= _ "spirit in thee flesh"
        female_name= _ "female^spirit in thee flesh"
        description= _ "When shaman attacked by enemy, powerful spirit comes to its help. Spirit will fight on shaman's side until the shaman or the spirit itself will be defeated or until other shaman call the same spirit"
    [/dummy]
#enddef
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	ability=call spirit
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..5
    [/set_variable]
    {VARIABLE unit.variables.deity $tmp_luck}
    [unstore_unit]
	variable=unit
	find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    id=call_spirit
    name=attack
    first_time_only=no
    [filter]
	[not]
	    ability=call spirit
	[/not]
    [/filter]
    [filter_second]
	ability=call spirit
    [/filter_second]
    {VARIABLE s $second_unit.variables.deity}
    [kill]
	type=$spirits[$s].type
	animate=yes
	fire_event=no
    [/kill]
    {VARIABLE spirits[$s].side $second_unit.side}
    {VARIABLE spirits[$s].x $second_unit.x}
    {VARIABLE spirits[$s].y $second_unit.y}
    {VARIABLE spirits[$s].variables.caller $second_unit.id}
    [unstore_unit]
	text=_"God coming in flesh!"
	red,green,blue=255,255,255
	variable=spirits[$s]
	find_vacant=yes
    [/unstore_unit]
    {CLEAR_VARIABLE s}
[/event]
[event]
    id=uncall_spirit
    name=die
    first_time_only=no
    [filter]
	ability=call spirit
    [/filter]
    {VARIABLE s $unit.variables.deity}
    [if]
    [have_unit]
	id=$spirits[$s].id
	[filter_wml]
	    [variables]
		caller=$unit.id
	    [/variables]
	[/filter_wml]
    [/have_unit]
    [then]
        [kill]
	   type=$spirits[$s].type
	   animate=yes
	   fire_event=no
        [/kill]
    [/then]
    [/if]
    {CLEAR_VARIABLE s}
[/event]
#define ABILITY_EXECUTION
    [dummy]
        id=execution
        name= _ "execution"
        description= _ "When adjacent ally unit of 1st level misses all his strikes in offense, unit kills him and accuracy of other adjacent units increases by 10% for 1 turn"
    [/dummy]
#enddef
#define ABILITY_FATHER
    [dummy]
        id=father
        name= _ "father"
        female_name= _ "female^mother"
        description= _ "Adjacent ally strongmen of lesser levels recieve regeneration"
    [/dummy]
#enddef
#define ABILITY_OLDER_BROTHER
    [dummy]
        id=older brother
        name= _ "older brother"
        female_name= _ "female^older sister"
        description= _ "Adjacent ally goblins of lesser levels inflict 50% more damage"
    [/dummy]
#enddef
#define ABILITY_YOUNGER_BROTHER
    [dummy]
        id=younger brother
        name= _ "younger brother"
        female_name= _ "female^younger sister"
        description= _ "Adjacent ally weaklings of lesser levels inflict one more shoot."
    [/dummy]
#enddef
#define ABILITY_FOUNDLING
    [dummy]
        id=foundling
        name= _ "foundling"
        female_name= _ "female^foundling"
        description= _ "Unit becomes berserk when there is some ally troll around. It also recovers 10 HP per turn under the influence of ''caring'' and ''dinner'' abilities"
    [/dummy]
#enddef
#define ABILITY_SOVEREIGN
    [dummy]
        id=sovereign
        name= _ "sovereign of the empire"
        female_name= _ "female^sovereign of the empire"
        description= _ "Adjacent ally units of strongmen line recieve regeneration, goblins do 50% more damage, weaklings do one more shoot, and trolls gain endless ammo for their ''improvised means'' ability. When adjacent ally orc, troll or goblin misses all his strikes in offense, it will attack again and again - until it hit at least once or be killed. Unit itself recovers 10 HP per turn under the influence of ''caring'' and ''dinner'' abilities"
    [/dummy]
#enddef
#define ABILITY_NEHUSHTAN
    [dummy]
        id=nehushtan
        name= _ "nehushtan"
        female_name= _ "female^nehushtan"
        description= _ "At beginning of every turn unit cures ALL his allies of poison"
    [/dummy]
#enddef
#define ABILITY_EXTINGUISHER
    [dummy]
        id=extinguisher
        name= _ "extinguisher"
        female_name= _ "female^extinguisher"
        description= _ "At beginning of every turn unit can repeal ignition on itself and adjacent allies"
    [/dummy]
#enddef
#define ABILITY_LAUNCH
    [dummy]
        id=launch
        name= _ "launch"
        female_name= _ "female^launch"
        description= _ "At beginning of every turn unit launches one Punk on Glider"
	description_inactive= _ "At beginning of every turn unit launches one Punk on Glider.
BUT it wouldn't work while unit is completely surrounded by other units"
	[filter]
	    [not]
	    	ability_type_active=launch_disable
	    [/not]
	[/filter]
    [/dummy]
    [launch_disable]
	id=launch_disable
	[filter]
	    [filter_adjacent]	
	    	count=6
	    [/filter_adjacent]
	[/filter]
    [/launch_disable]
#enddef
#define ABILITY_LANDING
    [dummy]
        id=landing
        name= _ "landing"
        female_name= _ "female^landing"
        description= _ "If unit hit by any attack or enter village it loses its glider"
    [/dummy]
#enddef
[event]
    id=landing_village
    name=moveto
    first_time_only=no
    [filter]
	ability=landing
        [filter_location]
            terrain=*^V*
        [/filter_location]
    [/filter]
    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=variation
            name=fallen
        [/effect]
    [/object]
[/event]
[event]
    id=landing_crush1
    name=attacker hits
    first_time_only=no
    [filter_second]
	ability=landing
    [/filter_second]
    {VARIABLE h $second_unit.max_hitpoints}
    [set_variable]
	name=h
	divide=2
    [/set_variable]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=$h
    [/variable]
    [then]
	{VARIABLE second_unit.hitpoints $h}
    [/then]
    [/if]
    [unstore_unit]
	variable=second_unit
	find_vacant=no
	text= _ "CRUSHED!"
	{COLOR_HARM}
    [/unstore_unit]
    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=variation
            name=fallen
        [/effect]
    [/object]
    {CLEAR_VARIABLE h}
[/event]
[event]
    id=landing_crush2
    name=defender hits
    first_time_only=no
    [filter]
	ability=landing
    [/filter]
    {VARIABLE h $unit.max_hitpoints}
    [set_variable]
	name=h
	divide=2
    [/set_variable]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=$h
    [/variable]
    [then]
	{VARIABLE unit.hitpoints $h}
    [/then]
    [/if]
    [unstore_unit]
	variable=unit
	find_vacant=no
	text= _ "CRUSHED!"
	{COLOR_HARM}
    [/unstore_unit]
    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=variation
            name=fallen
        [/effect]
    [/object]
    {CLEAR_VARIABLE h}
[/event]
[event]
    id=landing_ram
    name=attacker hits
    first_time_only=no
    [filter]
	ability=landing
    [/filter]
    [filter_second]
	[not]
	    {IS_CAN_FLY}
	[/not]
    [/filter_second]
    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=variation
            name=fallen
        [/effect]
    [/object]
[/event]
#define ABILITY_COST_OF_LIFE
    [dummy]
        id=cost_of_life
        name= _ "cost of life"
        female_name= _ "female^cost of life"
        description= _ "Unit can't be attacked while there are his allies of same race around him. If enemy tries to attack unit, his ally swaps places with unit and takes attack. Wealthy units and leaders wouldn't protect unit this way"
        description_inactive= _ "Unit can't be attacked if there are his allies of same race around him, but not wealthy units and not leaders"
	[filter]
	    [filter_adjacent]	
	    	race=$other_unit.race
		side=$other_unit.side
		canrecruit=no
	    	[not]
	    	    ability=cost_of_life
	    	[/not]
	    	[and]
		    [not]
		    	trait=wealthy		
		    [/not]
	    	[/and]
	    [/filter_adjacent]
	[/filter]
    [/dummy]
#enddef
[event]
    id=cost_of_life
    name=attack
    first_time_only=no
    [filter_second]
        ability=cost_of_life
	[filter_adjacent]
	    side=$second_unit.side
	    canrecruit=no
	    race=$second_unit.race
	    [not]
	    	ability=cost_of_life
	    [/not]
	    [and]
		[not]
		    trait=wealthy		
		[/not]
	    [/and]
	[/filter_adjacent]
    [/filter_second]
    [store_unit]
	[filter]
	    side=$second_unit.side
	    canrecruit=no
	    race=$second_unit.race
	    [not]
	    	ability=cost_of_life
	    [/not]
	    [and]
		[not]
		    trait=wealthy		
		[/not]
	    [/and]  
	    [filter_adjacent]
	    	x=$x2
	    	y=$y2
	    [/filter_adjacent]  
	[/filter]
	variable=defender
	kill=no
    [/store_unit]
    [store_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	variable=boss
	kill=no
    [/store_unit]
    {VARIABLE boss.x $defender.x}
    {VARIABLE boss.y $defender.y}
    {VARIABLE defender.x $x2}
    {VARIABLE defender.y $y2}
    {VARIABLE w 1}
    {FOREACH unit.attack att}
	[if]
	    [variable]
		name=unit.attack[$att].name
		equals=$weapon.name
	    [/variable]
	    [and]
	    	[variable]
		    name=unit.attack[$att].type
		    equals=$weapon.type
	    	[/variable]
	    [/and]
	    [and]
	    	[variable]
		    name=unit.attack[$att].range
		    equals=$weapon.range
	    	[/variable]
	    [/and]
	    [and]
	    	[variable]
		    name=unit.attack[$att].damage
		    equals=$weapon.damage
	    	[/variable]
	    [/and]
	    [and]
	    	[variable]
		    name=unit.attack[$att].number
		    equals=$weapon.number
	    	[/variable]
	    [/and]
	    [then]
		{VARIABLE w $att}
		[break]
		[/break]
	    [/then]
	[/if]
    {NEXT att}
    {VARIABLE w2 "xyz"}
    {FOREACH defender.attack att2}
	[if]
	    [variable]
		name=defender.attack[$att2].range
		equals=$weapon.range
	    [/variable]
	    [then]
		{VARIABLE w2 $att2}
		[break]
		[/break]
	    [/then]
	[/if]
    {NEXT att2}
    [unstore_unit]
	variable=defender
	text=_"COST OF LIFE!"
	find_vacant=no
	{COLOR_HARM}
    [/unstore_unit]
    [unstore_unit]
	variable=boss
	find_vacant=no
    [/unstore_unit]
    [modify_unit]
	[filter]
	    id=$unit.id
	[/filter]
	attacks_left=1
    [/modify_unit]
    [do_command]
	[attack]
	    [source]
	   	x=$x1
	   	y=$y1
	    [/source]
	    [destination]
	   	x=$x2
	   	y=$y2
	    [/destination]
	    weapon=$w
	    defender_weapon=$w2
	[/attack]
    [/do_command]
    {CLEAR_VARIABLE defender}
    {CLEAR_VARIABLE boss}
    {CLEAR_VARIABLE w}
    {CLEAR_VARIABLE w2}
    {CLEAR_VARIABLE att}
    {CLEAR_VARIABLE att2}
[/event]
#define ABILITY_SHARE_EXPERIENCE
    [dummy]
        id=share_experience
        name= _ "share experience"
        female_name= _ "female^share experience"
        description= _ "When this unit kills some unit, all 1st level ally units, adjacent to killed or killer receive amount of experience equal to killed unit's level"
    [/dummy]
#enddef
[event]
    id=instructor
    name=last breath
    first_time_only=no
    [filter_second]
	ability=share_experience
    [/filter_second]
    [store_unit]
        [filter]
	    level=1
	    side=$second_unit.side
	    [filter_adjacent]
		x=$x1
		y=$y1
                [or]
		    x=$x2
		    y=$y2
		[/or]
	    [/filter_adjacent]
        [/filter]
        variable=students
	kill=no
    [/store_unit]
    {FOREACH students s}
	[set_variable]
	    name=students[$s].experience
	    add=$unit.level
	[/set_variable]
	[unstore_unit]
	    variable=students[$s]
	    find_vacant=no
	    text=_"+$unit.level"
	    red,green,blue=32,32,128
	[/unstore_unit]
    {NEXT s}
    {CLEAR_VARIABLE students}
[/event]
#define ABILITY_DISENGAGEMENT
    [dummy]
        id=disengagement
        name= _ "disengagement"
        female_name= _ "female^disengagement"
        description= _ "When this unit takes damage, greater than remaining amount of unit's hitpoints, at melee combat, it can stop the encounter"
    [/dummy]
#enddef
[event]
    id=disengagement_begin1
    name=attack
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter_second]
	ability=disengagement
    [/filter_second]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE disengagement_in_fact 0}
[/event]
[event]
    id=disengagement_begin2
    name=attack
    first_time_only=no
    [filter]
	ability=disengagement
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE disengagement_in_fact 0}
[/event]
[event]
    id=disengagement_event1
    name=attacker hits
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter_second]
	ability=disengagement
    [/filter_second]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=$second_unit.hitpoints
    [/variable]
    [then]
    	{VARIABLE unit.status.disabled yes}
    	{VARIABLE second_unit.status.disabled yes}  
    	[unstore_unit]
       	    variable=second_unit
       	    {COLOR_HEAL}
       	    text= _ "DISENGAGEMENT!"
       	    find_vacant=no
    	[/unstore_unit]
    	{VARIABLE disengagement_in_fact 1}
    [/then]
    [/if]
[/event]
[event]
    id=disengagement_event2
    name=defender hits
    first_time_only=no
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter]
	ability=disengagement
    [/filter]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=$unit.hitpoints
    [/variable]
    [then]
        {VARIABLE unit.status.disabled yes}
    	{VARIABLE second_unit.status.disabled yes}  
    	[unstore_unit]
       	    variable=second_unit
       	    {COLOR_HEAL}
       	    text= _ "DISENGAGEMENT!"
       	    find_vacant=no
    	[/unstore_unit]
    	{VARIABLE disengagement_in_fact 1}
    [/then]
    [/if]
[/event]
[event]
    id=disengagement_end1
    name=attack end
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter_second]
	ability=disengagement
    [/filter_second]
    [if]
    [variable]
	name=disengagement_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
	{CLEAR_VARIABLE unit.status.disabled}
    	[unstore_unit]
	    variable=unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE disengagement_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE disengagement_in_fact}
    [/else]
    [/if]
[/event]
[event]
    id=disengagement_end2
    name=attack end
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]
    [filter_second]
	ability=disengagement
    [/filter_second]
    [if]
    [variable]
	name=disengagement_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
	{CLEAR_VARIABLE unit.status.disabled}
    	[unstore_unit]
	    variable=unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE disengagement_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE disengagement_in_fact}
    [/else]
    [/if]
[/event]
#define ABILITY_EAT
    [dummy]
        id=eat
        name= _ "eat"
        female_name= _ "female^eat"
        description= _ "When some unit dies next to unit, unit recovers 8 HP"
    [/dummy]
#enddef
[event]
    name=die
    first_time_only=no
    id=eating_event
    [filter]
	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
	[/not]
	[filter_adjacent]
	    ability=eat
	[/filter_adjacent]
    [/filter]
    [store_unit]
	[filter]
	    ability=eat
	    [filter_adjacent]
	    	x=$x1
	    	y=$y1
	    [/filter_adjacent]
        [/filter]
	kill=no
	variable=eaters
    [/store_unit]
    {FOREACH eaters e}
    	[unstore_unit]
       	    variable=eaters[$e]
       	    {COLOR_HEAL}
            text= _ "+8"
            find_vacant=no
    	[/unstore_unit]
    	[object]
            silent=yes
            duration=forever
       	    [filter]
       	   	x,y=$eaters[$e].x,$eaters[$e].y
       	    [/filter]
       	    [effect]
     	   	apply_to=hitpoints
    	   	increase=8
            [/effect]
    	[/object]
    {NEXT e}
    {CLEAR_VARIABLE eaters}
[/event]
#define ABILITY_WORD_OF_CHIEF
    [dummy]
        id=word_of_chief
        name= _ "national pride"
        female_name= _ "female^national pride"
        description= _ "All ogres will inflict one more strike to opponents which attacked this unit last turn"
    [/dummy]
#enddef
[event]
    name=attack end
    id=word_of_chief
    first_time_only=no
    [filter_second]
	ability=word_of_chief
    [/filter_second]
    {VARIABLE unit.status.ogresorder yes}
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "OGRES WILL NOT FORGET!"
        {COLOR_HARM}
    [/unstore_unit]
[/event]
#define ABILITY_BLESSING_OF_LIGHT
    [dummy]
        id=light_blessing
        name= _ "blessing of the Light"
        female_name= _ "female^blessing of the Light"
        description= _ "When unit receives blessing of the Light, it loses all its traits and receives more powerful one"
    [/dummy]
#enddef
[event]
    id=light_not_bless
    name=pre advance
    first_time_only=no
    [filter]
	ability=light blessing
    [/filter]
    {VARIABLE notbless 1}
[/event]
[event]
    id=light_bless
    name=post advance
    first_time_only=no
    [filter]
	ability=light blessing
    [/filter]
    [if]
    [not]
    [variable]
	name=notbless
	equals=1
    [/variable]
    [/not]
    [then]
    	{CLEAR_VARIABLE unit.modifications.trait}
    	[unit]
	    id=$unit.id
	    type=$unit.type
	    name=$unit.name
	    side=$unit.side
	    gender=$unit.gender
	    moves=$unit.moves
	    canrecruit=$unit.cancrecruit
	    attacks_left=$unit.attacks_left
	    resting=$unit.resting
	    variation=$unit.variation
	    overlays=$unit.overlays
	    x=$unit.x
	    y=$unit.y
	    facing=$unit.facing
	    profile=$unit.profile
	    ai_special=$unit.ai_special
	    random_traits=yes
	    to_variable=blessed
    	[/unit]
    	{VARIABLE blessed.modifications $unit.modifications}
    	{VARIABLE blessed.variables $unit.variables}
    	[unstore_unit]
	    variable=blessed
	    find_vacant=no
    	[/unstore_unit]
    	{CLEAR_VARIABLE blessed}
    [/then]
    [else]
    	{CLEAR_VARIABLE notbless}
    [/else]
    [/if]
[/event]
#define ABILITY_INITIATIVE
    [dummy]
        id=initiative
        name= _ "initiative"
        female_name= _ "female^initiative"
        description= _ "After unit kills an enemy unit, it gains additional MP"
    [/dummy]
#enddef
[event]
	id=initiative_event
        name=die
        first_time_only=no

        [filter_second]
            ability=initiative
        [/filter_second]

        [unstore_unit]
            variable=second_unit
            {COLOR_HEAL}
            text= _ "+1"
            find_vacant=no
        [/unstore_unit]

	[modify_unit]
            [filter]
    		x,y=$x2,$y2
  	    [/filter]
            moves=1
	[/modify_unit]
[/event]
#define ABILITY_RUM_BOTTLE
    [dummy]
        id=rum_bottle
        name= _ "bottle of rum"
        female_name= _ "female^bottle of rum"
        description= _ "At beginning of every its turn unit gets free from any negative effects, such as poison, slowing, distraction etc."
	description_inactive= _ "At beginning of every its turn unit gets free from any negative effects, such as poison, slowing, distraction etc.
BUT unit does not dare to drink in presence of boatswain and skipper"
	[filter]
	    [not]
	    	ability_type_active=rum_disable
	    [/not]
	[/filter]
    [/dummy]
    [rum_disable]
	id=rum_disable
	[filter]
	    [filter_adjacent]	
	    	ability=sailors_authority
	    [/filter_adjacent]
	    [not]
		ability=sailors_authority
	    [/not]
	[/filter]
    [/rum_disable]
#enddef
#define ABILITY_GROG_BARREL
    [dummy]
        id=grog_barrel
        name= _ "barrel of grog"
        female_name= _ "female^barrel of grog"
        description= _ "At beginning of every its turn unit frees itself and all adjacent allies from any negative effects, such as poison, slowing, distraction etc.
Unlike rum, grog is allowed by boatswains ans skippers"
    [/dummy]
#enddef
#define ABILITY_BOILING
    [dummy]
        id=boiling
        name= _ "boiling"
        female_name= _ "female^boiling"
        description= _ "When unit contacts with another unit which standing in water, it inflicts 7 damage to this unit. Fire resistance can lower this damage"
    [/dummy]
#enddef
#define ABILITY_TRAP
    [dummy]
        id=trap
        name= _ "trap"
        female_name= _ "female^trap"
        description= _ "When some unit tries to attack this unit in melee combat, it becomes slowed. Traps doesn't affect flying units and units with ''skirmisher'' ability"
    [/dummy]
#enddef
[event]
    id=trap
    name=attack
    first_time_only=no
    [filter_second]
        ability=trap
    [/filter_second]
    [filter]
	[not]
	    ability=skirmisher
	[/not]
	[and]
	    [not]
		{IS_CAN_FLY}
	    [/not]
	[/and]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]

    {VARIABLE unit.status.slowed yes}  
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "trap"
        {COLOR_HARM}
    [/unstore_unit]
[/event]
#define ABILITY_FIRE_MINES
    [dummy]
        id=fire mines
	name = _ "fire mine"
 	female_name= _ "female^fire mine"
	description = _ "When some unit tries to attack this unit in melee combat, it receives fire damage. Traps doesn't affect flying units and units with ''skirmisher'' ability"
    [/dummy]
#enddef
[event]
    id=fire mines
    name=attack
    first_time_only=no
    [filter_second]
        ability=fire mines
    [/filter_second]
    [filter]
	[not]
	    ability=skirmisher
	[/not]
	[and]
	    [not]
		{IS_CAN_FLY}
	    [/not]
	[/and]
    [/filter]
    [filter_attack]
	range=melee
    [/filter_attack]

    [modify_unit]
  	[filter]
	    x=$x2
	    y=$y2
   	[/filter]
  	[status]
	    miner=yes
	[/status]
    [/modify_unit]
    [set_variable]
	name=tmp_fire_mine_damage
	value=$second_unit.level
    [/set_variable]
    [set_variable]
	name=tmp_fire_mine_damage
	multiply=4
    [/set_variable]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$x2
	    y=$y2
	[/filter_second]
	[secondary_attack]
	    name=staff
	[/secondary_attack]
	amount=$tmp_fire_mine_damage
	damage_type=fire
	kill=yes
	fire_event=yes
	experience=no
    [/harm_unit] 
    [modify_unit]
  	[filter]
	    x=$x2
	    y=$y2
   	[/filter]
  	[status]
	    miner=no
	[/status]
    [/modify_unit]   
[/event]
#define ABILITY_BLACK_MARKET
    [dummy]
        id=black_market
        name= _ "black market"
        female_name= _ "female^black market"
        description= _ "When this unit starts its turn in a village, it recieves 1 gold coin by sales of prohibited goods"
	[filter]
	    [filter_location]
		terrain=*^V*
	    [/filter_location]
	[/filter]
    [/dummy]
#enddef
#define ABILITY_COLDBLOODED
    [dummy]
        id=coldblooded
        name= _ "cold-blooded"
        female_name= _ "female^cold-blooded"
        description= _ "When unit hit by cold attack, it slows down"
	[filter]
	    status=slowed
	[/filter]
    [/dummy]
#enddef
    [event]
	id=cooldblooded_defense
        name=attacker hits
        first_time_only=no

        [filter_attack]
            type=cold
        [/filter_attack]

        [filter_second]
            ability=coldblooded
        [/filter_second]
        {VARIABLE second_unit.status.slowed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "frozen"
	    female_text= _ "female^frozen"
            red,green,blue=196,196,196
        [/unstore_unit]

    [/event]
    [event]
	id=cooldblooded_attack
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            type=cold
        [/filter_second_attack]

        [filter]
            ability=coldblooded
        [/filter]
        {VARIABLE unit.status.slowed yes}

        [if]
            [variable]
                name=unit.gender
                equals=female
            [/variable]

            [then]
                [set_variable]
                    name=tmp_frozed_text
                    value= _ "female^frozen"
                [/set_variable]
            [/then]

            [else]
                [set_variable]
                    name=tmp_frozed_text
                    value= _ "frozen"
                [/set_variable]
            [/else]
        [/if]

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "frozen"
	    female_text= _ "female^frozen"
            red,green,blue=196,196,196
        [/unstore_unit]

    [/event]
#define ABILITY_CORRUPTION
    [dummy]
        id=corruption
        name= _ "defacement curse"
        female_name= _ "female^defacement curse"
        description= _ "In beginning of every turn all adjacent enemy units gain defacement curse. They permanentely loses 1 HP and will need 1 more XP to reach next level"
    [/dummy]
#enddef
#define ABILITY_POWER_STEALING
    [dummy]
        id=power stealing
        name= _ "power stealing"
        female_name= _ "female^power stealing"
        description= _ "In beginning of every turn all adjacent enemy units gain defacement curse. They permanentely loses 1 HP and will need 1 more XP to reach next level. Ability possesor gain all stolen HP and XP"
    [/dummy]
#enddef
#define ABILITY_ADVANCED_FEEDING
    [dummy]
        id=feeding_advanced
        name= _ "feeding"
        female_name= _ "female^feeding"
        description= _ "This unit gains 1 hitpoint added to its maximum and 1% added to its blade, pierce and impact resistance whenever it kills a unit, except units that are immune to plague"
    [/dummy]
#enddef

[event]
    id=advanced_feeding
    name=die
    first_time_only=no

    [filter]
        [not]
            race=SA_undead,SA_mechanical,SA_spirit
        [/not]
    [/filter]

    [filter_second]
        ability=feeding_advanced
    [/filter_second]

    [unstore_unit]
        variable=second_unit
        {COLOR_HEAL}
        text= _ "+1 max HP
+1% resistance
+1% resistance
+1% resistance"
        find_vacant=no
    [/unstore_unit]

    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=hitpoints
            increase_total=1
            increase=1
        [/effect]
        [effect]
            apply_to=resistance
	    [resistance]
		blade=-1
		pierce=-1
		impact=-1
	    [/resistance]
	    replace=no
        [/effect]
    [/object]
[/event]

#define ABILITY_THOUSAND_BATTLES
    [dummy]
        id=thousand battles
        name= _ "thousand battles"
        female_name= _ "female^thousand battles"
        description= _ "This unit gains 1 strike added to its melee attack whenever it kills an enemy"
    [/dummy]
#enddef

[event]
    id=thousand battles
    name=die
    first_time_only=no

    [filter_second]
        ability=thousand battles
    [/filter_second]

    [unstore_unit]
        variable=second_unit
        {COLOR_HEAL}
        text= _ "+1 strike"
        find_vacant=no
    [/unstore_unit]

    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=attack
	    range=melee
            increase_attacks=1
        [/effect]
    [/object]
[/event]

#define ABILITY_UNSTOPPABLE_RAGE
    [dummy]
        id=unstoppable rage
        name= _ "unstoppable rage"
        female_name= _ "female^unstoppable rage"
        description= _ "Fierce attack of this unit can't be stopped by abilities ''Critical hit'' and ''Resolute rebuff''"
    [/dummy]
#enddef
#define ABILITY_PLAGUE_AURA
    [dummy]
        id=plague aura
        name= _ "plague aura"
        female_name= _ "female^plague aura"
        description= _ "When some living unit, adjacent to this unit, dies, it becomes zombie, which serves master of this unit"
    [/dummy]
#enddef

[event]
    id=plague_aura1
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	[and]
	    [filter_adjacent]
		ability=plague aura
	    [/filter_adjacent]
	[/and]
	[and]
	    [not]
            	[filter_location]
                    terrain=*^V*
            	[/filter_location]
		[or]
	    	    [filter_adjacent]
			ability=eat
	    	    [/filter_adjacent]
		[/or]
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	[not]
	    trait=undead leader
	    [or]
		ability=cleaner
	    [/or]
	[/not]
    [/filter_second]
    [filter_second_attack]
	[not]
	    special_active=carve
	[/not]
    [/filter_second_attack]
    [store_unit]
	[filter]
	    ability=plague aura
	    [and]
	    	[filter_adjacent]
		    x=$x1
		    y=$y1
	   	[/filter_adjacent]	
	    [/and]    
	[/filter]
	variable=plaguer
	kill=no
    [/store_unit]

    [unit]
	type=Undead Zombie
	variation=$unit.undead_variation
	side=$plaguer.side
	x=$x1
	y=$y1
	to_variable=plagued
    [/unit]
    [unstore_unit]
	variable=plagued
	find_vacant=no
        text= _ "zombification"
        red,green,blue=128,64,128
    [/unstore_unit]
    {CLEAR_VARIABLE plaguer}
    {CLEAR_VARIABLE plagued}
[/event]

[event]
    id=plague_aura2
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	[and]
	    [filter_adjacent]
		ability=plague aura
	    [/filter_adjacent]
	[/and]
	[and]
	    [not]
            	[filter_location]
                    terrain=*^V*
            	[/filter_location]
		[or]
	    	    [filter_adjacent]
			ability=eat
	    	    [/filter_adjacent]
		[/or]
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	trait=undead leader
    [/filter_second]

    [if]
    [variable]
        name=unit.canrecruit
        equals=yes
    [/variable]
    [and]
    [variable]
        name=second_unit.canrecruit
        equals=yes
    [/variable]
    [/and]
    [then]
    [/then]
    [else]
    [store_unit]
	[filter]
	    ability=plague aura
	    [and]
	    	[filter_adjacent]
		    x=$x1
		    y=$y1
	   	[/filter_adjacent]	
	    [/and]    
	[/filter]
	variable=plaguer
	kill=no
    [/store_unit]

    [unit]
	type=Undead Zombie
	variation=$unit.undead_variation
	side=$plaguer.side
	x=$x1
	y=$y1
	to_variable=plagued
    [/unit]
    [unstore_unit]
	variable=plagued
	find_vacant=no
        text= _ "zombification"
        red,green,blue=128,64,128
    [/unstore_unit]
    {CLEAR_VARIABLE plaguer}
    {CLEAR_VARIABLE plagued}
    [/else]
    [/if]
[/event]

#define ABILITY_HARBINGER_OF_DOOM
    [dummy]
        id=harbinger of doom
        name= _ "harbinger of doom"
        female_name= _ "female^harbinger of doom"
        description= _ "Any unit which contacts harbinger of doom on his turn, will inflict 20% less damage until its next turn begins. Undead, mechanicals and bats are immune to this ability"
    [/dummy]
#enddef

    [event]
	id=harbinger_of_doom
        name=moveto, recruit, recall, post advance
        first_time_only=no

	[filter]
            ability=harbinger of doom
	[/filter]

        [store_unit]
            [filter]
                [filter_adjacent]
		    x=$x1
		    y=$y1
                [/filter_adjacent]
		[and]
		    [not]
			race=SA_undead,SA_mechanical,SA_bat,SA_spirit
			[or]
                  	    status=terrorised
    			[/or]
			[or]
			    trait=fearless			    
			[/or]
		    [/not]
		[/and]
            [/filter]
            variable=terror
	    kill=no
        [/store_unit]
        {FOREACH terror t}

        {VARIABLE terror[$t].status.terrorised yes}

        [unstore_unit]
            variable=terror[$t]
            find_vacant=no
	    male_text=_"terrorised"
	    female_text=_"female^terrorised"
            red,green,blue=196,196,196
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$terror[$t].x,$terror[$t].y
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(25,25,25)"
            [/effect]

            [effect]
                apply_to=attack
	        increase_damage=-25%
            [/effect]
        [/object]
	{NEXT t}
	{CLEAR_VARIABLE terror}
    [/event]
#define ABILITY_CREMATION
    [dummy]
        id=cremation
        name= _ "cremation"
        female_name= _ "female^cremation"
        description= _ "Incinerates bodies of units, killed near him, preventing effects of plague and undead curse"
    [/dummy]
#enddef
[event]
    id=cremation1
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	[filter_adjacent]
	    ability=plague aura
	[/filter_adjacent]
        [filter_location]
	    [not]
            	terrain=*^V*
	    [/not]
        [/filter_location]
	[filter_adjacent]
	    ability=cremation
	[/filter_adjacent]
    [/filter]
    [unstore_unit]
        variable=unit
        {COLOR_HARM}
        text= _ "CREMATED!"
        find_vacant=no
    [/unstore_unit]
    [kill]
	x=$x1
	y=$y1
	fire_event=no	
    [/kill]
[/event]
[event]
    id=cremation2
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	[filter_adjacent]
	    ability=cremation
	[/filter_adjacent]
    [/filter]
    [filter_second_attack]
	special=plague(Undead Zombie),curse of undead
    [/filter_second_attack]
    [unstore_unit]
        variable=unit
        {COLOR_HARM}
        text= _ "CREMATED!"
        find_vacant=no
    [/unstore_unit]
    [kill]
	x=$x1
	y=$y1
	fire_event=no	
    [/kill]
[/event]
[event]
    id=cremation3
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	status=darkmarked
	[filter_adjacent]
	    ability=cremation
	[/filter_adjacent]
    [/filter]
    [unstore_unit]
        variable=unit
        {COLOR_HARM}
        text= _ "CREMATED!"
        find_vacant=no
    [/unstore_unit]
    [kill]
	x=$x1
	y=$y1
	fire_event=no	
    [/kill]
[/event]
[event]
    id=cremation4
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
        canrecruit=yes
	[filter_adjacent]
	    ability=cremation
	[/filter_adjacent]
    [/filter]
    [filter_second]
        trait=undead leader
    [/filter_second]
    [unstore_unit]
        variable=unit
        {COLOR_HARM}
        text= _ "CREMATED!"
        find_vacant=no
    [/unstore_unit]
    [kill]
	x=$x1
	y=$y1
	fire_event=no	
    [/kill]
[/event]
#define ABILITY_ASSAULT
    [dummy]
        id=assault
        name= _ "assault"
        female_name= _ "female^assault"
        description= _ "When this unit kills an enemy which stands in castle in offense, it moves into place of killed unit. It doesn't work, if the unit already stands in castle"
    [/dummy]
#enddef

[event]
    id=assault1
    name=die
    first_time_only=no

    [filter]
        [filter_location]
	    terrain=C*
        [/filter_location]
    [/filter]
    [filter_side]
	side=$second_unit.side
    [/filter_side]
    [filter_second]
	ability=assault
	[not]
	    [filter_location]
	    	terrain=C*, K*
	    [/filter_location]
	[/not]
    [/filter_second]

    [store_unit]
	[filter]
	    x=$second_unit.x
	    y=$second_unit.y
	[/filter]
	variable=assaulter
	kill=yes
    [/store_unit]

    {VARIABLE assaulter.x $x1}
    {VARIABLE assaulter.y $y1}

    [move_unit_fake]
	x=$assaulter.x,$x1
	y=$assaulter.y,$y1
	type=$assaulter.type
	side=$assaulter.side
    [/move_unit_fake]

    [unstore_unit]
	variable=assaulter
	find_vacant=no
        male_text=_"broke into castle"
	female_text=_"female^broke into castle"
        {COLOR_HARM}
    [/unstore_unit]

    {CLEAR_VARIABLE assaulter}
[/event]

[event]
    id=assault2
    name=die
    first_time_only=no

    [filter]
        [filter_location]
	    terrain=K*
        [/filter_location]
    [/filter]
    [filter_side]
	side=$second_unit.side
    [/filter_side]
    [filter_second]
	ability=assault
	[not]
	    [filter_location]
	    	terrain=K*
	    [/filter_location]
	[/not]
    [/filter_second]

    [store_unit]
	[filter]
	    x=$second_unit.x
	    y=$second_unit.y
	[/filter]
	variable=assaulter
	kill=yes
    [/store_unit]

    {VARIABLE assaulter.x $x1}
    {VARIABLE assaulter.y $y1}

    [move_unit_fake]
	x=$assaulter.x,$x1
	y=$assaulter.y,$y1
	type=$assaulter.type
	side=$assaulter.side
    [/move_unit_fake]

    [unstore_unit]
	variable=assaulter
	find_vacant=no
        male_text=_"broke into citadel"
	female_text=_"female^broke into citadel"
        {COLOR_HARM}
    [/unstore_unit]

    {CLEAR_VARIABLE assaulter}
[/event]

#define ABILITY_SIEGE_LADDER
    [dummy]
        id=siege tower
        name= _ "siege tower"
        female_name= _ "female^siege tower"
        description= _ "When adjacent unit which stands in castle in killed, some adjacent ally unit will move into place of killed unit through this unit. Giant and flying units wouldn't benefit from that ability"
    [/dummy]
#enddef

[event]
    id=ladder1
    name=die
    first_time_only=no

    [filter]
        [filter_location]
	    terrain=C*
        [/filter_location]
	[filter_adjacent]
	    ability=siege tower
	[/filter_adjacent]
    [/filter]

    [if]
    [have_unit]
	x=$x1
	y=$y1
	[not]
	    id=$unit.id
	[/not]
    [/have_unit]
    [then]
    [/then]
    [else]
    	[store_unit]
	    [filter]
            	[filter_location]
		    [not]
	    	    	terrain=C*, K*
		    [/not]
            	[/filter_location]
	    	[filter_adjacent]
	    	    ability=siege tower
		    is_enemy=no
	    	    [filter_adjacent]
		    	x=$x1
		    	y=$y1
	    	    [/filter_adjacent]
	    	[/filter_adjacent]
	    	[not]
		    {IS_BIG}
		    [or]
		    	{IS_CAN_FLY}
	 	    [/or]
	    	[/not]
	    [/filter]
	    variable=assaulter
	    kill=no
    	[/store_unit]

    	[if]
    	[have_unit]
	    id=$assaulter[0].id
    	[/have_unit]
    	[then]
    	    [kill]
		id=$assaulter[0].id
		animate=no
		fire_event=no
    	    [/kill]
    	    {VARIABLE assaulter[0].x $x1}
    	    {VARIABLE assaulter[0].y $y1}

    	    [move_unit_fake]
		x=$assaulter[0].x,$x1
		y=$assaulter[0].y,$y1
		type=$assaulter[0].type
		side=$assaulter[0].side
    	    [/move_unit_fake]

    	    [unstore_unit]
	    	variable=assaulter[0]
	    	find_vacant=no
             	text=_"broke into castle"
		female_text=_"female^broke into castle"
             	{COLOR_HARM}
    	    [/unstore_unit]

    	    {CLEAR_VARIABLE tmp_assault_text}
    	[/then]
    	[/if]
    	{CLEAR_VARIABLE assaulter}
    [/else]
    [/if]
[/event]
[event]
    id=ladder2
    name=die
    first_time_only=no

    [filter]
        [filter_location]
	    terrain=K*
        [/filter_location]
	[filter_adjacent]
	    ability=siege tower
	[/filter_adjacent]
    [/filter]

    [if]
    [have_unit]
	x=$x1
	y=$y1
	[not]
	    id=$unit.id
	[/not]
    [/have_unit]
    [then]
    [/then]
    [else]
    	[store_unit]
	    [filter]
            	[filter_location]
		    [not]
	    	    	terrain=K*
		    [/not]
            	[/filter_location]
	    	[filter_adjacent]
	    	    ability=siege tower
		    is_enemy=no
	    	    [filter_adjacent]
		    	x=$x1
		    	y=$y1
	    	    [/filter_adjacent]
	    	[/filter_adjacent]
	    	[not]
		    {IS_BIG}
		    [or]
		    	{IS_CAN_FLY}
	 	    [/or]
	    	[/not]
	    [/filter]
	    variable=assaulter
	    kill=no
    	[/store_unit]

    	[if]
    	[have_unit]
	    id=$assaulter[0].id
    	[/have_unit]
    	[then]
    	    [kill]
		id=$assaulter[0].id
		animate=no
		fire_event=no
    	    [/kill]
    	    {VARIABLE assaulter[0].x $x1}
    	    {VARIABLE assaulter[0].y $y1}

    	    [move_unit_fake]
		x=$assaulter[0].x,$x1
		y=$assaulter[0].y,$y1
		type=$assaulter[0].type
		side=$assaulter[0].side
    	    [/move_unit_fake]

    	    [unstore_unit]
	    	variable=assaulter[0]
	    	find_vacant=no
             	female_text=_"female^broke into castle"
		male_text="broke into castle"
             	{COLOR_HARM}
    	    [/unstore_unit]

    	[/then]
    	[/if]
    	{CLEAR_VARIABLE assaulter}
    [/else]
    [/if]
[/event]

#define ABILITY_AURA_OF_LIGHT
    [illuminates]
        id=lightaura
        value=25
        max_value=25
        cumulative=no
        name= _ "aura of light"
        female_name= _ "female^aura of light"
        description= _ "This unit illuminates the surrounding area, making units with night pupils to see worse and units with daily pupils to see better"
        affect_self=yes
    [/illuminates]
#enddef
#define ABILITY_DARKNESS_COVER
    [illuminates]
        id=darknesscover
        value=-25
        min_value=-25
        cumulative=no
        name= _ "cover of darkness"
        female_name= _ "female^cover of darkness"
        description= _ "This unit shades the surrounding area, making units with daily pupils to see worse and units with night pupils to see better"
        affect_self=yes
    [/illuminates]
#enddef
#define ABILITY_IMPENETRABLE_DARKNESS
    [illuminates]
        id=eternalnight
        value=-50
        min_value=-25
        cumulative=no
        name= _ "impenetrable darkness"
        female_name= _ "female^impenetrable darkness"
        description= _ "This unit shades the surrounding area, always staying in the impenetrable gloom"
        affect_self=yes
    [/illuminates]
#enddef
#define ABILITY_SI_YAH_KAN ARG
    [regenerate]
        value={ARG}
        id=si_yah_kan
        name= _ "si'yah'kan"
        female_name= _ "female^si'yak'kan"
        description= _ "Ability of dark mages, which heals some HP in beginning of every turn. Power of si'yah'kan increases with level of unit"
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef
#define ABILITY_KE_MIK_AD_JI ARG
    [regenerate]
        value={ARG}
        id=ke_mik_ad_ji
        name= _ "ke'mik'ad'ji"
        female_name= _ "female^ke'mik'ad'ji"
        description= _ "Ability of liches, which heals some HP in beginning of every turn. Power of ke'mik'ad'ji increases with level of unit"
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef
#define ABILITY_SPAWN_OF_DARKNESS
    [dummy]
        id=dark spawn
        name= _ "spawn of darkness"
        female_name= _ "female^spawn of darkness"
        description= _ "This unit regenerates 8 HP per turn at night and 4 HP per turn at twilight"
        description_inactive= _ "This unit regenerates 8 HP per turn at night and 4 HP per turn at twilight.
Doesn't work at daytime. BEWARE of illuminating auras of light mages!"
        [filter]
	    [filter_location]
		time_of_day=neutral,chaotic
	    [/filter_location]
        [/filter]
    [/dummy]
    [regenerate]
        value=4
        id=dark spawn1
        affect_self=yes
        poison=cured
        [filter]
	    [filter_location]
		time_of_day=neutral
	    [/filter_location]
        [/filter]
    [/regenerate]
    [regenerate]
        value=8
        id=dark spawn2
        affect_self=yes
        poison=cured
        [filter]
	    [filter_location]
		time_of_day=chaotic
	    [/filter_location]
        [/filter]
    [/regenerate]
#enddef
#define ABILITY_OUROBOROS
    [dummy]
        id=ouroboros
        name= _ "ouroboros"
        female_name= _ "female^ouroboros"
        description= _ "Serpent eating its own tail is symbol of re-creating and eternal return. After any encounter unit gets AMLA: +3 HP and full healing"
    [/dummy]
#enddef
    [event]
	name=attack end
        id=ouroboros_event
    	first_time_only=no
    	[filter]
	    ability=ouroboros
   	[/filter]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]	
    [/event]
    [event]
	name=attack end
        id=ouroboros_event2
    	first_time_only=no
    	[filter_second]
	    ability=ouroboros
   	[/filter_second]
    	{ADVANCE_UNIT (x,y=$x2,$y2) ()}
    	[heal_unit]
	    [filter]
	   	x=$x2
	   	y=$y2
	    [/filter]
	    amount=full
    	[/heal_unit]	
    [/event]
#define ABILITY_MARINE_BROTHERHOOD
    [resistance]
        id=marine brotherhood
        name= _ "marine brotherhood"
        female_name= _ "female^marine brotherhood"
        description= _ "Unit's blade, pierce, impact and arcane resistance increases by 10% for each adjacent ally with same ability"
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood1
        add=10
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=1
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood2
        add=20
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=2
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood3
        add=30
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=3
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood4
        add=40
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=4
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood5
        add=50
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=5
            [/filter_adjacent]
        [/filter]
    [/resistance]
    [resistance]
        id=marine brotherhood6
        add=60
	max_value=100
	apply_to=pierce,blade,impact,arcane
        affect_self=yes
        [filter]
            [filter_adjacent]
                is_enemy=no
		ability=marine brotherhood
		count=6
            [/filter_adjacent]
        [/filter]
    [/resistance]
#enddef
#define ABILITY_MAGICAL_SHIELD
    [resistance]
        id=magical shield
        add=25
	max_value=100
	apply_to=fire,cold,arcane
        name= _ "magical shield"
        female_name= _ "female^magical shield"
        description= _ "This unit have 25% more of fire, cold and arcane resistance but only in defense"
        affect_self=yes
        active_on=defense
    [/resistance]
#enddef
#define ABILITY_SHELTER
    [resistance]
        id=shelter
        add=10
	max_value=100
	apply_to=pierce,impact,blade,fire,cold
        name= _ "shelter"
        female_name= _ "female^shelter"
        description= _ "This unit increases resistance of adjacent ally units by 10% (except their arcane resistance). This ability active only in defense and doesn't affect mounted, giant and heavy armored untis"
        affect_self=no
        active_on=defense
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    {IS_SHIELDED}
		    [or]
			{IS_BIG}
		    [/or]
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
    {FLAG_SHIELDED}
#enddef
#define ABILITY_CHIEF_GANGSTERS
    [resistance]
        id=chief_gangsters
        add=20
	max_value=100
	apply_to=pierce,impact,blade
        name= _ "chief"
        female_name= _ "female^chief"
        description= _ "Рhysical resistance of all adjacent ally units of lesser levels which possess ''vile'' trait increased by 20%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_VILLAIN}
		formula=($this_unit.level < $other_unit.level)
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_CHIEF_ORCS
    [resistance]
        id=chief_orcs
        add=20
	max_value=100
	apply_to=pierce,impact,blade
        name= _ "chief"
        female_name= _ "female^chief"
        description= _ "Рhysical resistance of all adjacent ally orces of lesser levels increased by 20%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_orc
		formula=($this_unit.level < $other_unit.level)
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_CHIEF_GOBLINS
    [resistance]
        id=chief_goblins
        add=20
	max_value=100
	apply_to=pierce,impact,blade
        name= _ "chief"
        female_name= _ "female^chief"
        description= _ "Рhysical resistance of all adjacent ally goblins of lesser levels increased by 20%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_goblin
		formula=($this_unit.level < $other_unit.level)
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_CHIEF_WOLVES
    [resistance]
        id=chief_wolves
        add=20
	max_value=100
	apply_to=pierce,impact,blade
        name= _ "chief"
        female_name= _ "female^chief"
        description= _ "Рhysical resistance of all adjacent ally wolves of lesser levels increased by 20%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_WOLF}
		formula=($this_unit.level < $other_unit.level)
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_DISCIPLINE_1
    [resistance]
        id=discipline1
        add=20
	max_value=100
	apply_to=pierce,impact,blade,arcane
        name= _ "discipline"
        female_name= _ "female^discipline"
        description= _ "Physical and arcane resistance of all adjacent ally humans of 1st and 2nd level increased by 20%"
        affect_self=no
	affect_allies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_human
		[and]
		    level=1
		    [or]
		        level=2
		    [/or]
		[/and]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_DISCIPLINE_2
    [resistance]
        id=discipline2
        add=25
	max_value=100
	apply_to=pierce,impact,blade,arcane
        name= _ "discipline"
        female_name= _ "female^discipline"
        description= _ "Physical and arcane resistance of all adjacent ally humans of 1st, 2nd and 3rd level increased by 20%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_human
		[and]
		    level=1
		    [or]
		    	level=2
		    	[or]
		    	    level=3
		    	[/or]
		    [/or]
		[/and]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_PROTECTION
    [resistance]
        id=protection
        add=20
	max_value=100
        name= _ "protection"
        female_name= _ "female^protection"
        description= _ "This unit increases resistance of adjacent ally units by 20% (except their arcane resistance). This ability active only in defense and doesn't affect mounted, giant and heavy armored untis"
        affect_self=no
        active_on=defense
	apply_to=pierce,impact,blade,fire,cold
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    {IS_SHIELDED}
		    [or]
			{IS_BIG}
		    [/or]
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
    {FLAG_SHIELDED}
#enddef
#define ABILITY_REFUGE
    [resistance]
        id=refuge
        add=20
	max_value=100
        name= _ "refuge"
        female_name= _ "female^refuge"
        description= _ "This unit increases resistance of adjacent ally units by 20% (except their arcane resistance). This ability active only in defense"
        affect_self=no
        active_on=defense
	apply_to=pierce,impact,blade,fire,cold
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/resistance]
    {FLAG_SHIELDED}
#enddef
#define ABILITY_TESTUDO
    [resistance]
        id=testudo
        add=10
	max_value=100
	apply_to=pierce,impact,blade,cold,fire
        name= _ "testudo"
        female_name= _ "female^testudo"
        description= _ "Testudo is defensive formation. All non-arcane resistances are 10% greater when unit defenses. Unit also gain ability to inflitrate enemy formation, ignoring Zones of Control"
        affect_self=yes
        active_on=defense
    [/resistance]
    [skirmisher]
        id=testudo2
        affect_self=yes
    [/skirmisher]
    {FLAG_SHIELDED}
#enddef
#define ABILITY_CLOAKING
    [hides]
        id=cloaking
        name= _ "cloaking"
        female_name= _ "female^cloaking"
        description= _ "This unit can hide in forests, hills, mountains and fungus groves, remaining undetected by its enemies, until they come too close"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^F*,H*,M*,*^Uf*
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_OUTLAW
    [hides]
        id=outlaw
        name= _ "outlaw"
        female_name= _ "female^outlaw"
        description= _ "This unit can hide in forests, hills, mountains and fungus groves, except cases when it's in or near village"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^F*,H*,M*,*^Uf*
		[not]
		    terrain=*^V*
		    [or]
            		[filter_adjacent_location]
                    	    terrain=*^V*
            		[/filter_adjacent_location]
		    [/or]
		[/not]
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_REBEL
    [dummy]
        id=rebel
        name= _ "rebel"
        female_name= _ "female^rebel"
        description= _ "Unit gains 2 gold coins each time it captures a village and also kills all the Wesnoth patriots inside. At battle unit independently chooses targets for his attacks"
    [/dummy]
#enddef
    [event]
	id=pillage
        name=capture
        first_time_only=no
	[filter]
	    ability=rebel
	[/filter]
        [gold]
	    amount=2
	    side=$unit.side
	[/gold]
	[unstore_unit]
            variable=unit
	    find_vacant=no
	    text=_"PILLAGE!"
	    {COLOR_HARM}
	[/unstore_unit]
	[store_locations]
	    find_in=human_villages
	    [not]
		x=$x1
		y=$y1
	    [/not]
	    variable=human_villages2
	[/store_locations]
	[set_variables]
	    name=human_villages
	    to_variable=human_villages2
	[/set_variables]
	{CLEAR_VARIABLE human_villages2}
    [/event]
[event]
    id=unauthorized_attack
    name=unauthorized_attack
    first_time_only=no
#choosing target - other rebel first, then any other enemies sorted in ascending of level
    [if]
    [have_unit]
	[filter_adjacent]
	    x=$unit.x
	    y=$unit.y
	    is_enemy=yes
	[/filter_adjacent]
    [/have_unit]
    [then]
	[if]
	[have_unit]
	    ability=rebel
	    [filter_adjacent]
		x=$unit.x
		y=$unit.y
		is_enemy=yes
	    [/filter_adjacent]
	[/have_unit]
	[then]
	    [store_unit]
		[filter]
	    	    ability=rebel
	    	    [filter_adjacent]
			x=$unit.x
			y=$unit.y
			is_enemy=yes
	    	    [/filter_adjacent]
		[/filter]
		variable=targ
		kill=no
	    [/store_unit]
	[/then]
	[else]
	    [if]
	    [have_unit]
		level=1
	    	[filter_adjacent]
		    x=$unit.x
		    y=$unit.y
		    is_enemy=yes
	    	[/filter_adjacent]
	    [/have_unit]
	    [then]
	    	[store_unit]
		    [filter]
	    	    	level=1
	    	    	[filter_adjacent]
			    x=$unit.x
			    y=$unit.y
			    is_enemy=yes
	    	    	[/filter_adjacent]
		    [/filter]
		    variable=targ
		    kill=no
	    	[/store_unit]
	    [/then]
	    [else]
	    	[if]
	    	[have_unit]
		    level=2
	    	    [filter_adjacent]
		    	x=$unit.x
		    	y=$unit.y
		    	is_enemy=yes
	    	    [/filter_adjacent]
	    	[/have_unit]
	    	[then]
	     	    [store_unit]
		    	[filter]
	    	     	    level=2
	    	    	    [filter_adjacent]
			    	x=$unit.x
			    	y=$unit.y
			    	is_enemy=yes
	    	    	    [/filter_adjacent]
		    	[/filter]
		    	variable=targ
		    	kill=no
	    	    [/store_unit]
	    	[/then]
	    	[else]
	    	    [if]
	    	    [have_unit]
		    	level=3
	    	    	[filter_adjacent]
		    	    x=$x1
		    	    y=$y1
		    	    is_enemy=yes
	    	    	[/filter_adjacent]
	    	    [/have_unit]
	    	    [then]
	     	    	[store_unit]
		    	    [filter]
	    	     	    	level=3
	    	    	    	[filter_adjacent]
			    	    x=$unit.x
			    	    y=$unit.y
			    	    is_enemy=yes
	    	    	    	[/filter_adjacent]
		    	    [/filter]
		    	    variable=targ
		    	    kill=no
	    	    	[/store_unit]
	    	    [/then]
	    	    [else]
	     	    	[store_unit]
		    	    [filter]
	    	    	    	[filter_adjacent]
			    	    x=$unit.x
			    	    y=$unit.y
			    	    is_enemy=yes
	    	    	    	[/filter_adjacent]
		    	    [/filter]
		    	    variable=targ
		    	    kill=no
	    	    	[/store_unit]
	    	    [/else]
	    	    [/if]
	    	[/else]
	    	[/if]
	    [/else]
	    [/if]
	[/else]
	[/if]   
#choosing attack
	{VARIABLE current 0}
	{VARIABLE basic 100}
	[set_variables]
	    name=opponent
	    to_variable=targ[0]
	[/set_variables]
	{VARIABLE opponent $targ[0]}
	{FOREACH unit.attack an}
	     [if]
	     [variable]
		 name=opponent.resistance.$unit.attack[$current].type
		 greater_than_equal_to=$basic
	     [/variable]
	     [then]
		{VARIABLE basic $opponent.resistance.$unit.attack[$current].type}
		{VARIABLE current $an}	
	     [/then]
	     [/if]
	{NEXT an}
#choosing opponent's attack
    	{VARIABLE counter "xyz"}
    	{FOREACH opponent.attack att2}
	    [if]
	    [variable]
		name=opponent.attack[$att2].range
		equals=$unit.attack[$current].range
	    [/variable]
	    [then]
		{VARIABLE counter $att2}
		[break]
		[/break]
	    [/then]
	    [/if]
    	{NEXT att2}
#attack
    	[do_command]
	    [attack]
	        [source]
		    x=$unit.x
		    y=$unit.y
	    	[/source]
	    	[destination]
		    x=$opponent.x
		    y=$opponent.y
	    	[/destination]
	    	weapon=$current
	    	defender_weapon=$counter
	    [/attack]
    	[/do_command]
	{CLEAR_VARIABLE targ}    
	{CLEAR_VARIABLE opponent}    
	{CLEAR_VARIABLE current}
	{CLEAR_VARIABLE counter}
	{CLEAR_VARIABLE basic}
    [/then]
    [/if]
[/event]
    [event]
	id=unauthorized_attack_event
        name=moveto
        first_time_only=no
	[filter]
	    ability=rebel
	    [filter_adjacent]
		is_enemy=yes
	    [/filter_adjacent]
	[/filter]	
	[fire_event]
	    name=unauthorized_attack
	    [primary_unit]
		x=$x1
		y=$y1
	    [/primary_unit]
	[/fire_event]
    [/event]
#define ABILITY_HIDE_TREES
    [hides]
        id=hide trees
        name= _ "hide in trees"
        female_name= _ "female^hide in trees"
        description= _ "This unit can hide in forests remaining undetected by its enemies, until they come too close"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^F*
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_HIDE_SANDS
    [hides]
        id=hide sands
        name= _ "hide in sands"
        female_name= _ "female^hide in sands"
        description= _ "This unit can hide in sands remaining undetected by its enemies, until they come too close"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=D*,Hd
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_HIDE_SNOWS
    [hides]
        id=hide snows
        name= _ "hide in snow"
        female_name= _ "female^hide in snow"
        description= _ "This unit can hide in snow remaining undetected by its enemies, until they come too close"
	alert= _ "CREPT UNNOTICED!"
        affect_self=yes
        [filter]
            [filter_location]
                {IS_TERRAIN_SNOW}
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_SUBMARINE
    [hides]
        id=submarine
        name= _ "submerge"
        female_name= _ "female^submerge"
        description= _ "This unit can hide in deep water remaining undetected by its enemies, until they come too close. When unit is under water, its resistance to fire attacks is 100%, but its resistance to cold attacks is -100%"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=Wo*
            [/filter_location]
        [/filter]
    [/hides]
    [resistance]
        id=submarine2
        value=100
	apply_to=fire
	max_value=100
        affect_self=yes
	[filter]
            [filter_location]
            	terrain=Wo*
            [/filter_location]
        [/filter]
    [/resistance]
    [resistance]
        id=submarine3
        value=-100
	apply_to=cold
        affect_self=yes
	[filter]
            [filter_location]
                terrain=Wo*
            [/filter_location]
        [/filter]
    [/resistance]
#enddef
#define ABILITY_PEST
    [hides]
        id=pest
        name= _ "pest"
        female_name= _ "female^pest"
        description= _ "This unit can hide in villages and castles, remaining undetected by its enemies, until they come too close"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^V*, C*, K*
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_DIVING
    [hides]
        id=diving
        name= _ "diving"
        female_name= _ "female^diving"
        description= _ "This unit can hide in swamps or in shallow water, remaining undetected by its enemies, until they come too close"
        affect_self=yes
        [filter]
            [filter_location]
                terrain=S*,Ww*
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_CLEANER
    [dummy]
        id=cleaner
        name= _ "cleaner"
        female_name= _ "female^cleaner"
        description= _ "Unit receives twice more gold with its ''vile'' trait. Bodies of units, killed by unit with this ability would be never found..."
    [/dummy]
#enddef
#define ABILITY_MAFIOSI_1
    [dummy]
        id=mafiosi1
        name= _ "mafiosi"
        female_name= _ "female^mafiosi"
        description= _ "Adjacent ally humans of 1st and 2nd level bring twice more gold with their ''vile'' trait"
    [/dummy]
#enddef
#define ABILITY_MAFIOSI_2
    [dummy]
        id=mafiosi2
        name= _ "mafiosi"
        female_name= _ "female^mafiosi"
        description= _ "Adjacent ally humans of 1st, 2nd and 3rd level bring twice more gold with their ''vile'' trait"
    [/dummy]
#enddef
#define ABILITY_NOBLE_GOAL
    [dummy]
        id=noble_goal
        name= _ "noble goal"
        female_name= _ "female^noble goal"
        description= _ "Adjacent allies of ''dogdy'' alignment recieve bonus of ''noble'' alignment"
    [/dummy]
#enddef
#define ABILITY_FOLLOW_ME
    [dummy]
        id=follow_me
        name= _ "follow me and we'll rule world together!"
        female_name= _ "female^follow me and we'll rule world together!"
        description= _ "Allies willingly follow this unit and lend him their strength, as a result, it receives bonuses of alignments, even if there are only two adjacent units of the same alignment. Thus, this unit can receive bonuses of different alignments at the same time and they will stack"
    [/dummy]
#enddef
#define ABILITY_UNDERCOVER
    [hides]
        id=undercover
        name= _ "undercover"
        female_name= _ "female^undercover"
        description= _ "This unit can hide in villages remaining undetected by its enemies, until they come too close. When some unit reveals presence of the unit, it loses it's opportunity to attack at this turn"
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=*^V*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef
[event]
    id=undercover_revealed
    name=moveto
    first_time_only=no
    [filter]
	[filter_adjacent]
	    is_enemy=yes
	    ability=undercover
	    [and]
            	[filter_location]
             	    terrain=*^V*
	    	    [not]
			[filter_adjacent_location]
		     	    x=$x2
		     	    y=$y2
			[/filter_adjacent_location]
	    	    [/not]
            	[/filter_location]
	    [/and]
	    [not]
		[filter_adjacent]
		    is_enemy=yes
		    count=2-6
		[/filter_adjacent]
	    [/not]
	[/filter_adjacent]
    [/filter]
    {VARIABLE unit.attacks_left 0}
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "TRICKED!"
        red,green,blue=64,64,64
    [/unstore_unit]
[/event]
#define ABILITY_CONSPIRACY
    [hides]
        id=conspiracy
        name= _ "conspiracy"
        female_name= _ "female^conspiracy"
        description= _ "This unit can hide in villages and castles, remaining undetected by its enemies, until they come too close and allows adjacent ally humans of 1st and 2nd level to do the same"
        affect_self=yes
	affect_allies=yes
        [filter_self]
            [filter_location]
                terrain=*^V*, C*, K*
            [/filter_location]
        [/filter_self]
	[affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_human
		[filter_location]
                    terrain=*^V*, C*, K*
            	[/filter_location]
		[and]
		    level=1
		    [or]
		    	level=2
		    [/or]
		[/and]
            [/filter]
	[/affect_adjacent]
    [/hides]
#enddef
#define ABILITY_SMOKESCREEN
    [hides]
        id=smokescreen
        name= _ "smokescreen"
        female_name= _ "female^smokescreen"
        description= _ "This unit creates smokescreen around him, creating fog of war and remaining undetected in any terrain, and make invisible all adjacent units of small and medium size"
        affect_self=yes
	affect_allies=yes
	affect_enemies=yes
	[affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    {IS_BIG}
		[/not]
            [/filter]
	[/affect_adjacent]
    [/hides]
#enddef
[event]
    id=smokescreen_placed
    name=recruit, recall, post advance
    first_time_only=no

    [filter]
        ability=smokescreen
    [/filter]
    [reset_fog]
	[filter_side]
	[/filter_side]
	[filter_adjacent]
	    x=$x1
	    y=$y1
	[/filter_adjacent]
    [/reset_fog]
    [item]
	x,y=$x1,$y1
	halo="halo/smoke.png"
	visible_in_fog=no
    [/item]
[/event]
[event]
    id=smokescreen_move
    name=moveto
    first_time_only=no

    [filter]
        ability=smokescreen
    [/filter]
    [reset_fog]
	[filter_side]
	[/filter_side]
	[filter_adjacent]
	    x=$x1
	    y=$y1
	[/filter_adjacent]
    [/reset_fog]
    [remove_item]
	x,y=$x2,$y2
	image="halo/smoke.png"
	visible_in_fog=no
    [/remove_item]
    [item]
	x,y=$x1,$y1
	halo="halo/smoke.png"
	visible_in_fog=no
    [/item]
[/event]
#define ABILITY_AURA_OF_VALOR
    [resistance]
        id=aura of valor
        add=10
	apply_to=arcane,blade,impact
	max_value=100
        name= _ "aura of valor"
        female_name= _ "female^aura of valor"
        description= _ "This unit increases arcane, blade and impact resistance of adjacent ally units by 10% and their pierce resistance by 5%. This ability affects unit itself but doesn't affect undead"
        affect_self=yes
     	affect_allies=yes
     	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
    [resistance]
        id=aura of valor2
        add=5
	apply_to=pierce
	max_value=100
     	affect_allies=yes
     	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_AURA_OF_DISMAY
    [resistance]
        id=aura of dismay
        sub=10
	apply_to=arcane,blade,impact
	max_value=100
        name= _ "aura of dismay"
        female_name= _ "female^aura of dismay"
        description= _ "This unit decreases arcane, blade and impact resistance of adjacent units by 10% and their pierce resistance by 5%. This ability doesn't affect undead"
     	affect_allies=yes
     	affect_enemies=yes
     	affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
    [resistance]
        id=aura of dismay2
        sub=5
	apply_to=pierce
	max_value=100
     	affect_allies=yes
     	affect_enemies=yes
	affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_FLY_HIGH
   [skirmisher]
        id=fly high
        name= _ "fly high"
        female_name= _ "female^fly high"
        description= _ "This unit has double vision rate. It hasn't Zone of Control and ignores ZoC of other units, but not when it's in village or cave"
        affect_self=yes
	[filter_self]
            [filter_location]
		[not]
            	    terrain=*^V*,U*
		[/not]
            [/filter_location]
	[/filter_self]
    [/skirmisher]
#enddef
#define ABILITY_PENETRATION
   [skirmisher]
        id=penetration
        name= _ "penetration"
        female_name= _ "female^penetration"
        description= _ "This unit ignores Zones of Control of 1st level units"
        description_inactive= _ "This unit ignores Zones of Control of 1st level units
TAKE NOTICE, that even one highlevel unit around will deprive you of the ability to penetrate ZoC"
        affect_self=yes
	[filter]
	    [not]
	    	ability_type_active=penetration_disable
	    [/not]
	[/filter]
    [/skirmisher]
    [penetration_disable]
	id=penetration_disable
	[filter]
	    [filter_adjacent]	
	        is_enemy=yes
		[not]
                    level=1
		[/not]   
	    [/filter_adjacent]
	[/filter]
    [/penetration_disable]
#enddef
#define ABILITY_FORGOTTEN_TACTIC
    [skirmisher]
        id=forgotten tactic
        name= _ "forgotten tactic"
        female_name= _ "female^forgotten tactic"
        description= _ "Using unknown tactic, this unit allows its allies to ignore enemy Zones of Control around it"
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
	     adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/skirmisher]
#enddef
#define ABILITY_WRAITH
   [skirmisher]
        id=wraith
        name= _ "wraith"
        female_name= _ "female^wraith"
	description= _ "This unit ignores Zones of Control of living units with help of visual hallucinations"
        description_inactive= _ "This unit ignores Zones of Control of living units with help of visual hallucinations
TAKE NOTICE, that even one un-living unit around will deprive you of the ability to penetrate ZoC"
        affect_self=yes
	[filter]
	    [not]
	    	ability_type_active=wraith_disable
	    [/not]
	[/filter]
    [/skirmisher]
    [wraith_disable]
	id=wraith_disable
	[filter]
	    [filter_adjacent]	
	        is_enemy=yes
		race=SA_undead,SA_mechanical,SA_spirit
	    [/filter_adjacent]
	[/filter]
    [/wraith_disable]
#enddef
#define ABILITY_BANNER_ROYAL
   [leadership]
        id=banner_royal
        value=20
        cumulative=no
        name= _ "banner"
        female_name= _ "female^banner"
        description= _ "All adjacent ally soldiers of the Royal Army and bannerman itself will inflict 20% more damage"
        affect_self=yes
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_ROYAL_MAN}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_PROTECT_BANNER_ROYAL
    [dummy]
        id=banner_royal_protect
        name= _ "protect banner"
        female_name= _ "female^protect banner"
        description= _ "When unit dies, if there is adjacent ally royal infantryman of 1st level, the latter gain the banner and immediately upgrades to Bannerman"
    [/dummy]
#enddef
#define ABILITY_BANNER_UNION
   [leadership]
        id=banner_union
        value=20
        cumulative=no
        name= _ "banner"
        female_name= _ "female^banner"
        description= _ "All adjacent ally undead soldiers and bannerman itself will inflict 20% more damage"
        affect_self=yes
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_UNDEAD_WARRIOR}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_BANNER_REBEL
   [leadership]
        id=banner_rebel
        value=-20
        cumulative=no
        name= _ "anarchist banner"
        female_name= _ "female^anarchist banner"
        description= _ "All adjacent living units which are not possess same ability will inflict 20% less damage, while adjacent units with same ability will inflict 20% more damage"
        affect_self=no
	affect_allies=yes
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    ability=banner_rebel
		    [or]
			trait=fearless
		    [/or]
		[/not]
		[and]
		    [not]
		    	race=SA_undead,SA_mechanical,SA_spirit
		    [/not]
		[/and]
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=banner_rebel2
        value=20
        cumulative=no
        affect_self=no
	affect_allies=yes
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
	    [filter]
            	ability=banner_rebel2
	    [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_BANNER_SYNDICATE
   [leadership]
        id=banner_syndicate
        value=20
        cumulative=no
        name= _ "banner"
        female_name= _ "female^banner"
        description= _ "All adjacent ally vile units and bannerman itself will inflict 20% more damage"
        affect_self=yes
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		trait=vile
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_BANNER_HORDE
   [leadership]
        id=banner_horde
        value=20
        cumulative=no
        name= _ "banner"
        female_name= _ "female^banner"
        description= _ "All adjacent ally orcs, goblins and trolls including bannerman itself will inflict 20% more damage. Doesn't affect mechs"
        affect_self=yes
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_orc, SA_goblin, SA_troll
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_NECROMANCY
    [resistance]
        id=necromancy
        add=10
	apply_to=pierce,blade,impact,cold,fire
	max_value=100
        name= _ "power of necromancer"
        female_name= _ "female^power of necromancer"
        description= _ "Forces adjacent ally undead warriors to fight better, inflicting 20% more damage, and to protect necromancer, increases all of its resistances, except arcane, by 10%"
        affect_self=yes
        active_on=defense
	[filter]
	    [filter_adjacent]
	    	{IS_UNDEAD_WARRIOR}
	    [/filter_adjacent]
	[/filter]
    [/resistance]
    [leadership]
        id=necromancy1
        value=20
        cumulative=no
        affect_self=no
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_UNDEAD_WARRIOR}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_UNDEAD_KING_CALL
    [resistance]
        id=undead king call
        add=10
	apply_to=pierce,blade,impact,cold,fire
        name= _ "call of undead king"
        female_name= _ "female^call of undead queen"
        description= _ "Forces adjacent ally undead warriors to fight better, inflicting 40% more damage, and to protect undead king, increases all of its resistances, except arcane, by 10%"
	max_value=100
        affect_self=yes
        active_on=defense
	[filter]
	    [filter_adjacent]
	    	{IS_UNDEAD_WARRIOR}
	    [/filter_adjacent]
	[/filter]
   [/resistance]
   [leadership]
        id=undead king call1
        value=40
        cumulative=no
        affect_self=no
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_UNDEAD_WARRIOR}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_RELIC
   [leadership]
        id=holy_relic
        value=20
        cumulative=no
        name= _ "relic"
        female_name= _ "female^relic"
        description= _ "Holy relic mystically increases damage of adjacent mages by 20%, protects its holder from any non-arcane attacks and inflicts damage to adjacent undead in beginning of every turn"
        affect_self=yes
     	affect_enemies=yes
     	affect_allies=yes	
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_MAGE}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_HOMAGE
    [leadership]
        id=homage
        value=100
        cumulative=no
        name= _ "homage"
        female_name= _ "female^homage"
        description= _ "This unit increases damage inflicted by adjacent ally militiamen by 100%"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                type=Royal Militiaman
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_LEADER_1
    [leadership]
        id=leadership1
        value=25
        cumulative=no
        name= _ "leadership"
        female_name= _ "female^leadership"
        description= _ "This unit can lead our own units that are next to it, making them fight better.
1st level units will inflict 25% more damage.
This ability doesn't affect mages"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_LEADER_2
    [leadership]
        id=leadership2
        value=50
        cumulative=no
        name= _ "leadership"
        female_name= _ "female^leadership"
        description= _ "This unit can lead our own units that are next to it, making them fight better.
1st level units will inflict 50% more damage.
2nd level units will inflict 25% more damage.
This ability doesn't affect mages"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=leadership21
        value=25
        cumulative=no
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_LEADER_3
    [leadership]
        id=leadership31
        value=100
        cumulative=no
        name= _ "leadership"
        female_name= _ "female^leadership"
        description= _ "This unit can lead our own units that are next to it, making them fight better.
1st level units will inflict 100% more damage.
2nd level units will inflict 50% more damage.
3rd level units will inflict 25% more damage.
This ability doesn't affect mages"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=leadership32
        value=50
        cumulative=no
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=leadership33
        value=25
        cumulative=no
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
		[not]
		    {IS_MAGE}
		[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_SNAKE_AUTHORITY
   [leadership]
        id=snake_authority
        value=20
        cumulative=no
        name= _ "snake authority"
        female_name= _ "female^snake authority"
        description= _ "Unit can cures himself and his allies from poison, including eternal poison. Unit also increases damage of adjacent ally snakes by 20% and decreases damage of adjacent enemy snakes by 20%. This ability in either of its aspects doesn't affect units with same ability"
        affect_self=no
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		type=Monster Rattlesnake,Monster Water Snake,Monster Tree Snake,Monster Wise Serpent,Monster Sea Serpent
            [/filter]
        [/affect_adjacent]
   [/leadership]
   [leadership]
        id=snake_authority2
        value=-20
        cumulative=no
        affect_self=no
	affect_allies=no
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		type=Monster Rattlesnake,Monster Water Snake,Monster Tree Snake,Monster Wise Serpent,Monster Sea Serpent
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [heals]
	id=snake_authority3
        affect_allies=yes
        affect_self=yes
        poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_SAILORS_AUTHORITY
   [leadership]
        id=sailors_authority
        value=20
        cumulative=no
        name= _ "sailors authority"
        female_name= _ "female^sailors authority"
        description= _ "Unit increases damage of adjacent ally sailors by 20% and decreases damage of adjacent enemy sailors by 20%. Sailors can't drink rum in unit's presence. This ability in either of its aspects doesn't affect units with same ability"
        affect_self=no
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		ability=marine brotherhood
	    	[not]
		     ability=sailors_authority
	    	[/not]
            [/filter]
        [/affect_adjacent]
   [/leadership]
   [leadership]
        id=sailors_authority2
        value=-20
        cumulative=no
        affect_self=no
	affect_allies=no
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		ability=marine brotherhood
	    	[not]
		     ability=sailors_authority
	    	[/not]
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_CRIMINAL_AUTHORITY
   [leadership]
        id=criminal_authority
        value=20
        cumulative=no
        name= _ "criminal authority"
        female_name= _ "female^criminal authority"
        description= _ "Unit increases damage of adjacent ally criminals by 20% and decreases damage of adjacent enemy criminals by 20%. Any unit with ''vile'' trait considered as criminal. If unit dies, criminals wouldn't rob his corpse. This ability in either of its aspects doesn't affect units with same ability"
        affect_self=no
	affect_allies=yes
	affect_enemies=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		trait=vile
            [/filter]
        [/affect_adjacent]
   [/leadership]
   [leadership]
        id=criminal_authority2
        value=-20
        cumulative=no
        affect_self=no
	affect_allies=no
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		trait=vile
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_MAGIC_EXTINGUISHER
    [leadership]
        id=magic extinguisher
        value=-50
        cumulative=no
        name= _ "magic extinguisher"
        female_name= _ "female^magic extinguisher"
        description= _ "Unit decreases damage of adjacent mages by 50%"
        affect_self=no
	affect_allies=yes
	affect_enemies=yes
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		{IS_MAGE}
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef
#define ABILITY_WOLF_HOWL
    [dummy]
        id=wolf_howl
        name= _ "wolf howl"
        female_name= _ "female^wolf howl"
        description= _ "When moon rises, unit howls and heals all adjacent ally wolves by 12 HP, also making all adjacent wolves to do the same"
    [/dummy]
#enddef
[event]
    id=wolf_howl
    name=turn refresh
    first_time_only=no
    [filter_condition]
	[have_location]
	     time_of_day_id=first_watch, first_watch_hour1
	[/have_location]
    [/filter_condition]
    [store_unit]
	[filter]
	    side=$side_number
	    ability=wolf_howl
        [/filter]
        variable=howlers
	kill=no
    [/store_unit]
    {FOREACH howlers wh}
	{VARIABLE howlers[$wh].status.willhowl yes}
	[unstore_unit]
	   variable=howlers[$wh]
	   find_vacant=no
	   text=_"*HOWL*"
	   {COLOR_HEAL}
	[/unstore_unit]
    	[heal_unit]
	   [filter]
		x=$howlers[$wh].x
		y=$howlers[$wh].y
	   [/filter]
	   amount=12
    	[/heal_unit]
	[if]
	[have_unit]
 	    side=$side_number
	    {IS_WOLF}
	    [filter_adjacent]
		x=$howlers[$wh].x
		y=$howlers[$wh].y
	    [/filter_adjacent]
	    [not]
	        status=willhowl
	    [/not]
	[/have_unit]
	[then]
   	    [store_unit]
		[filter]
		    side=$side_number
	    	    {IS_WOLF}
	            [filter_adjacent]
			x=$howlers[$wh].x
			y=$howlers[$wh].y
	            [/filter_adjacent]
	    	    [not]
	        	status=willhowl
	    	    [/not]
        	[/filter]
        	variable=newhowlers
		kill=no
    	    [/store_unit]
	    [set_variables]
		name=howlers
		mode=append
		to_variable=newhowlers
	    [/set_variables]
	    {CLEAR_VARIABLE newhowlers}
	[/then]
	[/if]
    {NEXT wh}
    [modify_unit]
  	[filter]
   	    status=willhowl
  	[/filter]
  	[effect]
	    apply_to=status
	    remove=willhowl
	[/effect]
    [/modify_unit]
    {CLEAR_VARIABLE howlers}
[/event]
#define ABILITY_SNAKE_AURA
    [dummy]
        id=snake_aura
        name= _ "snake aura"
        female_name= _ "female^snake aura"
        description= _ "Everytime unit is wounded, it poisons all adjacent units"
    [/dummy]
#enddef
[event]
    id=snake_aura_in_attack
    name=attacker hits
    first_time_only=no
    [filter_second]
        ability=snake_aura
    [/filter_second]
    [store_unit]
	[filter]
	    [filter_adjacent]
		id=$second_unit.id
	    [/filter_adjacent]
            [not]
    	    	status=unpoisonable
            [/not]	
	[/filter]
	variable=poisons
	kill=yes
    [/store_unit]

    {FOREACH poisons ps}
	{VARIABLE poisons[$ps].status.poisoned yes}  
        [unstore_unit]
            variable=poisons[$ps]
    	[/unstore_unit]
    {NEXT ps}
    {CLEAR_VARIABLE poisons}
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text= _ "snake aura"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
[event]
    id=snake_aura_in_defense
    name=defender hits
    first_time_only=no
    [filter]
        ability=snake_aura
    [/filter]
    [store_unit]
	[filter]
	    [filter_adjacent]
		id=$unit.id
	    [/filter_adjacent]
            [not]
    	    	status=unpoisonable
            [/not]
	[/filter]
	variable=poisons
	kill=yes
    [/store_unit]
    {FOREACH poisons ps}
	{VARIABLE poisons[$ps].status.poisoned yes}  
        [unstore_unit]
            variable=poisons[$ps]
    	[/unstore_unit]
    {NEXT ps}
    {CLEAR_VARIABLE poisons}
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "snake aura"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
#define ABILITY_HEAT_AURA
    [resistance]
    	id=heat_aura1
    	add=20
    	max_value=100
    	apply_to=cold
   	name= _ "heat aura"
    	female_name= _ "female^heat aura"
    	description= _ "Heat aura increases cold resistance and decrease fire resistance of all adjacent units (allies and enemies) and its owner itself by 20%"
	cumulative=no
    	affect_self=yes
     	affect_allies=yes
     	affect_enemies=yes
    	[affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_drake,SA_dragon
		[/not]
            [/filter]
	[/affect_adjacent]
    [/resistance]
    [resistance]
    	id=heat_aura2
    	sub=20
    	max_value=100
    	apply_to=fire
    	affect_self=yes
     	affect_allies=yes
     	affect_enemies=yes
    	[affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_drake,SA_dragon
		[/not]
            [/filter]
	[/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_RAIN_AURA
    [resistance]
    	id=rain_aura1
    	add=20
    	max_value=100
    	apply_to=fire
   	name= _ "rain aura"
    	female_name= _ "female^rain aura"
    	description= _ "Rain aura increases fire resistance and decrease cold resistance of all adjacent units (allies and enemies) and its owner itself by 20%"
	cumulative=no
    	affect_self=yes
     	affect_allies=yes
     	affect_enemies=yes
    	[affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_merman,SA_naga
		[/not]
            [/filter]
	[/affect_adjacent]
    [/resistance]
    [resistance]
    	id=rain_aura2
    	sub=20
    	max_value=100
    	apply_to=cold
    	affect_self=yes
     	affect_allies=yes
     	affect_enemies=yes
    	[affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_merman,SA_naga
		[/not]
            [/filter]
	[/affect_adjacent]
    [/resistance]
#enddef
#define ABILITY_TELEPORTATION
    [teleport]
        id=advanced_teleport
        name= _ "teleport"
        female_name= _ "female^teleport"
        description= _ "This unit may teleport between any two empty villages owned by its side or between empty citadels using one of its moves"
        [tunnel]
            id=village_and_castle_teleport_1
	    allow_vision=no
            [source]
                terrain=*^V*
                owner_side=$teleport_unit.side
                [not]
                    [filter]
                        [not]
                            id=$teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]

            [target]
                terrain=*^V*
                owner_side=$teleport_unit.side
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/target]

            [filter]
                ability=advanced_teleport
            [/filter]
        [/tunnel]
        [tunnel]
            id=village_and_castle_teleport_2
	    allow_vision=no
            [source]
                terrain=K*
                [not]
                    [filter]
                        [not]
                            id=$teleport_unit.id
                        [/not]
                    [/filter]
                [/not]
            [/source]

            [target]
                terrain=K*
                [not]
                    [filter]
                    [/filter]
                [/not]
            [/target]

            [filter]
                ability=advanced_teleport
            [/filter]
        [/tunnel]
        [tunnel]
            id=village_and_castle_teleport_mark
	    allow_vision=no
            [source]

            [/source]

            [target]
		[filter_adjacent_location]
		    [filter]
			ability=magical mark
			side=$teleport_unit.side
		    [/filter]
		[/filter_adjacent_location]
            [/target]

            [filter]
                ability=advanced_teleport
            [/filter]
        [/tunnel]
    [/teleport]
#enddef
#define ABILITY_SHADOW_STEP
    [teleport]
        id=shadow_step
        name= _ "shadow step"
        female_name= _ "female^shadow step"
        description= _ "This unit may teleport to any hex in six hexes radius once per turn"
        [tunnel]
            id=6_hexes_teleport
	    allow_vision=no
            [source]
		[filter]
		     ability=shadow_step
		[/filter]
            [/source]

            [target]
                [filter]
                    id=$teleport_unit.id
                [/filter]	
                radius=6
            [/target]

            [filter]
                ability=shadow_step
            [/filter]
        [/tunnel]
        [tunnel]
            id=6_hexes_teleport_mark
	    allow_vision=no
            [source]

            [/source]

            [target]
		[filter_adjacent_location]
		    [filter]
			ability=magical mark
			side=$teleport_unit.side
		    [/filter]
		[/filter_adjacent_location]	
            [/target]

            [filter]
                ability=shadow_step
            [/filter]
        [/tunnel]
    [/teleport]
#enddef
#define ABILITY_DREAM_WORLD
    [teleport]
        id=dream_world
        name= _ "dream world"
        female_name= _ "female^dream world"
        description= _ "This unit shows himself only at its turn and stays at dreamworld at remaining time"
        [tunnel]
            id=another_world_teleport
	    allow_vision=no
	    bidirectional=no
            [source]
		[filter]
		     ability=dream_world
		[/filter]
            [/source]

            [target]
		[filter_vision]
		     side=$teleport_unit.side
		[/filter_vision]
            [/target]

            [filter]
                ability=dream_world
            [/filter]
        [/tunnel]
    [/teleport]
    [hides]
        id=dream_world2
        affect_self=yes
        [filter]
            [filter_location]
                
            [/filter_location]
        [/filter]
    [/hides]
#enddef
#define ABILITY_MAGICAL_MARK
    [dummy]
        id=magical mark
        name= _ "magical mark"
        female_name= _ "female^magical mark"
        description= _ "All allies with teleportation ability can teleport to this unit's location"
    [/dummy]
#enddef
#define ABILITY_I_NEED_HELP
    [dummy]
#not the teleport!
        id=i_need_help
        name= _ "i need help"
        female_name= _ "female^i need help"
        description= _ "This unit is too heavy, so you need help of ally units to move it (only goblins, selfless and patriotic units will agree to help). With help of such units movement rate increases by 200%"
    [/dummy]
#enddef

[event]
    name=enter_hex
    first_time_only=no
    [filter]
	ability=i_need_help
    [/filter]
    [if]
    [have_location]
	x=$x1
	y=$y1
	[filter_adjacent_location]
	    [filter]
	    	side=$unit.side
	    	[not]
		    {IS_ANIMAL}
	    	[/not]
	    	[and]
		    [not]
		    	{IS_BUILDING}
		    [/not]
	    	[/and]
	    	[and]
		    [not]
		    	{IS_CAN_FLY}
		    [/not]
	        [/and]
	    	[and]
		    [not]
		    	ability=i_need_help
		    [/not]
	        [/and]
		[and]
	    	    race=SA_goblin
	    	    [or]
			trait=patriot
			[or]
		    	    trait=selfless
			    [or]
				ability=foundling
			    [/or]
			[/or]
	    	    [/or]
		[/and]
	    [/filter]
	[/filter_adjacent_location]
    [/have_location]
    [and]
    [have_location]
	x=$x2
	y=$y2
	[filter_adjacent_location]
	    [filter]
	    	side=$unit.side
	    	[not]
		    {IS_ANIMAL}
	    	[/not]
	    	[and]
		    [not]
		    	{IS_BUILDING}
		    [/not]
	    	[/and]
	    	[and]
		    [not]
		    	{IS_CAN_FLY}
		    [/not]
	        [/and]
	    	[and]
		    [not]
		    	ability=i_need_help
		    [/not]
	        [/and]
		[and]
	    	    race=SA_goblin
	    	    [or]
			trait=patriot
			[or]
		    	    trait=selfless
			    [or]
				ability=foundling
			    [/or]
			[/or]
	    	    [/or]
		[/and]
	    [/filter]
	[/filter_adjacent_location]
    [/have_location]
    [/and]
    [then]
	[if]
	[variable]
	    name=unit.variables.helpers
	    greater_than=0
	[/variable]
	[then]		
	    [set_variable]
	    	name=unit.variables.helpers
	    	sub=1
	    [/set_variable]
	    [set_variable]
	    	name=unit.moves
	    	add=1
	    [/set_variable]
	    [unstore_unit]
	    	variable=unit
            	text=_"GOT HELP"
            	{COLOR_HEAL}
	    [/unstore_unit]
	[/then]
	[else]
	    [set_variable]
		name=unit.variables.helpers
		value=2
	    [/set_variable]
	    [unstore_unit]
		variable=unit
	    [/unstore_unit]	
	[/else]
	[/if]
    [/then]
    [/if]
[/event]

#define ABILITY_HEAL VALUE
    [heals]
        value={VALUE}
        id=heal
        affect_allies=yes
        name= _ "heal"
        female_name= _ "female^heal"
        description= _ "In beginning of its turn unit heals all adjacent living allies, recovers {VALUE} hitpoints"
        affect_self=no
        poison=slowed
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_HEAL_ITSELF VALUE
    [heals]
        value={VALUE}
        id=heal
        affect_allies=yes
        name= _ "heal"
        female_name= _ "female^heal"
        description= _ "In beginning of its turn unit heals all adjacent living allies and itself, recovers {VALUE} hitpoints"
        affect_self=yes
        poison=slowed
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_CURE VALUE
    [heals]
        value={VALUE}
        id=cure
        affect_allies=yes
        name= _ "cure"
        female_name= _ "female^cure"
        description= _ "In beginning of its turn unit heals all adjacent living allies, cures them of poison and recovers {VALUE} hitpoints"
        affect_self=no
        poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_HOLY_MARK
    [dummy]
        id=holy mark
        name= _ "holy mark"
        female_name= _ "female^holy mark"
        description= _ "Cures of poison and bleeding and removes dark marks. Doing so to adjacent allies at beginning of every turn and to itself after each encounter"
    [/dummy]
#enddef
    [event]
	name=attack end
	id=holymark
	[filter]
	    ability=holy mark
	[/filter]
	[if]
	[variable]
	    name=unit.hitpoints
	    greater_than=0
	[/variable]
	[then]
	    [if]
	    [variable]
		name=unit.status.eternal_poison
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE unit.status.eternal_poison}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=unit.status.poisoned
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE unit.status.poisoned}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=unit.status.septicemed
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE unit.status.septicemed}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=unit.status.darkmarked
		equals=yes
	    [/variable]
	    [then]
            	{CLEAR_VARIABLE unit.status.darkmarked}
	    	{CLEAR_VARIABLE unit.variables.darkmarkof}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=unit.status.bleeding
		equals=yes
	    [/variable]
	    [then]
	        {CLEAR_VARIABLE unit.status.bleeding}
            	[unstore_unit]
		    variable=unit
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255   
            	[/unstore_unit]
            	[object]
            	    silent=yes
            	    duration=forever

            	    [filter]
                    	x,y=$x1,$y1
            	    [/filter]

            	    [effect]
                    	apply_to=image_mod
                    	add="CS(0,25,25)"
            	    [/effect]
            	[/object]
	    [/then]
	    [else]
            	[unstore_unit]
		    variable=unit
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255   
            	[/unstore_unit]
	    [/else]
            [/if]
	[/then]
	[/if]
    [/event]
    [event]
	name=attack end
	id=holymark_at_defense
	[filter_second]
	    ability=holy mark
	[/filter_second]
	[if]
	[variable]
	    name=second_unit.hitpoints
	    greater_than=0
	[/variable]
	[then]
	    [if]
	    [variable]
		name=second_unit.status.eternal_poison
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE second_unit.status.eternal_poison}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=second_unit.status.poisoned
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE second_unit.status.poisoned}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=second_unit.status.septicemed
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE second_unit.status.septicemed}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=second_unit.status.darkmarked
		equals=yes
	    [/variable]
	    [then]
            	{CLEAR_VARIABLE second_unit.status.darkmarked}
	    	{CLEAR_VARIABLE second_unit.variables.darkmarkof}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=second_unit.status.bleeding
		equals=yes
	    [/variable]
	    [then]
	        {CLEAR_VARIABLE second_unit.status.bleeding}
            	[unstore_unit]
		    variable=second_unit
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255   
            	[/unstore_unit]
            	[object]
            	    silent=yes
            	    duration=forever

            	    [filter]
                    	x,y=$x1,$y1
            	    [/filter]

            	    [effect]
                    	apply_to=image_mod
                    	add="CS(0,25,25)"
            	    [/effect]
            	[/object]
	    [/then]
	    [else]
            	[unstore_unit]
		    variable=second_unit
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255   
            	[/unstore_unit]
	    [/else]
            [/if]
	[/then]
	[/if]
    [/event]
#define ABILITY_DINNER
    [heals]
        value=5
        id=dinner
        affect_allies=yes
        name= _ "dinner"
        female_name= _ "female^dinner"
        description= _ "In beginning of its turn unit heals all adjacent orces and goblins by 5 hitpoints"
        affect_self=no
        poison=slowed
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_orc, SA_goblin
            [/filter]
        [/affect_adjacent]
    [/heals]
    [heals]
        value=10
        id=dinner2
        affect_allies=yes
        affect_self=no
        poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_orc, SA_goblin
		ability=foundling, sovereign
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_ROBBER_DOCTOR
    [heals]
        value=8
        id=robber doctor
        affect_allies=yes
        name= _ "robber doctor"
        female_name= _ "female^robber doctor"
        description= _ "In beginning of its turn unit heals itself and its adjacent leader, recovers 8 hitpoints. When adjacent ally unit gains gold from ''vile'' trait, doctor can heal it in exchange of gold, with amount of healing depending of sum of obtained money. Can cure poison, but not bleeding nor eternal poison"
        affect_self=yes
        poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		canrecruit=yes
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_ANCIENT_POWER
    [heals]
        value=6
        id=ancientpower
        affect_allies=yes
        name= _ "ancient power"
        female_name= _ "female^ancient power"
        description= _ "In beginning of its turn unit heals all adjacent ally undead units"
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_undead
            [/filter]
        [/affect_adjacent]
	[filter]
	    level=2
	[/filter]
    [/heals]
    [heals]
        value=9
        id=ancientpower2
        affect_allies=yes
        affect_self=no
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		race=SA_undead
            [/filter]
        [/affect_adjacent]
	[filter]
	    level=3
	[/filter]
    [/heals]
#enddef
#define ABILITY_BOWL_OF_SNAKE_POISON
    [heals]
        value=4
        id=poison bowl
        affect_allies=yes
        name= _ "bowl of The Snake poison"
        female_name= _ "female^bowl of The Snake poison"
        description= _ "In beginning of its turn unit heals all adjacent allies and itself of poison, also restoring some hitpoints"
	affect_allies=yes  
        affect_self=yes
	poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
	[filter]
	    level=2
	[/filter]
    [/heals]
    [heals]
        value=8
        id=poison bowl
        affect_allies=yes
	affect_allies=yes  
        affect_self=yes
	poison=cured
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
	[filter]
	    level=3
	[/filter]
    [/heals]
#enddef
#define ABILITY_FOREST_POWER
    [heals]
	value=5
        id=forest_power
        name= _ "forest power"
        female_name= _ "female^forest power"
        description= _ "In beginning of its turn unit heals all adjacent living allies and itself, recovers 5 hitpoints and cures poison, but only if there is wose ally around unit"
        affect_allies=yes        
	affect_self=yes
        poison=cured
	[filter]
	    [filter_adjacent]
		race=SA_wose
		is_enemy=no
	    [/filter_adjacent]
	[/filter]
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_EARTH_POWER
    [heals]
	value=5
        id=earth_power
        name= _ "earth power"
        female_name= _ "female^earth power"
        description= _ "If unit stand on land, on beginning of its turn it heals all adjacent living allies and itself, recovers 5 hitpoints and cures poison"
        descriptio_inactive= _ "If unit stand on land, on beginning of its turn it heals all adjacent living allies and itself, recovers 5 hitpoints and cures poison."
        affect_allies=yes        
	ffect_self=yes
        poison=cured
	[filter]
	    [filter_location]
	        [not]
		   {IS_TERRAIN_OPEN_WATER}
	    	[/not]
	     [/filter_location]
	[/filter]
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		   race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_SUN_POWER_WARM
    [dummy]
        id=sun_power
        name= _ "sun power"
        female_name= _ "female^sun power"
        description= _ "On beginning of its turn it heals all adjacent living allies and itself, recovers 6 hitpoints but not cures poison. Works only at daytime. At twilight curing power lowers by half"
	[filter]
	   [filter_location]
		time_of_day=lawful,neutral
	   [/filter_location]
	[/filter]
    [/dummy]
    [heals]
	value=6
        id=sun_power1
        affect_allies=yes        
	affect_self=yes
        poison=slowed
	[filter]
	   [filter_location]
		time_of_day=lawful
	   [/filter_location]
	[/filter]
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
    [heals]
	value=3
        id=sun_power2
        affect_allies=yes        
	affect_self=yes
        poison=slowed
	[filter]
	   [filter_location]
		time_of_day=neutral
	   [/filter_location]
	[/filter]
        [affect_adjacent]
	    adjacent=n,ne,se,s,sw,nw
            [filter]
		[not]
		   race=SA_undead,SA_mechanical,SA_spirit
		[/not]
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef
#define ABILITY_SUN_POWER_BURN
   [leadership]
        id=sun_power3
        value=25
        cumulative=no
        name= _ "sun power"
        female_name= _ "female^sun power"
        description= _ "At daytime unit receives leadership bonus from Sela, so it inflicts 25% more damage"
        affect_self=yes
	affect_allies=no
	affect_enemies=no
	[filter]
	    [filter_location]
		 time_of_day=lawful
	    [/filter_location]
	[/filter]
    [/leadership]
#enddef

#define ABILITY_WATERWALKING
    [dummy]
        id=waterwalking
	name = _ "waterwalking"
	female_name= _ "female^waterwalking"
	description = _ "In beginning of its turn unit gain to all ally units ability to walk across water as they walk plant"
    [/dummy]
#enddef
#define STAND_ON_WATER
    [if]
    [filter]
	[filter_location]
	    terrain=!,*^B*,!,Chs^*,Chw^*,W*^*,S*^*,*^Vm
	[/filter_location]
	[and]
             status=waterwalking
	[/and]
    [/filter]
    submerge=-0.1
    [/if]
#enddef
#define WEAPON_SPECIAL_RUTHLESS_BOMBARDMENT
    [dummy]
        id=ruthless bombardment
        name= _ "ruthless bombardment"
        female_name= _ "female^ruthless bombardment"
        description= _ "When unit's ranged attack hits target at village, it causes local peasants to leave their work and flee in terror, which make the village neutral, althought it can be re-captured later"
	[filter_opponent]
	    [filter_location]
		terrain=*^V*
	    [/filter_location]
	[/filter_opponent]
    [/dummy]
#enddef
[event]
    id=bombardment_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=ruthless bombardment
    [/filter_attack]
    [capture_village]
	x=$x2
	y=$y2		
    [/capture_village]
[/event]
[event]
    id=bombardment_defense
    name=defender hits
    first_time_only=no
    [filter_attack]
	special=ruthless bombardment
    [/filter_attack]
    [capture_village]
	x=$x1
	y=$y1		
    [/capture_village]
[/event]
#define WEAPON_SPECIAL_FIRE_SHIELD
    [dummy]
        id=fire shield
        name= _ "fire shield"
        female_name= _ "female^fire shield"
        description= _ "Every time unit recieves damage, opponent takes 8 fire damage. Target unit can't die from an additional damage"
    [/dummy]
#enddef

[event]
    id=fire_shield_attack
    name=attacker hits
    first_time_only=no
    [filter_second_attack]
	special=fire shield
    [/filter_second_attack]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$x2
	    y=$y2
	[/filter_second]
	amount=8
	damage_type=fire
	kill=no
	fire_event=yes  
	experience=no 
   [/harm_unit]
[/event]
[event]
    id=fire_shield_defense
    name=defender hits
    first_time_only=no
    [filter_attack]
	special=fire shield
    [/filter_attack]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	[filter_second]
	    x=$x1
	    y=$y1
	[/filter_second]
	amount=8
	damage_type=fire
	kill=no
	fire_event=yes 
	experience=no   
   [/harm_unit]
[/event]

#define WEAPON_SPECIAL_SHORT_TALK
    [dummy]
        id=short talk
        name= _ "short talk"
        female_name= _ "female^short talk"
        description= _ "Unit shoots down any adjacent unit, who tries to level up to level 2, inflicting basic damage of this attack twice"
	[filter_self]
	    [not]
	    [/not]
	[/filter_self]
    [/dummy]
#enddef

[event]
    id=short_talk
    name=pre advance
    first_time_only=no
    [filter]
	level=1
	[filter_adjacent]
	    [has_attack]
	    	special=short talk
	    [/has_attack]
	[/filter_adjacent]
    [/filter]
    [store_unit]
    	[filter]
	    [filter_adjacent]
	    	[has_attack]
	    	    special=short talk
	    	[/has_attack]
	    [/filter_adjacent]
    	[/filter]
	variable=killer
	kill=no	
    [/store_unit]
    {FOREACH killer.attack att}
	[if]
	[have_unit]
	    x=$killer.x
	    y=$killer.y
	    [has_attack]
		name=$killer.attack[$att].name
	    	special=short talk
	    [/has_attack]
	[/have_unit]
	[then]
	    {VARIABLE ia $att}
	[/then]
	[/if]	    
    {NEXT att}
    {VARIABLE cx1 $unit.x}
    {VARIABLE cy1 $unit.y}
    {VARIABLE cx2 $killer.x}
    {VARIABLE cy2 $killer.y}
    {VARIABLE basic $killer.attack[$ia].damage}
    [set_variable]
	name=basic
	multiply=2
    [/set_variable]
    {ALIGNMENT_MODIFIERS}    
    {CHOOSE_DEFAULT_ALIGNMENT $killer.attack[$ia].name}
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$killer.x
	    x=$killer.y
	[/filter_second]
	[secondary_attack]
	    name=$killer.attack[$ia].name
	[/secondary_attack]
	amount=$damagetotal
	damage_type=$killer.attack[$ia].type
	alignment=$align
	kill=yes
	animate=yes
	fire_event=yes
	experience=yes 
   [/harm_unit]
   {CLEAR_VARIABLE ia}
   {CLEAR_VARIABLE align}
   {CLEAR_VARIABLE killer}
   {CLEAR_VARIABLE damagetotal}
[/event]

#define WEAPON_SPECIAL_MIRROR
    [dummy]
        id=mirror
	name = _ "mirror"
	name_inactive = _ "mirror"
	description = _ "All recieved damage will be reflected back to an opponent"
	description_inactive= _ "All recieved damage will be reflected back to an opponent"
	multiply=2	
	apply_to=both
    [/dummy]
    [damage]
        id=mirror2
	multiply=2	
	apply_to=both
        [filter_self]
	   level=0-3
        [/filter_self]
    [/damage]
#enddef
[event]
    id=mirror_attack
    name=attacker hits
    first_time_only=no
    [filter_second_attack]
	special=mirror
    [/filter_second_attack]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=$damage_inflicted
	kill=yes
	fire_event=yes  
	experience=no 
   [/harm_unit]
[/event]
[event]
    id=mirror_defense
    name=defender hits
    first_time_only=no
    [filter_attack]
	special=mirror
    [/filter_attack]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=$damage_inflicted
	kill=yes
	fire_event=yes   
	experience=no
   [/harm_unit]
[/event]
#define WEAPON_SPECIAL_RANDOM_TYPE
    [dummy]
        id=random type
	name = _ "random type"
	name_inactive = _ "random type"
	description = _ "Type of this attacks will be randomly chosen from fire, cold and arcane types"
	description_inactive= _ "Type of this attacks will be randomly chosen from fire, cold and arcane types"	
    [/dummy]
#enddef
[event]
    id=random_type_attack
    name=attack
    first_time_only=no
    [filter_attack]
	special=random type
    [/filter_attack]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_type "fire"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_type "cold"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_type "arcane"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=attack
	    special=random type
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    id=random_type_defense
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=random type
    [/filter_second_attack]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_type "fire"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_type "cold"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_type "arcane"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=attack
	    special=random type
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
    {CLEAR_VARIABLE tmp_luck}
[/event]
#define WEAPON_SPECIAL_NUMEROUS_WEAPONS
    [dummy]
        id=numerous weapons
	name = _ "numerous weapons"
	name_inactive = _ "numerous weapons"
	description = _ "This attack everytime hits with random type. It could be blade, pierce or impact"
    [/dummy]
#enddef
[event]
    id=numerous_weapons_attack
    name=attack,attacker hits,attacker misses
    first_time_only=no
    [filter_attack]
	special=numerous weapons
    [/filter_attack]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_type "blade"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_type "pierce"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_type "impact"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=attack
	    special=numerous weapons
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    id=numerous_weapons_attack
    name=attack,defender hits,defender misses
    first_time_only=no
    [filter_second_attack]
	special=numerous weapons
    [/filter_second_attack]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_type "blade"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_type "pierce"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_type "impact"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=attack
	    special=numerous weapons
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
    {CLEAR_VARIABLE tmp_luck}
[/event]
#define WEAPON_SPECIAL_SUN_HEAT
    [dummy]
        id=sun heat
	name= _ "sun heat"
	description= _ "When this attack hits, it additionally inflicts basic amount of damage but with fire type. Alignment, relics, horror and time of day will affect amount of damage as usual"
    [/dummy]
#enddef
[event]
    id=sun_heat_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=sun heat
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $second_unit.x}
    	{VARIABLE cy2 $second_unit.y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=fire
	    kill=yes
	    alignment=$align
	    fire_event=yes   
	    experience=no
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$second_unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x1
		    y=$y1
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$second_unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
       	{CLEAR_VARIABLE damagetotal}
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
[event]
    id=sun_heat_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=sun heat
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $unit.x}
    	{VARIABLE cy2 $unit.y}
   	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
        [harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	   	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=fire
	    alignment=$align
	    kill=yes
	    fire_event=yes  
	    experience=no 
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x2
		    y=$y2
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
       	{CLEAR_VARIABLE damagetotal}
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_ICE_STRIKE
    [dummy]
        id=ice strike
	name= _ "ice strike"
	description= _ "When this attack hits, it additionally inflicts basic amount of damage but with cold type. Alignment, relics, horror and time of day will affect amount of damage as usual"
    [/dummy]
#enddef
[event]
    id=ice_strike_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=ice strike
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $second_unit.x}
    	{VARIABLE cy2 $second_unit.y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=cold
	    kill=yes
	    alignment=$align
	    fire_event=yes   
	    experience=no 
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$second_unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x1
		    y=$y1
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$second_unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
       	{CLEAR_VARIABLE damagetotal}
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
[event]
    id=ice_strike_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=ice strike
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $unit.x}
    	{VARIABLE cy2 $unit.y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=cold
	    alignment=$align
	    kill=yes
	    fire_event=yes  
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x2
		    y=$y2
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
       	{CLEAR_VARIABLE damagetotal}
       	{CLEAR_VARIABLE overall}
	{CLEAR_VARIABLE align}
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_BITING_STRIKE
    [dummy]
        id=biting strike
	name= _ "biting strike"
	description= _ "When this attack hits, it additionally inflicts 7 blade damage regardless of basic damage amount. Target unit can't die from an additional damage"
    [/dummy]
#enddef
[event]
    id=biting_strike_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=biting strike
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	[filter_second]
	    x=$x1
	    y=$y1
	[/filter_second]
	amount=7
	damage_type=blade
	alignment=$unit.alignment
	kill=no 
	experience=no
   [/harm_unit]
   [/then]
   [/if]
[/event]
[event]
    id=biting_strike_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=biting strike
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$x2
	    y=$y2
	[/filter_second]
	amount=7
	damage_type=blade
	alignment=$second_unit.alignment
	kill=no  
	experience=no
   [/harm_unit]
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_SPIKES
    [dummy]
        id=spikes
	name= _ "spikes"
	description= _ "When this attack hits, it additionally inflicts 2 pierce damage regardless of basic damage amount. Target unit can't die from an additional damage"	
    [/dummy]
#enddef
[event]
    id=spikes_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=spikes
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	[filter_second]
	    x=$x1
	    y=$y1
	[/filter_second]
	amount=2
	damage_type=pierce
	alignment=$unit.alignment
	kill=no 
	experience=no
   [/harm_unit]
   [/then]
   [/if]
[/event]
[event]
    id=spikes_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=spikes
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$x2
	    y=$y2
	[/filter_second]
	amount=2
	damage_type=pierce
	alignment=$second_unit.alignment
	kill=no  
	experience=no
   [/harm_unit]
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_DOUBLE_ATTACK
    [dummy]
        id=double attack
	name= _ "double attack"
	description= _ "Regardless of whether the attack hit or not it additionally inflicts 2 blade damage by second weapon"
    [/dummy]
#enddef
[event]
    id=double_attack
    name=attacker hits,attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=double attack
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	[harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=2
	    damage_type=blade
	    alignment=$unit.alignment
	    kill=yes
	    fire_event=yes
	    experience=no
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$second_unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x1
		    y=$y1
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$second_unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
[event]
    id=double_defense
    name=defender hits,defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=double attack
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	[harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=2
	    damage_type=blade
	    alignment=$second_unit.alignment
	    kill=yes
	    fire_event=yes
	    experience=no
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x2
		    y=$y2
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_TRIPLE_ATTACK
    [dummy]
        id=triple attack
	name= _ "triple attack"
	description= _ "When attack hits, it inflicts it's normal damage 3 times"
    [/dummy]
#enddef
[event]
    id=triple_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=triple attack
    [/filter_attack]
    {VARIABLE dam $damage_inflicted}
    [set_variable]
	name=dam
	multiply=2
    [/set_variable]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [and]
        [variable]
	    name=second_unit.hitpoints
	    less_than=$dam
    	[/variable]	
    [/and]
    [then]
        [harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=$damage_inflicted
	    kill=no
	    experience=no
        [/harm_unit]
        [harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=$damage_inflicted
	    kill=yes
	    experience=yes
	    fire_event=yes
        [/harm_unit]
   [/then]
   [else]
	[if]
    	[variable]
	    name=second_unit.hitpoints
	    greater_than=0
    	[/variable]
        [then]
            [harm_unit]
	    	[filter]
	    	    x=$x2
	    	    y=$y2
	    	[/filter]
	    	[filter_second]
	    	    x=$x1
	    	    y=$y1
	   	[/filter_second]
	    	amount=$damage_inflicted
	    	kill=no
	    	experience=no
            [/harm_unit]
            [harm_unit]
	    	[filter]
	    	    x=$x2
	    	    y=$y2
	    	[/filter]
	    	[filter_second]
	    	    x=$x1
	    	    y=$y1
	    	[/filter_second]
	    	amount=$damage_inflicted
	    	kill=no
	    	experience=no
            [/harm_unit]	    
	[/then]
	[/if]
   [/else]
   [/if]
   {CLEAR_VARIABLE dam}
[/event]
[event]
    id=triple_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=triple attack
    [/filter_second_attack]
    {VARIABLE dam $damage_inflicted}
    [set_variable]
	name=dam
	multiply=2
    [/set_variable]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [and]
        [variable]
	    name=unit.hitpoints
	    less_than=$dam
    	[/variable]	
    [/and]
    [then]
        [harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=$damage_inflicted
	    kill=no
	    experience=no
        [/harm_unit]
        [harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=$damage_inflicted
	    kill=yes
	    experience=yes
	    fire_event=yes
        [/harm_unit]
   [/then]
   [else]
	[if]
    	[variable]
	    name=unit.hitpoints
	    greater_than=0
    	[/variable]
        [then]
            [harm_unit]
	    	[filter]
	    	    x=$x1
	    	    y=$y1
	    	[/filter]
	    	[filter_second]
	    	    x=$x2
	    	    y=$y2
	   	[/filter_second]
	    	amount=$damage_inflicted
	    	kill=no
	    	experience=no
            [/harm_unit]
            [harm_unit]
	    	[filter]
	    	    x=$x1
	    	    y=$y1
	    	[/filter]
	    	[filter_second]
	    	    x=$x2
	    	    y=$y2
	    	[/filter_second]
	    	amount=$damage_inflicted
	    	kill=no
	    	experience=no
            [/harm_unit]	    
	[/then]
	[/if]
   [/else]
   [/if]
   {CLEAR_VARIABLE dam}
[/event]
#define WEAPON_SPECIAL_CHANNEL_POWER
    [dummy]
        id=channel power
	name= _ "channel power"
	description= _ "When attack hits, it additionaly inflicts 2 points of arcane damage per level of unit's recruiter if it's a mage"
    [/dummy]
#enddef
[event]
    id=channel_attack
    name=attacker hits
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=channel power
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
	[if]
	[have_unit]
	    side=$unit.side
	    canrecruit=yes
	    {IS_MAGE}
	[/have_unit]
	[then]
	    [store_unit]
		[filter]
	    	    side=$unit.side
	    	    canrecruit=yes
	    	    {IS_MAGE}
		[/filter]
		kill=no
		variable=recruiter
	    [/store_unit]
	    {VARIABLE damount $recruiter[0].level}
	    [set_variable]
		name=damount
		multiply=2
	    [/set_variable]
    	    [harm_unit]
		[filter]
		    x=$x2
		    y=$y2
		[/filter]
		[filter_second]
		    x=$x1
		    y=$y1
		[/filter_second]
		amount=$damount
		damage_type=arcane
		kill=yes
		fire_event=yes
		experience=no
		variable=overall
       	    [/harm_unit]
	    [if]
	    [variable]
		name=overall.harm_amount
		greater_than_equal_to=$second_unit.hitpoints
	    [/variable]
	    [then]
		[object]
        	    silent=yes
        	    duration=forever

		    [filter]
			x=$x1
			y=$y1
		    [/filter]
			
		    [effect]
            		apply_to=experience
            		increase=7
			times=$second_unit.level
                    [/effect]   	
	        [/object]	    
	    [/then]
	    [/if]
	    {CLEAR_VARIABLE recruiter}	
	    {CLEAR_VARIABLE damount}
	    {CLEAR_VARIABLE overall}
	[/then]
	[/if]
   [/then]
   [/if]
[/event]
[event]
    id=channel_defense
    name=defender hits
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=channel power
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
	[if]
	[have_unit]
	    side=$second_unit.side
	    canrecruit=yes
	    {IS_MAGE}
	[/have_unit]
	[then]
	    [store_unit]
		[filter]
	    	    side=$second_unit.side
	    	    canrecruit=yes
	    	    {IS_MAGE}
		[/filter]
		kill=no
		variable=recruiter
	    [/store_unit]
	    {VARIABLE damount $recruiter[0].level}
	    [set_variable]
		name=damount
		multiply=2
	    [/set_variable]
    	    [harm_unit]
		[filter]
		    x=$x1
		    y=$y1
		[/filter]
		[filter_second]
		    x=$x2
		    y=$y2
		[/filter_second]
		amount=$damount
		damage_type=arcane
		kill=yes
		fire_event=yes
		experience=no
		variable=overall
       	    [/harm_unit]
	    [if]
	    [variable]
		name=overall.harm_amount
		greater_than_equal_to=$unit.hitpoints
	    [/variable]
	    [then]
		[object]
        	    silent=yes
        	    duration=forever

		    [filter]
			x=$x2
			y=$y2
		    [/filter]
			
		    [effect]
            		apply_to=experience
            		increase=7
			times=$unit.level
                    [/effect]   	
	        [/object]	    
	    [/then]
	    [/if]
	    {CLEAR_VARIABLE recruiter}	
	    {CLEAR_VARIABLE dam}
	    {CLEAR_VARIABLE overall}
	[/then]
	[/if]
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_STEAM_SPRAY
    [dummy]
        id=steam spray
	name= _ "steam spray"
	description= _ "Regardless of whether the attack hit or not it additionally inflicts 7 damage by steam"
    [/dummy]
#enddef
[event]
    id=steam_spray_attack
    name=attacker hits,attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=steam spray
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	[harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
	    [/filter_second]
	    amount=7
	    alignment=$unit.alignment
	    kill=yes
	    fire_event=yes  
	    experience=no 
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$second_unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x1
		    y=$y1
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$second_unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
[event]
    id=steam_spray_defense
    name=defender hits,defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=steam spray
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
    	[harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
	    [/filter_second]
	    amount=7
	    alignment=$second_unit.alignment
	    kill=yes
	    fire_event=yes   
	    experience=no 
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$unit.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x2
		    y=$y2
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$unit.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
       	{CLEAR_VARIABLE overall}
   [/then]
   [/if]
[/event]
#define WEAPON_SPECIAL_DRAIN_LIFE
    [drains]
        id=drain life
	value=50
	name= _ "drain life"
	description= _ "Unit restores its hitpoints on half of inflicted damage. When living opponent killed by this attack, unit restores 4 HP. When unit hits poisoned opponent with this attack, it will be poisoned itself. When poisoned unit hits healthy opponent with this attack, it will be healed from poison"	
	[filter_opponent]
            [not]
		status=undrainable
	    [/not]
	[/filter_opponent]
    [/drains]
#enddef

[event]
    id=store_blood_in_attack
    name=attacker hits
    first_time_only=no
    [filter]
        type=Undead Vampire
    [/filter]
    [filter_second]
        [not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
		status=undrainable
	    [/or]
	[/not]
    [/filter_second]
    [filter_attack]
	special=drains
    [/filter_attack]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_101
	[/has_attack]
	[not]
	     ability=cure
	[/not]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "energy"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_302
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "lightning"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	   [has_attack]
	     	name=spell_203
	   [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE unit.variables.drunkof "water2"}
    	[/then]
	[else]
    	    [if]
    	    [have_unit]
            	x=$x1
	    	y=$y1
	    	[has_attack]
	     	    name=spell_102
		[/has_attack]
    	    [/have_unit]
    	    [then]
	    	{VARIABLE unit.variables.drunkof "fire"}
    	    [/then]
	    [else]
    	    	[if]
    	    	[have_unit]
             	    x=$x1
	    	    y=$y1
		    [has_attack]
	     		name=spell_103
		    [/has_attack]
    	    	[/have_unit]
    	    	[then]
	    	    {VARIABLE unit.variables.drunkof "water"}
    	    	[/then]
    	    	[/if]	    
	    [/else]
    	    [/if]	    
	[/else]
    	[/if]
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	ability=advanced_teleport
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "teleport"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_323
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "curse_mortal"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	     	name=spell_222
	    [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE unit.variables.drunkof "curse_ritual"}
    	[/then]
	[else]
    	    [if]
    	    [have_unit]
             	x=$x1
	    	y=$y1
		[has_attack]
	     	    name=spell_106
		[/has_attack]
    	    [/have_unit]
    	    [then]
	    	{VARIABLE unit.variables.drunkof "curse"}
    	    [/then]
    	    [/if]	    
	[/else]
    	[/if]	    
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_215
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "shadow2"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	    	name=spell_213
	    [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE unit.variables.drunkof "shadow"}
    	[/then]
    	[/if]
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_109
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "gas"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_319
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "firewitch2"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	     	name=spell_219
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE unit.variables.drunkof "firewitch"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_221
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "coldwitch2"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	     	name=spell_220
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE unit.variables.drunkof "coldwitch"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_335
	     [or]
		name=spell_336
	     [/or]
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "summon"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	     	name=spell_118
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE unit.variables.drunkof "orcpriest"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_339
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "orcwitch"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_115
	[/has_attack]
	[not]
	     ability=magical shield
	[/not]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "flash"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	     name=spell_502
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE unit.variables.drunkof "fire2"}
    [/then]
    [/if]
    [unstore_unit]
        variable=unit
        find_vacant=no
    [/unstore_unit]
[/event]
[event]
    id=store_blood_in_defense
    name=defender hits
    first_time_only=no
    [filter_second]
        type=Undead Vampire
    [/filter_second]
    [filter]
        [not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
		status=undrainable
	    [/or]
	[/not]
    [/filter]
    [filter_second_attack]
	special=drains
    [/filter_second_attack]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_101
	[/has_attack]
	[not]
	     ability=cure
	[/not]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "energy"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	    name=spell_302
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "lightning"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x2
	    y=$y2
	   [has_attack]
	     	name=spell_203
	   [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE second_unit.variables.drunkof "water2"}
    	[/then]
	[else]
    	    [if]
    	    [have_unit]
            	x=$x2
	    	y=$y2
	    	[has_attack]
	     	    name=spell_102
		[/has_attack]
    	    [/have_unit]
    	    [then]
	    	{VARIABLE second_unit.variables.drunkof "fire"}
    	    [/then]
	    [else]
    	    	[if]
    	    	[have_unit]
             	    x=$x2
	    	    y=$y2
		    [has_attack]
	     		name=spell_103
		    [/has_attack]
    	    	[/have_unit]
    	    	[then]
	    	    {VARIABLE second_unit.variables.drunkof "water"}
    	    	[/then]
    	    	[/if]	    
	    [/else]
    	    [/if]	    
	[/else]
    	[/if]
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	ability=advanced_teleport
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "teleport"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_323
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "curse_mortal"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x2
	    y=$y2
	    [has_attack]
	     	name=spell_222
	    [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE second_unit.variables.drunkof "curse_ritual"}
    	[/then]
	[else]
    	    [if]
    	    [have_unit]
             	x=$x2
	    	y=$y2
		[has_attack]
	     	    name=spell_106
		[/has_attack]
    	    [/have_unit]
    	    [then]
	    	{VARIABLE second_unit.variables.drunkof "curse"}
    	    [/then]
    	    [/if]	    
	[/else]
    	[/if]	    
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	    name=spell_215
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "shadow2"}
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x2
	    y=$y2
	    [has_attack]
	    	name=spell_213
	    [/has_attack]
    	[/have_unit]
    	[then]
	    {VARIABLE second_unit.variables.drunkof "shadow"}
    	[/then]
    	[/if]
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_109
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "gas"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_319
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "firewitch2"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x2
	    y=$y2
	    [has_attack]
	     	name=spell_219
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE second_unit.variables.drunkof "firewitch"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_221
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "coldwitch2"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x2
	    y=$y2
	    [has_attack]
	     	name=spell_220
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE second_unit.variables.drunkof "coldwitch"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_335
	     [or]
		name=spell_336
	     [/or]
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "summon"}
    [/then]
    [else]
        [if]
        [have_unit]
            x=$x2
	    y=$y2
	    [has_attack]
	     	name=spell_118
	    [/has_attack]
        [/have_unit]
        [then]
	    {VARIABLE second_unit.variables.drunkof "orcpriest"}
        [/then]
	[/if]      
    [/else]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_339
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "orcwitch"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_115
	[/has_attack]
	[not]
	     ability=magical shield
	[/not]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "flash"}
    [/then]
    [/if]
    [if]
    [have_unit]
        x=$x2
	y=$y2
	[has_attack]
	     name=spell_502
	[/has_attack]
    [/have_unit]
    [then]
	{VARIABLE second_unit.variables.drunkof "fire2"}
    [/then]
    [/if]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
    [/unstore_unit]
[/event]

[event]
    id=drain_life_in_attack1
    name=attacker hits
    first_time_only=no
    [filter]
        status=poisoned
    [/filter]
    [filter_attack]
	special=drain life
	[or]
	    special=blood for blood
	[/or]
    [/filter_attack]
    [filter_second]
        [not]
            status=undrainable
	    [or]
    	    	status=poisoned
	    [/or]
        [/not]
    [/filter_second]
    {VARIABLE unit.status.poisoned no}  
    [unstore_unit]
        variable=unit
        find_vacant=no
        male_text= _ "healed"
	female_text= _ "female^healed"
        {COLOR_HARM}
    [/unstore_unit]
[/event]
[event]
    id=drain_life_in_attack2
    name=attacker hits
    first_time_only=no
    [filter]
	[not]
	    status=poisoned
	[/not]
    [/filter]
    [filter_attack]
	special=drain life
	[or]
	    special=blood for blood
	[/or]
    [/filter_attack]
    [filter_second]
    	status=poisoned
        [not]
            status=undrainable
        [/not]
    [/filter_second]
    {VARIABLE unit.status.poisoned yes}  
    [unstore_unit]
        variable=unit
        find_vacant=no
        male_text= _ "drank poison"
	female_text= _ "female^drank poison"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
[event]
    id=drain_life_in_defense1
    name=defender hits
    first_time_only=no
    [filter_second]
        status=poisoned
    [/filter_second]
    [filter_second_attack]
	special=drain life
	[or]
	    special=blood for blood
	[/or]
    [/filter_second_attack]
    [filter]
        [not]
            status=undrainable
	    [or]
    	         status=poisoned
	    [/or]
        [/not]
    [/filter]
    {VARIABLE second_unit.status.poisoned no}  
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        male_text= _ "healed"
	female_text= _ "female^healed"
        {COLOR_HARM}
    [/unstore_unit]
[/event]
[event]
    id=drain_life_in_defense2
    name=defender hits
    first_time_only=no
    [filter_second]
	[not]
            status=poisoned
	[/not]
    [/filter_second]
    [filter_second_attack]
	special=drain life
	[or]
	    special=blood for blood
	[/or]
    [/filter_second_attack]
    [filter]
    	status=poisoned
	[not]
	    status=undrainable
	[/not]
    [/filter]
    {VARIABLE second_unit.status.poisoned yes}  
    [unstore_unit]
        variable=second_unit
        find_vacant=no
	female_text= _ "female^drank poison"
        male_text= _ "drank poison"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]

[event]
    name=die
    first_time_only=no
    id=drain_all_life
    [filter]
 	[not]
           status=undrainable
        [/not]      
    [/filter]
    [filter_second_attack]
        special=drain life
	[or]
	    special=blood for blood
	[/or]
    [/filter_second_attack]
    [unstore_unit]
       variable=second_unit
       {COLOR_HEAL}
       text= _ "+4"
       find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x2,$y2
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=4
       [/effect]
    [/object]
[/event]

#define WEAPON_SPECIAL_BLOOD_FOR_BLOOD
    [drains]
        id=blood for blood
	value=50
	name= _ "blood for blood"
	description = _ "Unit restores its hitpoints on half of inflicted damage. When living opponent killed by this attack, unit restores 4 HP. When unit hits poisoned opponent with this attack, it will be poisoned itself. When poisoned unit hits healthy opponent with this attack, it will be healed from poison. Moreover, each time unit receives damage, opponent loses 8 hitpoints, half of which will transmit to unit. None of these effects have an effect on undead and mechanisms"
	[filter_opponent]
            [not]
		status=undrainable
	    [/not]
	[/filter_opponent]	
    [/drains]
#enddef

[event]
    id=blood_for_blood_attack
    name=attacker hits
    first_time_only=no
    [filter_second_attack]
	special=blood for blood
    [/filter_second_attack]
    [filter]
	[not]
	    status=undrainable
	[/not]
    [/filter]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	[filter_second]
	    x=$x2
	    y=$y2
	[/filter_second]
	amount=8
	kill=no
	fire_event=yes  
	experience=no 
    [/harm_unit]
    [unstore_unit]
       variable=second_unit
       {COLOR_HEAL}
       text= _ "+4"
       find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x2,$y2
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=4
       [/effect]
    [/object]
[/event]
[event]
    id=blood_for_blood_defense
    name=defender hits
    first_time_only=no
    [filter_attack]
	special=blood for blood
    [/filter_attack]
    [filter_second]
	[not]
	    status=undrainable
	[/not]
    [/filter_second]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	[filter_second]
	    x=$x1
	    y=$y1
	[/filter_second]
	amount=8
	kill=no
	fire_event=no
	experience=no   
    [/harm_unit]
    [unstore_unit]
       variable=unit
       {COLOR_HEAL}
       text= _ "+4"
       find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x1,$y1
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=4
       [/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_KILLING_PLEASURE
    [dummy]
        id=killing pleasure
	name= _ "killing pleasure"
	description= _ "When some opponent killed by this attack, unit restores 8 HP"
    [/dummy]
#enddef
[event]
    name=die
    first_time_only=no
    id=ha_ha_i_m_killed_you
    [filter_second_attack]
	special=killing pleasure
    [/filter_second_attack]
    [unstore_unit]
	variable=second_unit
	{COLOR_HEAL}
	text= _ "+8"
	find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x2,$y2
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=8
       [/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_ENERGY_CONSUMPTION VALUE
    [heal_on_hit]
        id=energy consumption
	value=-{VALUE}
	name= _ "energy consumption"
	description= _ "Unit loses hitpoints every time when hits an opponent with this attack"	
    [/heal_on_hit]
#enddef
#define WEAPON_SPECIAL_SELF_DESTRUCTION
    [dummy]
        id=selfdestruction
	name= _ "self-destruction"
	description= _ "Attack inflicts 25 points of damage to unit itself"	
    [/dummy]
#enddef
[event]
    id=selfdestruction_event
    name=attacker hits, attacker misses
    first_time_only=no
    [filter_attack]
	special=selfdestruction
    [/filter_attack]
    [harm_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=25
	kill=yes
	fire_event=yes   
    [/harm_unit]
[/event]
[event]
    id=selfdestruction_defense
    name=defender hits, defender misses
    first_time_only=no
    [filter_second_attack]
	special=selfdestruction
    [/filter_second_attack]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=25
	kill=yes
	fire_event=yes   
    [/harm_unit]
[/event]
#define WEAPON_SPECIAL_MALE_KILLER
    [damage]
        id=male killer
	name= _ "seduction"
	description= _ "Attack inflicts double damage to male opponents, but only 50% damage to female opponents. Undeads, mechanicals, animals and plants gains normal damage"
    [/damage]
    [damage]
        id=male killer1
	multiply=2
	[filter_opponent]
	    gender=male	
	    [not]
     	    	race=SA_undead,SA_mechanical,SA_wose,SA_plant,SA_monster,SA_bat
	    [/not]
        [/filter_opponent] 
    [/damage]
    [damage]
        id=male killer2
	multiply=0.5
	[filter_opponent]
	    gender=female	
	    [not]
     	    	race=SA_undead,SA_mechanical,SA_wose,SA_plant,SA_monster,SA_bat
	    [/not]
        [/filter_opponent] 		
    [/damage]
#enddef
#define WEAPON_SPECIAL_RAGE
    [dummy]
        id=rage
        name= _ "rage"
        name_inactive= _ "rage"
        description= _ "Everytime when this unit attacked by enemy, number of strikes of this attack increases by 1 until next turn"
    [/dummy]
#enddef
[event]
    name=attack end
    id=rage_event
    first_time_only=no
    [filter_second]
	[has_attack]
	    special=rage
	[/has_attack]
    [/filter_second]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    special=rage
	    increase_attacks=1
	[/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_REVENGE
    [attacks]
        id=revenge
        name= _ "revenge"
        description= _ "This attack inflicts 1 additional strike to any opponent which attacked unit last turn"
        add=1
	[filter_opponent]
     	    [filter_wml]
        	[variables]
                    ogresremember=$other_unit.id
    	     	[/variables]
   	    [/filter_wml]
        [/filter_opponent] 
    [/attacks]
#enddef
[event]
    name=attack end
    id=revenge_event
    first_time_only=no
    [filter_second]
	[has_attack]
	    special=revenge
	[/has_attack]
    [/filter_second]
    {VARIABLE unit.variables.ogresremember $second_unit.id}
    {VARIABLE unit.status.ogresremember yes}
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "I REMEMBA U!"
        {COLOR_HARM}
    [/unstore_unit]
[/event]
#define WEAPON_SPECIAL_OGRE
    [attacks]
        id=ogre_ability
        add=1
	[filter_opponent]
            status=ogresorder
        [/filter_opponent] 
    [/attacks]
#enddef
#define WEAPON_SPECIAL_MISTAKE
    [dummy]
        id=mistake
        name= _ "mistake"
        name_inactive= _ "mistake"
        description= _ "If this attack does not hit the opponent, it will be poisoned instead"
        [filter_opponent]
            [not]
             	status=unpoisonable
            [/not]
        [/filter_opponent]
    [/dummy]
#enddef
[event]
    id=mistake_in_attack
    name=attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=mistake
    [/filter_attack]
    [filter_second]
        [not]
             status=unpoisonable
        [/not]
    [/filter_second]

    {VARIABLE second_unit.status.poisoned yes}  
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text= _ "mistake"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
[event]
    id=mistake_in_defense
    name=defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=mistake
    [/filter_second_attack]
    [filter]
        [not]
    	    status=unpoisonable
        [/not]
    [/filter]

    {VARIABLE unit.status.poisoned yes}  
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "mistake"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
#define WEAPON_SPECIAL_SOMNIFIC
    [dummy]
        id=somnific
        name= _ "somnific"
        description= _ "When this attack hits, it lull an opponent. Sleeping unit can not maintain its zone of control and its corpse can be taked by evil spirit. Effect remains until beginning of next turn of sleeping unit. If sleeping unit will be attacked, it'll wake up"
	[filter_opponent]
	    [not]
	    	race=SA_undead,SA_mechanical,SA_spirit
	    [/not]
        [/filter_opponent] 
    [/dummy]
    [attacks]
        id=somnific1
        multiply=0
	apply_to=opponent
	[filter_opponent]
       	    status=sleeped
        [/filter_opponent] 
    [/attacks]
    [chance_to_hit]
        id=somnific2
        value=90  
	[filter_opponent]
     	    status=sleeped
        [/filter_opponent] 
    [/chance_to_hit]
#enddef
[event]
    id=sleep_begin
    name=attack
    first_time_only=no
    [filter_attack]
	special=somnific
    [/filter_attack]
    [filter_second]
	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
     	    	status=sleeped
	    [/or]
	[/not]
    [/filter_second]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE sleep_in_fact 0}
[/event]
[event]
    id=sleep_begin2
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=somnific
    [/filter_second_attack]
    [filter]
	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
     	    	status=sleeped
	    [/or]
	[/not]
    [/filter]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE sleep2_in_fact 0}
[/event]
[event]
    id=sleep_event
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=somnific
    [/filter_attack]
    [filter_second]
	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
     	    	status=sleeped
	    [/or]
	[/not]
    [/filter_second]
    {VARIABLE second_unit.status.sleeped yes}
    {VARIABLE second_unit.status.disabled yes}
    {VARIABLE sleep_in_fact 1}
    [unstore_unit]
	variable=second_unit
	{COLOR_HARM}
	male_text= _ "lulled"
	female_text= _ "female^lulled"
	find_vacant=no
    [/unstore_unit]
    [object]
        silent=yes
        duration=turn

        [filter]
	    x=$x2
	    y=$y2
        [/filter]

        [effect]
            apply_to=image_mod
            add="CS(0,25,25)"
        [/effect]

        [effect]
            apply_to=zoc
            value=no
        [/effect]
    [/object]
[/event]
[event]
    id=sleep_event2
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=somnific
    [/filter_second_attack]
    [filter]
	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
	    [or]
     	    	status=sleeped
	    [/or]
	[/not]
    [/filter]
    {VARIABLE unit.status.sleeped yes}
    {VARIABLE unit.status.disabled yes}
    {VARIABLE sleep2_in_fact 1}
    [unstore_unit]
	variable=unit
	{COLOR_HARM}
	male_text= _ "lulled"
	female_text= _ "female^lulled"
	find_vacant=no
    [/unstore_unit]
    [object]
        silent=yes
        duration=turn

        [filter]
	    x=$x1
	    y=$y1
        [/filter]

        [effect]
            apply_to=image_mod
            add="CS(0,25,25)"
        [/effect]

        [effect]
            apply_to=zoc
            value=no
        [/effect]
    [/object]
[/event]
[event]
    id=sleep_end
    name=attack end
    first_time_only=no
    [filter_attack]
	special=somnific
    [/filter_attack]
    [if]
    [variable]
	name=sleep_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE sleep_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE sleep_in_fact}
    [/else]
    [/if]
[/event]
[event]
    id=sleep_end2
    name=attack end
    first_time_only=no
    [filter_second_attack]
	special=somnific
    [/filter_second_attack]
    [if]
    [variable]
	name=sleep2_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE unit.status.disabled}
    	[unstore_unit]
	    variable=unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE sleep2_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE sleep2_in_fact}
    [/else]
    [/if]
[/event]
[event]
    id=wake_up
    name=attack
    first_time_only=no
    [filter_attack]
	[not]
	    special=somnific
	    [or]
	   	special=take corpse
	    [/or]
	[/not]
    [/filter_attack]
    [filter_second]
     	status=sleeped
    [/filter_second]
    {VARIABLE second_unit.status.sleeped no}
    {VARIABLE second_unit.status.wakes yes}
    [unstore_unit]
        variable=second_unit
        find_vacant=no
    [/unstore_unit]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=image_mod
            add="CS(-25,-25,-25)"
        [/effect]

        [effect]
            apply_to=zoc
            value=yes
        [/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_TAKE_CORPSE
    [attacks]
        id=take corpse
        name= _ "take corpse"
        description= _ "When this attack hits the sleeping unit, unit takes corpse of opponent if it's level is more on equals to it's opponent level. Units taken by evil spirit change their side"
        multiply=0
	apply_to=opponent
	[filter_opponent]
     	    status=sleeped
        [/filter_opponent] 
    [/attacks]
    [chance_to_hit]
        id=take corpse2
        value=90  
	[filter_opponent]
     	    status=sleeped
        [/filter_opponent] 
    [/chance_to_hit]
#enddef
    [event]
	id=corpse_taken
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=take corpse
        [/filter_attack]

        [filter_second]
            status=sleeped
        [/filter_second]

        [if]
            [variable]
                name=second_unit.level
                less_than_equal_to=$unit.level
            [/variable]
	    [and]
                [variable]
                    name=second_unit.hitpoints
                    greater_than=0
            	[/variable]		
	    [/and]
	    [then]
	    {VARIABLE second_unit.side $unit.side}
	    {VARIABLE second_unit.moves 0}
	    {VARIABLE second_unit.attacks_left 0}
            [unstore_unit]
            	variable=second_unit
            	find_vacant=no
		text= _ "CORPSE TAKEN!"
	    	red,green,blue=128,128,128
            [/unstore_unit]
            [object]
            	silent=yes
                duration=forever

            	[filter]
                    x,y=$x2,$y2
            	[/filter]

            	[effect]
                    apply_to=new_advancement
                    types=$second_unit.type
		    replace=yes
            	[/effect]
            	[effect]
                    apply_to=remove_advancement
                    amlas=amla_default,amla_maxima
            	[/effect]
            [/object]    
	    [/then]      
        [/if]
    [/event]
#define WEAPON_SPECIAL_DARK_MARK
    [dummy]
        id=dark mark
        name= _ "dark mark"
        description= _ "When this attack hits, its markes opponent with dark mark. Dark mark will remain until next turn of marked unit begin. If marked unit dies, it becomes zombie, which will serve to ability possesor. Dark mark can also be used to slow undead units. It can be replaced with dark mark of other side"
    [/dummy]
#enddef
    [event]
	id=darkmark_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=dark mark
        [/filter_attack]

    	[filter_second]
	    race=SA_undead
	    [or]
            	[not]
            	    status=unplagueable
            	[/not]
	    [/or]
    	[/filter_second]

	[if]
	    [variable]
            	name=second_unit.race
            	equals=SA_undead
       	    [/variable]

            [then]
		{VARIABLE second_unit.status.slowed yes}
        	[unstore_unit]
        	    variable=second_unit
        	    find_vacant=no
        	    text= _ "MARKED BY DARKNESS!"
        	    red,green,blue=128,128,128
        	[/unstore_unit]
            [/then]

            [else]
		{VARIABLE second_unit.status.darkmarked yes}
		{VARIABLE second_unit.variables.darkmarkof $unit.side}
        	[unstore_unit]
        	    variable=second_unit
        	    find_vacant=no
        	    text= _ "MARKED BY DARKNESS!"
        	    red,green,blue=128,128,128
        	[/unstore_unit]
        	[object]
            	    silent=yes
                    duration=turn

            	    [filter]
                	x,y=$x2,$y2
            	    [/filter]

            	    [effect]
                	apply_to=image_mod
                	add="CS(-20,-20,-20)"
            	    [/effect]
        	[/object]
       	    [/else]
    	[/if]

    [/event]

    [event]
	id=darkmark_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=dark mark
        [/filter_second_attack]

    	[filter]
	    race=SA_undead
	    [or]
            	[not]
            	    status=unplagueable
            	[/not]
	    [/or]
    	[/filter]

	[if]
	    [variable]
            	name=unit.race
            	equals=SA_undead
       	    [/variable]

            [then]
		{VARIABLE unit.status.slowed yes}
        	[unstore_unit]
        	    variable=unit
        	    find_vacant=no
        	    text= _ "MARKED BY DARKNESS!"
        	    red,green,blue=128,128,128
        	[/unstore_unit]
            [/then]

            [else]
		{VARIABLE unit.status.darkmarked yes}
		{VARIABLE unit.variables.darkmarkof $second_unit.side}
        	[unstore_unit]
        	    variable=unit
        	    find_vacant=no
        	    text= _ "MARKED BY DARKNESS!"
        	    red,green,blue=128,128,128
        	[/unstore_unit]
        	[object]
            	    silent=yes
                    duration=turn

            	    [filter]
                	x,y=$x1,$y1
            	    [/filter]

            	    [effect]
                	apply_to=image_mod
                	add="CS(-20,-20,-20)"
            	    [/effect]
        	[/object]
       	    [/else]
    	[/if]

    [/event]

[event]
    id=dark_mark_works1
    name=die
    first_time_only=no

    [filter]
        status=darkmarked
	[and]
	    [not]
            	[filter_location]
                    terrain=*^V*
            	[/filter_location]
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	trait=undead leader
    [/filter_second]
    [if]
    [variable]
        name=unit.canrecruit
        equals=yes
    [/variable]
    [and]
    [variable]
        name=second_unit.canrecruit
        equals=yes
    [/variable]
    [/and]
    [then]
    [/then]
    [else]
    	[unit]
	    type=Undead Zombie
	    variation=$unit.undead_variation
	    side=$unit.variables.darkmarkof
	    x=$x1
	    y=$y1
	    to_variable=plagued
    	[/unit]
    	[unstore_unit]
	    variable=plagued
	    find_vacant=no
            text= _ "zombification"
            red,green,blue=128,64,128
    	[/unstore_unit]
    	{CLEAR_VARIABLE plagued}
    [/else]
    [/if]
[/event]

[event]
    id=dark_mark_works2
    name=die
    first_time_only=no

    [filter]
        status=darkmarked
	[and]
	    [not]
            	[filter_location]
                    terrain=*^V*
            	[/filter_location]
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	[not]
	   trait=undead leader
	[/not]
    [/filter_second]
    [unit]
	type=Undead Zombie
	variation=$unit.undead_variation
	side=$unit.variables.darkmarkof
	x=$x1
	y=$y1
	to_variable=plagued
    [/unit]
    [unstore_unit]
	variable=plagued
	find_vacant=no
        text= _ "zombification"
        red,green,blue=128,64,128
    [/unstore_unit]
    {CLEAR_VARIABLE plagued}
[/event]

#define WEAPON_SPECIAL_MAGIC_FETTERS
    [dummy]
        id=magic fetters
        name= _ "magic fetters"
        description= _ "Enemy mages, hitted by this attack will be slowed. Fetters wouldn't have impact on non-mages"
    [/dummy]
#enddef
    [event]
	id=fetters_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=magic fetters
        [/filter_attack]

        [filter_second]
	    {IS_MAGE}
            [not]
		status=slowed            
	    [/not]
        [/filter_second]

        {VARIABLE second_unit.status.slowed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "magic fetters"
            red,green,blue=196,128,196
        [/unstore_unit]

    [/event]

    [event]
	id=fetters_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=magic fetters
        [/filter_second_attack]

        [filter]
	    {IS_MAGE}
            [not]
		status=slowed            	
	    [/not]
        [/filter]

        {VARIABLE unit.status.slowed yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            text= _ "magic fetters"
            red,green,blue=196,128,196
        [/unstore_unit]
    [/event]
#define WEAPON_SPECIAL_ILLUSION
    [dummy]
        id=illusion
        name= _ "bluff"
        description= _ "This attack inflicts 100% more damage to 1st level opponents, 50% less damage to 3rd damage opponents, 75% less damage to 4th level opponents. Undead and mechanical units can't be attacked by this attack"	
    [/dummy]
    [damage]
        id=illusion1
        multiply=2
	[filter_opponent]
	    level=1
	    [not]
		trait=fearless
	    [/not]
	[/filter_opponent]	
    [/damage]
    [damage]
        id=illusion2
        multiply=0.5
	[filter_opponent]
	    level=3
	[/filter_opponent]	
    [/damage]
    [damage]
        id=illusion3
        multiply=0.25
	[filter_opponent]
	    level=4
	[/filter_opponent]	
    [/damage]
    [attacks]
        id=illusion4
        value=0
	[filter_opponent]
	    race=SA_undead,SA_mechanical,SA_spirit
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_TELEKINESIS
    [damage]
        id=telekinesis
        name= _ "telekinesis"
        description= _ "When unit uses this attack, it receives 50% less damage from blade, pierce and impact attacks. Can be countered with ''backstab''"
        multiply=0.5
	apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		type=blade,pierce,impact
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]	
    [/damage]
#enddef
#define WEAPON_SPECIAL_FATEFUL
    [disable]
        id=fateful
        name= _ "fateful"
        description= _ "When unit uses this attack, opponent can't strike back. If encounter ends and opponent still alive, unit dies"
	apply_to=opponent
    [/disable]
#enddef
[event]
    id=meet_your_fate
    name=attack
    first_time_only=no
    [filter_attack]
	special=fateful
    [/filter_attack]
    [heal_unit]
	[filter]
	   x=$unit.x
	   y=$unit.y
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    id=meet_his_fate
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=fateful
    [/filter_second_attack]
    [heal_unit]
	[filter]
	   x=$second_unit.x
	   y=$second_unit.y
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    id=fate_of_attacker
    name=attack end
    first_time_only=no
    [filter_attack]
	special=fateful
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
	[kill]
	    x=$x1
	    y=$y1
	    animate=yes
	    fire_event=yes
	[/kill]
    [/then]
    [/if]
[/event]
[event]
    id=fate_of_defender
    name=attack end
    first_time_only=no
    [filter_second_attack]
	special=fateful
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
	[kill]
	    x=$x2
	    y=$y2
	    animate=yes
	    fire_event=yes
	[/kill]
    [/then]
    [/if]
[/event]
#define WEAPON_SPECIAL_LIGHT_MAGIC
    [dummy]
        id=light magic
        name= _ "light magic"
        description= _ "This attack inflicts 25% more damage at daytime and 25% less damage at night"
    [/dummy]
    [damage]
        id=light magic1
        multiply=1.25
        [filter_self]
	    [filter_location]
		time_of_day=lawful
	    [/filter_location]
        [/filter_self]
    [/damage]
    [damage]
        id=light magic2
        multiply=0.75
        [filter_self]
	    [filter_location]
		time_of_day=chaotic
	    [/filter_location]
        [/filter_self]
    [/damage]
#enddef
    [event]
	id=light_magic_attack
   	name=attack end
    	first_time_only=no

        [filter_attack]
            special=light magic
        [/filter_attack]

	[filter]
	    [has_attack]
    		special=dark magic
		[or]
    		     special=dark swarm
		[/or]
	    [/has_attack]	
	[/filter]

	{VARIABLE tmp_sw 0}
	{VARIABLE tmp_sd 0}
	{VARIABLE tmp_bs 0}
	{VARIABLE tmp_ds 0}

	{FOREACH unit.attack att}
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_213"
	    [/variable]
	    [then]
		{VARIABLE tmp_sw 2}
		[set_variable]
		    name=tmp_sw
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_225"
	    [/variable]
	    [then]
		{VARIABLE tmp_bs 5}
		[set_variable]
		    name=tmp_bs
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_325"
	    [/variable]
	    [then]
		{VARIABLE tmp_ds 6}
		[set_variable]
		    name=tmp_bs
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_331"
	    [/variable]
	    [then]
		{VARIABLE tmp_sd 3}
		[set_variable]
		    name=tmp_sd
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	{NEXT att}
        [object]
           silent=yes
       	   duration=forever
       	   [filter]
       	       x,y=$x1,$y1
           [/filter]
       	   [effect]
     	       apply_to=attack
	       special=light magic
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_225
    	       increase_attacks=$tmp_bs
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_325
    	       increase_attacks=$tmp_ds
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_213
    	       increase_attacks=$tmp_sw
       	   [/effect]	 
       	   [effect]
     	       apply_to=attack
	       name=spell_331
    	       increase_attacks=$tmp_sd
       	   [/effect]  
    	[/object]
	{CLEAR_VARIABLE tmp_bs}
	{CLEAR_VARIABLE tmp_sw}
	{CLEAR_VARIABLE tmp_sd}
    [/event]
    [event]
	id=light_magic_defense
   	name=attack end
    	first_time_only=no

        [filter_second_attack]
            special=light magic
        [/filter_second_attack]

	[filter_second]
	    [has_attack]
    		special=dark magic
		[or]
    		     special=dark swarm
		[/or]
	    [/has_attack]	
	[/filter_second]

	{VARIABLE tmp_sw 0}
	{VARIABLE tmp_sd 0}
	{VARIABLE tmp_bs 0}
	{VARIABLE tmp_ds 0}

	{FOREACH second_unit.attack att}
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_213"
	    [/variable] 
	    [then]
	        {VARIABLE tmp_sw 2}
		[set_variable]
		    name=tmp_sw
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_225"
	    [/variable]
	    [then]
		{VARIABLE tmp_bs 5}
		[set_variable]
		    name=tmp_bs
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_325"
	    [/variable]
	    [then]
		{VARIABLE tmp_ds 6}
		[set_variable]
		    name=tmp_bs
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_331"
	    [/variable] 
	    [then]
	        {VARIABLE tmp_sd 3}
		[set_variable]
		    name=tmp_sd
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	{NEXT att}

        [object]
           silent=yes
       	   duration=forever
       	   [filter]
       	       x,y=$x2,$y2
           [/filter]
       	   [effect]
     	       apply_to=attack
	       special=light magic
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_225
    	       increase_attacks=$tmp_bs
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_325
    	       increase_attacks=$tmp_ds
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_213
    	       increase_attacks=$tmp_sw
       	   [/effect]	 
       	   [effect]
     	       apply_to=attack
	       name=spell_331
    	       increase_attacks=$tmp_sd
       	   [/effect]
    	[/object]
	{CLEAR_VARIABLE tmp_bs}
	{CLEAR_VARIABLE tmp_sw}
	{CLEAR_VARIABLE tmp_sd}
    [/event]
#define WEAPON_SPECIAL_DARK_MAGIC
    [dummy]
        id=dark magic
        name= _ "dark magic"
        description= _ "This attack inflicts 25% more damage at night and 25% less damage at daytime"
    [/dummy]
    [damage]
        id=dark magic1
        multiply=0.75
        [filter_self]
	    [filter_location]
		time_of_day=lawful
	    [/filter_location]
        [/filter_self]
    [/damage]
    [damage]
        id=dark magic2
        multiply=1.25
        [filter_self]
	    [filter_location]
		time_of_day=chaotic
	    [/filter_location]
        [/filter_self]
    [/damage]
#enddef
    [event]
	id=dark_magic_attack
   	name=attack end
    	first_time_only=no

        [filter_attack]
            special=dark magic
	    [or]
            	special=dark swarm
	    [/or]
        [/filter_attack]

	[filter]
	    [has_attack]
    		special=light magic
	    [/has_attack]	
	[/filter]

	{VARIABLE tmp_lm 0}
	{VARIABLE tmp_ll 0}

	{FOREACH unit.attack att}
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_209"
	    [/variable]
	    [or]
	    	[variable]
		    name=unit.attack[$att].name
		    equals="spell_309"
	    	[/variable]
	    [/or]
	    [then]
		{VARIABLE tmp_lm 3}
		[set_variable]
		    name=tmp_lm
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=unit.attack[$att].name
		equals="spell_224"
	    [/variable]
	    [or]
	    	[variable]
		    name=unit.attack[$att].name
		    equals="spell_324"
	    	[/variable]
	    [/or]
	    [then]
		{VARIABLE tmp_ll 2}
		[set_variable]
		    name=tmp_ll
		    sub=$unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	{NEXT att}

        [object]
           silent=yes
       	   duration=forever
       	   [filter]
       	       x,y=$x1,$y1
           [/filter]
       	   [effect]
     	       apply_to=attack
	       special=dark magic
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       special=dark swarm
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_224,spell_324
    	       increase_attacks=$tmp_ll
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_209,spell_309
    	       increase_attacks=$tmp_lm
       	   [/effect]	   
    	[/object]
	{CLEAR_VARIABLE tmp_lm}
	{CLEAR_VARIABLE tmp_ll}
    [/event]
    [event]
	id=dark_magic_defense
   	name=attack end
    	first_time_only=no

        [filter_second_attack]
            special=dark magic
	    [or]
            	special=dark swarm
	    [/or]
        [/filter_second_attack]

	[filter_second]
	    [has_attack]
    		special=light magic
	    [/has_attack]	
	[/filter_second]

	{VARIABLE tmp_lm 0}
	{VARIABLE tmp_ll 0}

	{FOREACH second_unit.attack att}
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_209"
	    [/variable]
	    [or]
	    	[variable]
		    name=second_unit.attack[$att].name
		    equals="spell_309"
	    	[/variable]
	    [/or]
	    [then]
	        {VARIABLE tmp_lm 3}
		[set_variable]
		    name=tmp_lm
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	    [if]
	    [variable]
		name=second_unit.attack[$att].name
		equals="spell_224"
	    [/variable]
	    [or]
	    	[variable]
		    name=second_unit.attack[$att].name
		    equals="spell_324"
	    	[/variable]
	    [/or]
	    [then]
		{VARIABLE tmp_ll 2}
		[set_variable]
		    name=tmp_ll
		    sub=$second_unit.attack[$att].number
		[/set_variable]
	    [/then]
	    [/if]
	{NEXT att}

        [object]
           silent=yes
       	   duration=forever
       	   [filter]
       	       x,y=$x2,$y2
           [/filter]
       	   [effect]
     	       apply_to=attack
	       special=dark magic
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       special=dark swarm
    	       increase_attacks=-1
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_224,spell_324
    	       increase_attacks=$tmp_ll
       	   [/effect]
       	   [effect]
     	       apply_to=attack
	       name=spell_209,spell_309
    	       increase_attacks=$tmp_lm
       	   [/effect]   
    	[/object]
	{CLEAR_VARIABLE tmp_lm}
	{CLEAR_VARIABLE tmp_ll}
    [/event]
#define WEAPON_SPECIAL_SNEAKY_BLOW
    [damage]
        id=sneaky blow
        name= _ "backstab"
	description= _ "When used offensively, if there is other enemy of the target on it's opposite side, this attack deals double damage, ignoring ''firststrike'' and some other defensive weapon specials"
        active_on=offense
        multiply=2
        [filter_opponent]
            [filter_adjacent]
                adjacent=$other_unit.facing
                is_enemy=yes
            [/filter_adjacent]
        [/filter_opponent]
	[filter_self]
	     [filter_weapon]
		[not]
		    special_active=sneaky_disable
		[/not]
	     [/filter_weapon]
	[/filter_self]
    [/damage]
    [firststrike]
        id=sneaky blow2
        active_on=offense
        [filter_opponent]
            [filter_adjacent]
                adjacent=$other_unit.facing
                is_enemy=yes
            [/filter_adjacent]
        [/filter_opponent]
	[filter_self]
	     [filter_weapon]
		[not]
		    special_active=sneaky_disable
		[/not]
	     [/filter_weapon]
	[/filter_self]
    [/firststrike]
    [dummy]
	id=sneaky_disable
	[filter_opponent]
	     [filter_weapon]
		special_active=animal habits
		[or]
		     special_active=foreseer
		[/or]
	     [/filter_weapon]
	[/filter_opponent]
    [/dummy]
#enddef

#define WEAPON_SPECIAL_ALWAYS_BACKSTAB
    [damage]
        id=always backstab
        name= _ "always backstab"
        description= _ "When used offensively, this attack deals double damage if there is no ally of the target on the opposite side of the target. Attack also ignoring ''firststrike'' and some other defensive weapon specials"
        multiply=2
        active_on=offense
        [filter_opponent]
	    [not]
            	[filter_adjacent]
                    adjacent=$other_unit.facing
                    is_enemy=no
            	[/filter_adjacent]
	    [/not]
        [/filter_opponent]
	[filter_self]
	     [filter_weapon]
		[not]
		    special_active=sneaky_disable
		[/not]
	     [/filter_weapon]
	[/filter_self]
    [/damage]
    [dummy]
	id=sneaky_disable
	[filter_opponent]
	     [filter_weapon]
		special_active=animal habits
		[or]
		     special_active=foreseer
		[/or]
	     [/filter_weapon]
	[/filter_opponent]
    [/dummy]
#enddef
#define WEAPON_SPECIAL_BACKSTAB_ONLY
    [disable]
        id=backstab_only
        name= _ "backstab only"
        description= _ "This attack doesn't inflict any damage if there is no ally unit on the opposite side of the target and never inflicts damage in defense"
	active_on=offense
    	[filter_self]
	    [filter_weapon]
	    	[not]
		    special_active=backstab
		    [or]
			special_active=sneaky blow
		    [/or]  
	    	[/not]
	    [/filter_weapon]
    	[/filter_self]
    [/disable]
    [disable]
        id=backstab_only2
	active_on=defense
    [/disable]
#enddef
#define WEAPON_SPECIAL_DARK_SWARM
    [dummy]
        id=dark swarm
        name= _ "dark swarm"
        description= _ "This attack do one more strike at night and one less strike at daytime"
    [/dummy]
    [attacks]
        id=dark swarm1
        sub=1
        [filter_self]
	    [filter_location]
		time_of_day=lawful
	    [/filter_location]
        [/filter_self]
    [/attacks]
    [attacks]
        id=dark swarm2
        add=1
        [filter_self]
	    [filter_location]
		time_of_day=chaotic
	    [/filter_location]
        [/filter_self]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_DARK_MELODY
    [dummy]
        id=dark melody
        name= _ "dark melody"
        description= _ "Attack does only half of shoots at twilight and can't be used at daytime. However, unit restores its hitpoints on value of inflicted damage"
	[filter_opponent]
            [not]
		status=undrainable
	    [/not]
	[/filter_opponent]
    [/dummy]
    [drain]
        id=dark melody1
        value=100
    [/drain]
    [attacks]
        id=dark melody2
        name= _ "dark melody"
        description= _ "Attack does only half of shoots at twilight and can't be used at daytime. However, unit restores its hitpoints on value of inflicted damage"
        divide=2
        [filter_self]
	    [filter_location]
		time_of_day=neutral
	    [/filter_location]
        [/filter_self]
    [/attacks]
    [disable]
        id=dark melody3
        [filter_self]
	    [filter_location]
		time_of_day=lawful
	    [/filter_location]
        [/filter_self]
    [/disable]
#enddef
#define WEAPON_SPECIAL_FIGHT_MELODY
    [dummy]
        id=fight melody
        name= _ "fight melody"
        description= _ "If first couplet reaches ears of the opponent, it slows. If second couplet reaches ears of the opponent, it provokes. If third couplet reaches ears of the opponent, it distracts. This attack doen't affects units of 3rd and 4th level and unit's with ''fearless'' trait"
    [/dummy]
    [damage]
	id=fight melody2
	multiply=0
	[filter_opponent]
	    level=3
	    [or]
		level=4
	    [/or]
	    [or]
		trait=fearless
	    [/or]
	[/filter_opponent]
    [/damage]
#enddef
#define WEAPON_SPECIAL_VERY_LONG
    [dummy]
        id=very long
        name= _ "very long"
        description= _ "When this attack is used in offense, the opponent will answer with one less strike than normally. When this attack is used in defense, unit itself will inflict one less strike"
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special=very long1
			[or]
			    special_active=sure
			[/or]
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/dummy]
    [attacks]
        id=very long1
        sub=1
        active_on=offense
        apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special=very long1
			[or]
			    special_active=sure
			[/or]
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
    [attacks]
        id=very long2
        sub=1
        active_on=defense
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=very long1
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_SHADOWS_RECALL
    [dummy]
        id=shadows recall
        name= _ "shadows recall"
        description= _ "When this attack used, from one to six shadows appears on free positions across one hex from the unit. Can be used only once"
    [/dummy]
#enddef
[event]
    id=shadow_world
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=shadows recall
    [/filter_second_attack]
    [if]
    [variable]
	name=second_unit.level
	less_than=4
    [/variable]
    [then]
	[if]
	[have_location]
	    [filter_adjacent_location]
		adjacent=$unit.facing
		[filter_adjacent_location]
		    adjacent=$unit.facing
		    x=$x1
		    y=$y1
 		[/filter_adjacent_location]
	    [/filter_adjacent_location]
	    [not]
		[filter]
		[/filter]
	    [/not]
	[/have_location]
	[then]
	    [store_locations]
		[filter_adjacent_location]
		    adjacent=$unit.facing
		    [filter_adjacent_location]
			adjacent=$unit.facing
			x=$x1
			y=$y1
 		    [/filter_adjacent_location]
		[/filter_adjacent_location]
		variable=sd
	    [/store_locations]
	    [unit]
		side=$second_unit.side
		type=Undead Shadow
		moves=0
		attacks_left=0
		x=$sd[0].x
		y=$sd[0].y
		passable=yes
	    [/unit]
	    {CLEAR_VARIABLE sd}
	[/then]
	[/if]
    [/then]
    [else]
    	[set_variables]
	    name=directions
	    [value]
	    	d="n"
	    [/value]
	    [value]
	    	d="ne"
	    [/value]
	    [value]
	    	d="nw"
	    [/value]
	    [value]
	    	d="s"
	    [/value]
	    [value]
	    	d="se"
	    [/value]
	    [value]
	    	d="sw"
	    [/value]
    	[/set_variables]
    	{FOREACH directions s}
	    [if]
	    [have_location]
		[filter_adjacent_location]
		    adjacent=$directions[$s].d
		    [filter_adjacent_location]
			adjacent=$directions[$s].d
			x=$x1
			y=$y1
 		    [/filter_adjacent_location]
		[/filter_adjacent_location]
		[not]
		    [filter]
		    [/filter]
		[/not]
	    [/have_location]
	    [then]
	    	[store_locations]
		    [filter_adjacent_location]
		    	adjacent=$directions[$s].d
		    	[filter_adjacent_location]
			     adjacent=$directions[$s].d
			     x=$x1
			     y=$y1
 		    	[/filter_adjacent_location]
		    [/filter_adjacent_location]
		    variable=sd
	    	[/store_locations]
	    	[unit]
		    side=$second_unit.side
		    type=Undead Shadow
		    moves=0
		    attacks_left=0
		    x=$sd[0].x
		    y=$sd[0].y
	    	[/unit]
	    	{CLEAR_VARIABLE sd}
	    [/then]
	    [/if]
    	{NEXT s}
    [/else]
    [/if]
    [redraw]
	clear_shroud=yes
	side=$second_unit.side
    [/redraw]
    [object]
        silent=yes
        duration=scenario
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=remove_attacks
	    special=shadows recall
	[/effect]
    [/object]
    {CLEAR_VARIABLE directions}
[/event]
#define WEAPON_SPECIAL_RESISTANCE_IMPOSSIBLE
    [disable]
        id=resistance impossible
        name= _ "resistance is impossible"
        description= _ "When this attack is used in offense, the opponent can't strike back, if it hasn't very long weapon"
        active_on=offense
        apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=very long1
		    [or]
		    	special=resistance impossible
			[or]
			    special=sure
			[/or]
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_UNTOUCHABLE
    [disable]
        id=untouchable
        name= _ "untouchable"
        description= _ "Unit can't be attacked at melee combat by non-flying unit, except when it's in village or cave"
        active_on=defense
        apply_to=opponent
	[filter_opponent]
	    [not]
		{IS_CAN_FLY}
	    [/not]
	[/filter_opponent]
	[filter_self]
            [filter_location]
		[not]
            	    terrain=*^V*,U*
		[/not]
            [/filter_location]
	    [filter_weapon]
		[not]
		    special_active=untouchable_disable
		[/not]
	    [/filter_weapon]
	[/filter_self]
    [/disable]
    [dummy]
	id=untouchable_disable
	[filter_opponent]
	    [filter_weapon]
		special_active=sky piercing
	    [/filter_weapon]
	[/filter_opponent]
    [/dummy]
#enddef
#define WEAPON_SPECIAL_SKY_PIERCING
    [firststrike]
        id=sky piercing
        name= _ "sky piercing"
        description= _ "Unit can attack flying units from earth and deprives opponent of abilities ''rain aura'', ''cover of darkness'' and ''impenetrable darkness'' for 1 turn when hits"
    [/firststrike]
#enddef
   [event]
	id=piercing_the_sky
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=sky piercing
        [/filter_attack]

        [filter_second]
            ability=rain_aura1,darknesscover,eternalnight
        [/filter_second]

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "Piercing the sky!"
            female_text= _ "female^Piercing the sky!"
            red,green,blue=255,255,255
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=remove_ability
                [abilities]
		    {ABILITY_RAIN_AURA}
		    {ABILITY_DARKNESS_COVER}
		    {ABILITY_IMPENETRABLE_DARKNESS}
		[/abilities]
            [/effect]

        [/object]
    [/event]

    [event]
	id=piercing_the_sky_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=sky piercing
        [/filter_second_attack]

        [filter]
            ability=rain_aura1,darknesscover,eternalnight
        [/filter]

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "Piercing the sky!"
            female_text= _ "female^Piercing the sky!"
            red,green,blue=255,255,255
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=remove_ability
                [abilities]
		    {ABILITY_RAIN_AURA}
		    {ABILITY_DARKNESS_COVER}
		    {ABILITY_IMPENETRABLE_DARKNESS}
		[/abilities]
            [/effect]

        [/object]
    [/event]
#define WEAPON_SPECIAL_BALANCE_CIRCLE
    [disable]
        id=balance circle
        name= _ "balance circle"
        description= _ "Arcane attacks can't be used against this attack, unless opponent is Balance Mage itself. Can be countered with ''backstab''"
        apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		type=arcane
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		    [/or]
		[/not]
	    [/filter_weapon]
	    [not]
		type=Undead Balance Mage
	    [/not]	    
	[/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_BLOCK
    [attacks]
        id=block
        name= _ "interception"
        description= _ "When this attack is used in defense, both the unit and its opponent will inflict one less strike. Can be countered with ''backstab''"
        sub=1
        active_on=defense
        apply_to=both
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
		        special_active=sneaky blow
		        [or]
			    special_active=always backstab
			    [or]
			    	special_active=sure
			    [/or]
		     	[/or]
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_HEAVY
    [attacks]
        id=heavy
        name= _ "heavy"
        description= _ "This attack inflicts one less strike in defense, but has +10% accuracy against units under water"
        sub=1
        active_on=defense
        apply_to=self
    [/attacks]
    [chance_to_hit]
	id=heavy1
	add=10
	[filter_opponent]
	    ability=submarine,nonbreather
	    [filter_location]
		terrain=Wo*
	    [/filter_location]
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_CLUMSY
    [attacks]
        id=clumsy
        name= _ "clumsy"
        description= _ "This attack inflicts one less strike at melee combat if opponent stands on land or in air"
        sub=1
        apply_to=self
	[filter_opponent]
	    [filter_location]
		{IS_TERRAIN_OPEN_WATER}
	    [/filter_location]
	    [and]
		{IS_CAN_FLY}
	    [/and]
	    [or]
		[filter_location]
		    [not]
			{IS_TERRAIN_OPEN_WATER}
		    [/not]	        
		[/filter_location]	
	    [/or]
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_ETERNAL_POISON
    [poison]
        id=eternal poison
        name= _ "eternal poison"
        description= _ "This poison restores in beginning of every turn of victim until it will be healed by magic"
	[filter_opponent]
	    [not]
            	status=unpoisonable 
            [/not]
	[/filter_opponent]
    [/poison]
#enddef
    [event]
	id=poison_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=eternal poison
        [/filter_attack]

        [filter_second]
	    [not]
            	status=unpoisonable 
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.eternal_poison yes}
    	[unstore_unit]
            variable=second_unit
            find_vacant=no
    	[/unstore_unit]
    [/event]
    [event]
	id=poison_in_defend
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=eternal poison
        [/filter_second_attack]

        [filter]
	    [not]
                status=unpoisonable
	    [/not]
        [/filter]

        {VARIABLE unit.status.eternal_poison yes}
    	[unstore_unit]
            variable=unit
            find_vacant=no
    	[/unstore_unit]
    [/event]
#define WEAPON_SPECIAL_MIASM
    [dummy]
        id=miasm
        name= _ "miasm"
        description= _ "If unit hitted by living opponent, opponent will be poisoned"
	[filter_opponent]
	    [not]
            	status=unpoisonable 
            [/not]
	[/filter_opponent]
    [/dummy]
#enddef
[event]
    id=miasm_in_attack
    name=attacker hits
    first_time_only=no
    [filter]
        [not]
    	    status=unpoisonable
        [/not]	
    [/filter]
    [filter_second_attack]
        special=miasm
    [/filter_second_attack]

    {VARIABLE unit.status.poisoned yes}  
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "miasm"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
[event]
    id=miasm_in_defense
    name=defender hits
    first_time_only=no
    [filter_second]
        [not]
    	    status=unpoisonable
        [/not]	
    [/filter_second]
    [filter_attack]
        special=miasm
    [/filter_attack]

    {VARIABLE second_unit.status.poisoned yes}  
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text= _ "miasm"
        red,green,blue=128,196,128
    [/unstore_unit]
[/event]
#define WEAPON_SPECIAL_CRITICAL_HIT
    [dummy]
        id=critical hit
        name= _ "critical hit"
        description= _ "When this attack hits in offense and inflicts 15 or more damage, wounded opponent stops retaliation"
	[filter_opponent]
	    [not]
            	ability=unstoppable rage
            [/not]
	[/filter_opponent]
    [/dummy]
#enddef
[event]
    id=critical_begin
    name=attack
    first_time_only=no
    [filter_attack]
	special=critical hit
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE critical_hit_in_fact 0}
[/event]
[event]
    id=critical_event
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=critical hit
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=14
    [/variable]
    [and]
    	[variable]
	    name=critical_hit_in_fact
	    equals=0
    	[/variable]
    [/and]
    [then]
    	{VARIABLE second_unit.status.disabled yes}  
    	[unstore_unit]
       	    variable=second_unit
            {COLOR_HARM}
            text= _ "CRITICAL HIT!"
            find_vacant=no
    	[/unstore_unit]
    	{VARIABLE critical_hit_in_fact 1}
    [/then]
    [/if]
[/event]
[event]
    id=critical_end
    name=attack end
    first_time_only=no
    [filter_attack]
	special=critical hit
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=critical_hit_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE critical_hit_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE critical_hit_in_fact}
    [/else]
    [/if]
[/event]
#define WEAPON_SPECIAL_IMMOBILIZATION
    [dummy]
        id=immobilization
        name= _ "immobilization"
        description= _ "When this attack hits, opponent loses all his attacks and its defense lowers to 10% until beginning of its next turn. Doesn't work against giant, flying and mounted units"
	[filter_opponent]
	    [not]
            	ability=unstoppable rage
	    	[or]
		    {IS_CAN_FLY}
		    [or]
		    	{IS_BIG}
		    [/or]
	    	[/or]
            [/not]
	[/filter_opponent]
    [/dummy]
#enddef
[event]
    id=immobilization_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=immobilization
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	    [or]
		{IS_CAN_FLY}
		[or]
		    {IS_BIG}
		[/or]
	    [/or]
	[/not]
    [/filter_second]
    [unstore_unit]
       variable=second_unit
       {COLOR_HARM}
       male_text= _ "IMMOBILIZIED!"
       female_text= _ "female^IMMOBILIZIED!"
       find_vacant=no
    [/unstore_unit]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=status
	    add=immobilizied
	[/effect]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
	[effect]
	    apply_to=status
	    add=disabled
	[/effect]
    [/object]
[/event]
[event]
    id=immobilization_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=immobilization
    [/filter_second_attack]
    [filter]
	[not]
	    ability=unstoppable rage
	    [or]
		{IS_CAN_FLY}
		[or]
		    {IS_BIG}
		[/or]
	    [/or]
	[/not]
    [/filter]
    [unstore_unit]
       variable=unit
       {COLOR_HARM}
       male_text= _ "IMMOBILIZIED!"
       female_text= _ "female^IMMOBILIZIED!"
       find_vacant=no
    [/unstore_unit]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=status
	    add=immobilizied
	[/effect]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
	[effect]
	    apply_to=status
	    add=disabled
	[/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_RESOLUTE_REBUFF
    [dummy]
        id=resolute rebuff
        name= _ "resolute rebuff"
        description= _ "When this attack hits in defense and inflicts 15 or more damage, encounter stops immediately"
	[filter_opponent]
	    [not]
            	ability=unstoppable rage
            [/not]
	[/filter_opponent]
    [/dummy]
#enddef
[event]
    id=rebuff_begin
    name=attack
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_second_attack]
	special=resolute rebuff
    [/filter_second_attack]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=attack
	    [set_specials]
		mode=append
		{WEAPON_SPECIAL_DISABLED}		
	    [/set_specials]
	[/effect]
    [/object]
    {VARIABLE rebuff_in_fact 0}
[/event]
[event]
    id=rebuff_event
    name=defender hits
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_second_attack]
	special=resolute rebuff
    [/filter_second_attack]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=14
    [/variable]
    [and]
    	[variable]
	    name=rebuff_in_fact
	    equals=0
    	[/variable]
    [/and]
    [then]
    	{VARIABLE unit.status.disabled yes}
    	{VARIABLE second_unit.status.disabled yes}  
    	[unstore_unit]
       	    variable=unit
            {COLOR_HARM}
            text= _ "RESOLURE REBUFF!"
            find_vacant=no
    	[/unstore_unit]
    	[unstore_unit]
       	    variable=second_unit
    	[/unstore_unit]
    	{VARIABLE rebuff_in_fact 1}
    [/then]
    [/if]
[/event]
[event]
    id=rebuff_end
    name=attack end
    first_time_only=no
    [filter]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter]
    [filter_second_attack]
	special=resolute rebuff
    [/filter_second_attack]
    [if]
    [variable]
	name=rebuff_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
	{CLEAR_VARIABLE unit.status.disabled}
    	[unstore_unit]
	    variable=unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE rebuff_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE rebuff_in_fact}
    [/else]
    [/if]
[/event]
#define WEAPON_SPECIAL_LETHAL
    [dummy]
        id=lethal
        name= _ "lethal"
        description= _ "When this attack hits in offense and inflicts 25 or more damage, opponent dies"
    [/dummy]
#enddef
[event]
    id=lethal_event
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=lethal
    [/filter_attack]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=24
    [/variable]
    [then]
        [unstore_unit]
            variable=second_unit
            {COLOR_HARM}
            text= _ "FATAL HIT!"
            find_vacant=no
    	[/unstore_unit]
    	[harm_unit]
	    [filter]
		x=$x2
		y=$y2
	    [/filter]
	    [filter_second]
		x=$x1
		y=$y1
	    [/filter_second]
	    amount=$second_unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=yes	    
       	[/harm_unit]
    [/then]
    [/if]
[/event]
#define WEAPON_SPECIAL_PREPARATION
    [disable]
        id=preparation
        name= _ "preparation"
        description= _ "This attack can be used only in offense"
	active_on=defense
    [/disable]
#enddef
#define WEAPON_SPECIAL_IMPROVISED_MEANS
    [dummy]
        id=improvised means
        name= _ "improvised means"
        description= _ "This attack can be used only when unit stands near mountain, castle or cave wall, or on stone bridge"
        [filter_self]
	    [filter_weapon]
		[not]
		    special_active=improvised means1
		[/not]
	    [/filter_weapon]
        [/filter_self]
    [/dummy]
    [disable]
        id=improvised means1
        [filter_self]
            [filter_location]
		[filter_adjacent_location]
		     [not]
                     	 terrain=C*, K*, M*, X*
		     [/not]
		     [or]
		     	terrain=Ce*, Ke*
		     [/or]
		     count=6
		[/filter_adjacent_location]
		[not]
		     terrain=C*, K*, M*, X*, *^Bc*, *^Bs*
		[/not]
            [/filter_location]
	    [filter_weapon]
		[not]
		    special_active=improvised means2
		[/not]
	    [/filter_weapon]
        [/filter_self]
    [/disable]
    [dummy]
        id=improvised means2
        [filter_self]
	    [filter_adjacent]
		ability=sovereign
		is_enemy=no
	    [/filter_adjacent]
        [/filter_self]
    [/dummy]
#enddef
#define WEAPON_SPECIAL_VANDALISM
    [disable]
        id=vandalism
        name= _ "vandalism"
        description= _ "This attack can be used only when unit stands on stone bridges or in castle"
        [filter_self]
            [filter_location]
		[not]
                     terrain=C*, K*, *^Bc*, *^Bs*
		[/not]
		[or]
		     terrain=Ce*, Ke*
		[/or]
            [/filter_location]
	    [or]
		[filter_adjacent]
		     ability=sovereign
		     is_enemy=no
		[/filter_adjacent]
	    [/or]
        [/filter_self]
    [/disable]
#enddef
#define WEAPON_SPECIAL_COUNTERSTRIKE
    [disable]
        id=counterstike
        name= _ "counter stike"
        description= _ "This attack can be used only in defense"
	active_on=offense
    [/disable]
#enddef
#define WEAPON_SPECIAL_POWER_OF_DEEP
    [disable]
        id=deeppower
        name= _ "power of the deep"
        description= _ "This attack can be used only when the enemy stands in water"
	apply_to=self
        [filter_opponent]
            [filter_location]
		[not]
                    {IS_TERRAIN_OPEN_WATER}
		[/not]
            [/filter_location]
        [/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_RAIN_OF_ARROWS
    [attacks]
        id=rain of arrows
        name= _ "rain of arrows"
        description= _ "If enemy can't respond to this attack, number of shots increases by 50%"
	multiply=1.5
	active_on=offense
        [filter_opponent]
	    [not]
               	[has_attack]
	    	    range=ranged
		    [not]	
			special=preparation
			[or]
			    special=backstab_only
			[/or]
		    [/not]
	    	[/has_attack]
	    [/not]
        [/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_NET
    [attacks]
        id=net
        name= _ "net"
        description= _ "First strike of unit's attack doesn't inflict damage, but immobilizes an opponent, lowering it's defense to 10% and disabling it's attacks until the end of encounter. Doesn't work at defense, against flying and giant units and units with ''firststrike'' special"
	sub=1
 	apply_to=self
	active_on=offense
        [filter_base_value]
	    greater_than=1
        [/filter_base_value]
        [filter_opponent]
	     [not]
		 [or]
		    {IS_BIG}
	    	 [/or]
		 [or]
		    {IS_CAN_FLY}
	    	 [/or]
	     [/not]
        [/filter_opponent]
	[filter_self]
	     [filter_weapon]
		[not]
		    special_active=net_disable
		[/not]
	     [/filter_weapon]
	[/filter_self]
    [/attacks]
    [dummy]
	id=net_disable
        [filter_opponent]
            [filter_weapon]
	   	special=firststrike
		[or]
		    special=firstshoot
		    [or]
		         special=absolute defense
		    [/or]
		[/or]
	    [/filter_weapon]
        [/filter_opponent]
    [/dummy]
#enddef
[event]
    id=net_begin
    name=attack
    first_time_only=no
    [filter_attack]
	special_active=net
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [set_variable]
	name=tmp_luck
	rand=1..100
    [/set_variable]
    [if]
    [variable]
	name=second_unit.defense
	greater_than=$tmp_luck
    [/variable]
    [then]
    	{VARIABLE second_unit.status.disabled yes}  
    	[unstore_unit]
       	    variable=second_unit
            {COLOR_HARM}
       	    male_text= _ "IMMOBILIZIED!"
       	    female_text= _ "female^IMMOBILIZIED!"
            find_vacant=no
    	[/unstore_unit]
        [object]
            silent=yes
            duration=turn
	    [filter]
	    	x=$x2
	    	y=$y2
            [/filter]
 	    [effect]
	    	apply_to=attack
	    	[set_specials]
		    mode=append
		    {WEAPON_SPECIAL_DISABLED}		
	    	[/set_specials]
	    [/effect]
    	[/object]
	{VARIABLE net_hit_in_fact 1}
    [/then]
    [else]
	{VARIABLE net_hit_in_fact 0}
    [/else]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    id=net_end
    name=attack end
    first_time_only=no
    [filter_attack]
	special_active=net
    [/filter_attack]
    [filter_second]
	[not]
	    ability=unstoppable rage
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=net_hit_in_fact
	equals=1
    [/variable]
    [then]
	{CLEAR_VARIABLE second_unit.status.disabled}
    	[unstore_unit]
	    variable=second_unit
    	[/unstore_unit]
    	{CLEAR_VARIABLE net_hit_in_fact}
    [/then]
    [else]
    	{CLEAR_VARIABLE net_hit_in_fact}
    [/else]
    [/if]
[/event]
#define WEAPON_SPECIAL_CURSE_OF_UNDEAD
    [dummy]
        id=curse of undead
        name= _ "curse of undead"
        description= _ "When unit kills a living enemy with this attack, it rises as skeleton of same level. It does not works on non-humanoid units and units of 4th and 5th level"
	[filter_opponent]
	    race=SA_human,SA_elf,SA_orc
        [/filter_opponent]
    [/dummy] 
    [plague]
        id=curse of undead1
        type=Undead Skeleton Warrior
	[filter_opponent]
            level=1
	    race=SA_human,SA_elf,SA_orc
        [/filter_opponent]
    [/plague] 
    [plague]
        id=curse of undead2
        type=Undead Revenant
	[filter_opponent]
            level=2
	    race=SA_human,SA_elf,SA_orc
        [/filter_opponent]
    [/plague]     
    [plague]
        id=curse of undead3
        type=Undead Death Knight
	[filter_opponent]
            level=3
	    race=SA_human,SA_elf,SA_orc
        [/filter_opponent]
    [/plague] 
#enddef
#define WEAPON_SPECIAL_CARVE
    [dummy]
        id=carve
        name= _ "carve"
        description= _ "When unit kills an animal with this attack, it regenerates 8 HP"
	[filter_opponent]
            {IS_ANIMAL}
        [/filter_opponent]
    [/dummy]
#enddef
[event]
    name=die
    first_time_only=no
    id=carve_event
    [filter]
       {IS_ANIMAL}
    [/filter]
    [filter_second_attack]
       special=carve
    [/filter_second_attack]
    [unstore_unit]
       variable=second_unit
       {COLOR_HEAL}
       text= _ "+8"
       find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x2,$y2
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=8
       [/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_SCAVENGER
    [dummy]
        id=scavenger
        name= _ "scavenger"
        description= _ "When unit kills living unit with this attack, it regenerates 8 HP"
        [filter_opponent]
       	    [not]
	    	race=SA_undead,SA_mechanical,SA_spirit
       	    [/not]
        [/filter_opponent]
    [/dummy]
#enddef
[event]
    name=die
    first_time_only=no
    id=scavenger_event
    [filter]
       	[not]
	    race=SA_undead,SA_mechanical,SA_spirit
       	[/not]
    [/filter]
    [filter_second_attack]
       special=scavenger
    [/filter_second_attack]
    [unstore_unit]
       variable=second_unit
       {COLOR_HEAL}
       text= _ "+8"
       find_vacant=no
    [/unstore_unit]
    [object]
       silent=yes
       duration=forever
       [filter]
       	   x,y=$x2,$y2
       [/filter]
       [effect]
     	   apply_to=hitpoints
    	   increase=8
       [/effect]
    [/object]
[/event]
#define WEAPON_SPECIAL_RITUAL_MURDER
    [dummy]
        id=ritual murder
        name= _ "ritual murder"
        description= _ "When unit kills living unit with this attack, damage of all adjacent allies will be increased by 25% until beginning of next turn"
        [filter_opponent]
       	    [not]
	    	status=unplagueable
       	    [/not]
        [/filter_opponent]
    [/dummy]
#enddef
#define WEAPON_SPECIAL_RITUAL_MURDER2
    [dummy]
        id=ritual murder2
        name= _ "ritual murder"
        description= _ "When unit kills living unit with this attack, damage of all adjacent allies will be increased by 25% and its arcane resistance will be increased to 0%. Effect remains until beginning of next turn"
        [filter_opponent]
       	    [not]
	    	status=unplagueable
       	    [/not]
        [/filter_opponent]
    [/dummy]
#enddef
    [event]
    	id=ritual_murder
        name=die
        first_time_only=no

        [filter]
            [not]
            	status=unplagueable
            [/not]
    	[/filter]

	[filter_second_attack]
	    special=ritual murder
	[/filter_second_attack]

        [store_unit]
	    [filter]
	        side=$second_unit.side
	        [and]
	    	    [filter_adjacent]
		    	x=$x2
		    	y=$y2
	   	    [/filter_adjacent]	
	    	[/and]    
	    [/filter]
	    variable=benefits
	    kill=no
        [/store_unit]

	{FOREACH benefits b}

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$benefits[$b].x,$benefits[$b].y
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,0,0)"
            [/effect]

            [effect]
                apply_to=attack
	        increase_damage=25%
            [/effect]
        [/object] 

	{NEXT b}

        [unstore_unit]
	    variable=second_unit
	    find_vacant=no
	    text= _ "bloody sacrifice"
            red,green,blue=129,196,196
        [/unstore_unit]
        {CLEAR_VARIABLE benefits}
    [/event]
    [event]
    	id=ritual_murder2
        name=die
        first_time_only=no

        [filter]
            [not]
            	status=unplagueable
            [/not]
    	[/filter]

	[filter_second_attack]
	    special=ritual murder2
	[/filter_second_attack]

        [store_unit]
	    [filter]
	        side=$second_unit.side
	        [and]
	    	    [filter_adjacent]
		    	x=$x2
		    	y=$y2
	   	    [/filter_adjacent]	
	    	[/and]    
	    [/filter]
	    variable=benefits
	    kill=no
        [/store_unit]

	{FOREACH benefits b}

	[if]
	[variable]
	    name=benefits[$b].resistance.arcane
	    greater_than=100
	[/variable]
	[then]	
            [object]
            	silent=yes
            	duration=turn

            	[filter]
                    x,y=$benefits[$b].x,$benefits[$b].y
            	[/filter]

            	[effect]
                    apply_to=image_mod
                    add="CS(50,0,0)"
            	[/effect]

            	[effect]
                    apply_to=attack
	            increase_damage=25%
            	[/effect]

            	[effect]
                    apply_to=resistance
	            [resistance]
		    	arcane=100
	    	    [/resistance]
	    	    replace=yes
            	[/effect]
            [/object] 
	[/then]
	[else]
            [object]
            	silent=yes
            	duration=turn

            	[filter]
                    x,y=$benefits[$b].x,$benefits[$b].y
            	[/filter]

            	[effect]
                    apply_to=image_mod
                    add="CS(50,0,0)"
            	[/effect]

            	[effect]
                    apply_to=attack
	            increase_damage=25%
            	[/effect]
            [/object] 
	[/else]
	[/if]
	{NEXT b}
        [unstore_unit]
	    variable=second_unit
	    find_vacant=no
	    text= _ "bloody sacrifice"
            red,green,blue=129,196,196
        [/unstore_unit]
        {CLEAR_VARIABLE benefits}
    [/event]
#define WEAPON_SPECIAL_SOUL_EATER
    [dummy]
        id=soul eater
        name= _ "soul eater"
        description= _ "Every time when unit kills living unit with this attack, it absorbs soul of the opponent, increasing damage of wail of thousand souls by 1"
        [filter_opponent]
       	    [not]
	    	race=SA_undead,SA_mechanical,SA_spirit
       	    [/not]
        [/filter_opponent]
    [/dummy]
#enddef
    [event]
    	id=soul eater
        name=die
        first_time_only=no

        [filter]
            [not]
            	race=SA_undead,SA_mechanical,SA_spirit
            [/not]
    	[/filter]

	[filter_second_attack]
	    special=soul eater
	[/filter_second_attack]
	
        [unstore_unit]
	    variable=second_unit
	    find_vacant=no
	    text= _ "soul eater"
            red,green,blue=196,64,64
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=attack
		name=wail of thousand souls
	        increase_damage=1
            [/effect]

        [/object]
    [/event]
#define WEAPON_SPECIAL_GASH
    [dummy]
        id=gash
        name= _ "gash"
        description= _ "When this attack hits the living opponent, opponent takes bleeding. It will inflict 4 damage every turn, until opponent dies or until wound will be healed by magic. Regeneration and village healers can only slow the bleeding"
        [filter_opponent]
       	    [not]
	    	status=undrainable
       	    [/not]
        [/filter_opponent]
    [/dummy]
#enddef

    [event]
	id=gash_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=gash
        [/filter_attack]

    	[filter_second]
            [not]
            	status=undrainable
		[or]
		    status=bleeding
		[/or]
            [/not]
    	[/filter_second]

	{VARIABLE second_unit.status.bleeding yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "bleeding"
            red,green,blue=128,0,0
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
               	x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(0,-25,-25)"
            [/effect]
        [/object]

    [/event]

    [event]
	id=gash_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=gash
        [/filter_second_attack]

    	[filter]
            [not]
            	status=undrainable
		[or]
		    status=bleeding
		[/or]
            [/not]
    	[/filter]

	{VARIABLE unit.status.bleeding yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            text= _ "bleeding"
            red,green,blue=128,0,0
        [/unstore_unit]	

        [object]
            silent=yes
            duration=forever

            [filter]
               	x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(0,-25,-25)"
            [/effect]
        [/object]

    [/event]

#define WEAPON_SPECIAL_DISTRACTION
    [dummy]
        id=distraction
        name= _ "distraction"
        description= _ "When this attack hits the opponent, it can no longer enforce a zone of control. The effect wears off on the opponent's next turn"
    [/dummy]
#enddef
#define WEAPON_SPECIAL_ADVANCED_DISTRACTION
    [dummy]
        id=advanced distraction
        name= _ "stun"
        description= _ "When this attack hits the opponent, it can no longer enforce a zone of control and inflicts one less strike with any attack. The effect wears off on the opponent's next turn. If damage, inflicted by attack, is less than 10, this ability works as distraction"
    [/dummy]
#enddef
    [event]
	id=distract_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=distraction
        [/filter_attack]

        [filter_second]
            [not]
                level=0
                [or]
                     status=distracted
                [/or]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.distracted yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "distracted"
	    female_text= _ "female^distracted"
            red,green,blue=196,196,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,50,0)"
            [/effect]

            [effect]
                apply_to=zoc
                value=no
            [/effect]
        [/object]
    [/event]

    [event]
	id=distract_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=distraction
        [/filter_second_attack]

        [filter]
            [not]
                level=0
                [or]
                    status=distracted                                    			
		[/or]
            [/not]
        [/filter]

        {VARIABLE unit.status.distracted yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "distracted"
	    female_text= _ "female^distracted"
            red,green,blue=196,196,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,50,0)"
            [/effect]

            [effect]
                apply_to=zoc
                value=no
            [/effect]
        [/object]
    [/event]
    [event]
	id=distract_in_attack2
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=advanced distraction
        [/filter_attack]

        [filter_second]
            [not]
                level=0
                [or]
                    status=distracted                                                           
                [/or]
            [/not]
        [/filter_second]

        {VARIABLE second_unit.status.distracted yes}
        [if]
        [variable]
	    name=damage_inflicted
	    greater_than=9
        [/variable]
        [then]

            [unstore_unit]
            	variable=second_unit
            	find_vacant=no
            	male_text= _ "stunned"
	    	female_text= _ "female^stunned"
            	red,green,blue=196,196,128
            [/unstore_unit]

            [object]
            	silent=yes
            	duration=turn

            	[filter]
                    x,y=$x2,$y2
            	[/filter]
	
            	[effect]
                    apply_to=image_mod
                    add="CS(50,50,0)"
            	[/effect]

            	[effect]
                    apply_to=zoc
                    value=no
            	[/effect]

                [effect]
                    apply_to=attack
	            increase_attacks=-1
            	[/effect]
            [/object]

	[/then]
	[else]

            [unstore_unit]
            	variable=second_unit
            	find_vacant=no
            	male_text= _ "distracted"
	    	female_text= _ "female^distracted"
            	red,green,blue=196,196,128
            [/unstore_unit]

            [object]
            	silent=yes
            	duration=turn

            	[filter]
                    x,y=$x2,$y2
            	[/filter]

            	[effect]
                    apply_to=image_mod
                    add="CS(50,50,0)"
            	[/effect]

            	[effect]
                    apply_to=zoc
                    value=no
            	[/effect]
             [/object]

	[/else]
	[/if]
    [/event]

    [event]
	id=distract_in_defense2
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=advanced distraction
        [/filter_second_attack]

        [filter]
            [not]
                level=0
                [or]
                    status=distracted                                                           
                [/or]
            [/not]
        [/filter]

        {VARIABLE unit.status.distracted yes}

        [if]
        [variable]
	    name=damage_inflicted
	    greater_than=9
        [/variable]
        [then]

            [unstore_unit]
            	variable=unit
            	find_vacant=no
            	male_text= _ "stunned"
	    	female_text= _ "female^stunned"
            	red,green,blue=196,196,128
            [/unstore_unit]

            [object]
            	silent=yes
            	duration=turn

            	[filter]
                    x,y=$x1,$y1
            	[/filter]

            	[effect]
                    apply_to=image_mod
                    add="CS(50,50,0)"
            	[/effect]

            	[effect]
                    apply_to=zoc
                    value=no
            	[/effect]

            	[effect]
                    apply_to=attack
	            increase_attacks=-1
            	[/effect]
            [/object]

	[/then]
	[else]

            [unstore_unit]
            	variable=unit
            	find_vacant=no
            	male_text= _ "distracted"
	    	female_text= _ "female^distracted"
            	red,green,blue=196,196,128
            [/unstore_unit]

            [object]
           	silent=yes
            	duration=turn

            	[filter]
                    x,y=$x1,$y1
            	[/filter]
	
            	[effect]
                    apply_to=image_mod
                    add="CS(50,50,0)"
            	[/effect]

            	[effect]
                    apply_to=zoc
                    value=no
            	[/effect]
             [/object]

	[/else]
	[/if]
    [/event]
#define WEAPON_SPECIAL_ALCOHOL
    [chance_to_hit]
        id=alcohol
	value=70
	cumulative=yes
        name= _ "alcoholic"
        description= _ "When this attack hits the opponent, it decreases it fire resistance by 20% and its defense by 10%. Effect lasts for 1 turn. Undeads and already drunk units only losing resistance. The attack has 70% accuracy against non-flying units"
	[filter_opponent]
	    [not]
		{IS_CAN_FLY}
	    [/not]
	[/filter_opponent]
    [/chance_to_hit]
#enddef
    [event]
	id=alcohol_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=alcohol
        [/filter_attack]

        [filter_second]
            [not]
                race=SA_undead
		[or]
		    ability=rum_bottle
		    [or]
			ability=grog_barrel
			[or]
			    trait=experienced drunkard
			[/or]
		    [/or]
		[/or]
            [/not]
	    [not]
		status=alcoholic
	    [/not]
        [/filter_second]

        {VARIABLE second_unit.status.alcoholic yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "doused"
	    female_text= _ "female^doused"
            red,green,blue=128,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(20,20,20)"
            [/effect]

            [effect]
                apply_to=resistance
	    	[resistance]
		    fire=20
	        [/resistance]
	        replace=no
            [/effect]

            [effect]
	    	apply_to=defense
	    	replace=no
            	[defense]
	    	    deep_water=10
            	    shallow_water=10
            	    reef=10
            	    swamp_water=10
            	    flat=10
            	    sand=10
            	    forest=10
            	    hills=10
            	    mountains=10
            	    village=10
            	    castle=10
            	    cave=10
            	    frozen=10
            	    fungus=10
            	    unwalkable=10
            	[/defense]
	    [/effect]
        [/object]

    [/event]

    [event]
	id=alcohol_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=alcohol
        [/filter_second_attack]

        [filter]
            [not]
                race=SA_undead
		[or]
		    ability=rum_bottle
		    [or]
			ability=grog_barrel
			[or]
			    trait=experienced drunkard
			[/or]
		    [/or]
		[/or]
            [/not]
	    [not]
		status=alcoholic
	    [/not]
        [/filter]

        {VARIABLE unit.status.alcoholic yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "doused"
	    female_text= _ "female^doused"
            red,green,blue=128,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(20,20,20)"
            [/effect]

            [effect]
                apply_to=resistance
	    	[resistance]
		    fire=20
	        [/resistance]
	        replace=no
            [/effect]

            [effect]
	    	apply_to=defense
	    	replace=no
            	[defense]
	    	    deep_water=10
            	    shallow_water=10
            	    reef=10
            	    swamp_water=10
            	    flat=10
            	    sand=10
            	    forest=10
            	    hills=10
            	    mountains=10
            	    village=10
            	    castle=10
            	    cave=10
            	    frozen=10
            	    fungus=10
            	    unwalkable=10
            	[/defense]
	    [/effect]
        [/object]
   
    [/event]
    [event]
	id=alcohol_in_attack2
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=alcohol
        [/filter_attack]

        [filter_second]
            race=SA_undead
	    [or]
		ability=rum_bottle
		[or]
		    ability=grog_barrel
		    [or]
			trait=experienced drunkard
		    [/or]
		[/or]
	    [/or]
	    [not]
		status=alcoholic
	    [/not]
        [/filter_second]

        {VARIABLE second_unit.status.alcoholic yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "doused"
	    female_text= _ "female^doused"
            red,green,blue=128,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(20,20,20)"
            [/effect]

            [effect]
                apply_to=resistance
	    	[resistance]
		    fire=20
	        [/resistance]
	        replace=no
            [/effect]
        [/object]

    [/event]

    [event]
	id=alcohol_in_defense2
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=alcohol
        [/filter_second_attack]

        [filter]
            race=SA_undead
	    [or]
		ability=rum_bottle
		[or]
		    ability=grog_barrel
		    [or]
			trait=experienced drunkard
		    [/or]
		[/or]
	    [/or]
	    [not]
		status=alcoholic
	    [/not]
        [/filter]

        {VARIABLE unit.status.alcoholic yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "doused"
	    female_text= _ "female^doused"
            red,green,blue=128,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(20,20,20)"
            [/effect]

            [effect]
                apply_to=resistance
	    	[resistance]
		    fire=20
	        [/resistance]
	        replace=no
            [/effect]
        [/object]
 
    [/event]
#define WEAPON_SPECIAL_IGNITION
    [dummy]
        id=ignition
        name= _ "ignition"
        description= _ "When this attack hits the opponent and inflicts 15 or more damage, opponent catch fire. It will take 8 damage in beginning of every its turn. Resistance to fire can lower this damage. To extinguish the fire unit should stand to water or enter a village"
    [/dummy]
#enddef
    [event]
	id=ignition_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special_active=ignition
	    [or]
                special_active=air_n_fire
	    [/or]
        [/filter_attack]

        [filter_second]
            [not]
                 status=ignited                                                           
            [/not]
            [filter_location]
		[not]
	            {IS_TERRAIN_HAS_WATER}
		[/not]	  
	    [/filter_location]
        [/filter_second]
        [if]
        [variable]
	    name=damage_inflicted
	    greater_than=14
        [/variable]
        [then]
        {VARIABLE second_unit.status.ignited yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "caught fire"
            female_text= _ "female^caught fire"
            red,green,blue=196,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,0,0)"
            [/effect]
        [/object]

        [/then]
        [/if]
    [/event]

    [event]
	id=ignition_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special_active=ignition
	    [or]
                special_active=air_n_fire
	    [/or]
        [/filter_second_attack]

        [filter]
            [not]
                 status=ignited                                                           
            [/not]
            [filter_location]
		[not]
	            {IS_TERRAIN_HAS_WATER}
		[/not]	  
	    [/filter_location]
        [/filter]
        [if]
        [variable]
	    name=damage_inflicted
	    greater_than=14
        [/variable]
        [then]
        {VARIABLE unit.status.ignited yes}


        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "caught fire"
            female_text= _ "female^caught fire"
            red,green,blue=196,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,0,0)"
            [/effect]
        [/object]

        [/then]
        [/if]
    [/event]

#define WEAPON_SPECIAL_STICKY_FIRE
    [dummy]
        id=sticky fire
        name= _ "sticky fire"
        description= _ "When this attack hits the opponent, it catch fire. It will take 8 damage in beginning of every its turn. Resistance to fire can lower this damage. To extinguish the fire unit should stand to water or enter a village"
    [/dummy]
#enddef
    [event]
	id=sticky_fire_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=sticky fire
        [/filter_attack]

        [filter_second]
            [not]
                 status=ignited                                                           
            [/not]
	    [and]
		[not]
              	    [filter_location]
	         	{IS_TERRAIN_HAS_WATER}	  
	             [/filter_location]
		[/not]
	    [/and]
        [/filter_second]

        {VARIABLE second_unit.status.ignited yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            male_text= _ "caught fire"
            female_text= _ "female^caught fire"
            red,green,blue=196,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x2,$y2
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,0,0)"
            [/effect]
        [/object]

    [/event]

    [event]
	id=ignition_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=ignition
        [/filter_second_attack]

        [filter]
            [not]
                 status=ignited                                                           
            [/not]
	    [and]
		[not]
              	    [filter_location]
	         	{IS_TERRAIN_HAS_WATER}	  
	            [/filter_location]
		[/not]
	    [/and]
        [/filter]

        {VARIABLE unit.status.ignited yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            male_text= _ "caught fire"
            female_text= _ "female^caught fire"
            red,green,blue=196,128,128
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(50,0,0)"
            [/effect]
        [/object]

    [/event]

    [event]
	id=patriotic_militia
	name=turn 1
	
	[store_locations]
	    {IS_HUMAN_POPULATED}
	    [or]
		terrain=*^Vm
	    [/or]
	    variable=human_villages
	[/store_locations]
	[store_locations]
	    terrain=*^V*
	    [not]
	        {IS_HUMAN_POPULATED}
   	    [/not]
	    variable=inhuman_villages
	[/store_locations]
	[store_side]
	    [has_unit]
		canrecruit=yes
	    	ability=patriotism3
	    [/has_unit]
	    variable=human_sides
        [/store_side]
	{FOREACH human_sides hs}
	{FOREACH inhuman_villages iv}
	    [unit]
	        type=Royal Militiaman
	        side=$human_sides[$hs].side
	        x=recall
	        y=recall
	    	random_traits=yes
	    	generate_name=yes
	    	[modifications]
		     {TRAIT_LOYAL}
	    	[/modifications]
	    [/unit]
	{NEXT iv}
	{NEXT hs}
	{CLEAR_VARIABLE human_sides}
    [/event]
    [event]
	id=human_militia
        name=capture
        first_time_only=no
	[filter]
	    ability=homage
	    [or]
	    	canrecruit=yes
	   	 ability=patriotism3
	    [/or]
	    [and]
	        [filter_location]
                    find_in=human_villages
		    [not]
			terrain=*^Vm
		    [/not]
              	[/filter_location]
	    [/and]
	[/filter]
	[unstore_unit]
            variable=unit
	    find_vacant=no
	    text= _ "Some of the patriotic peasants
join Royal Army as militiamen
(see in your recall list)"
	    red,green,blue=128,128,128
	[/unstore_unit]
	[unit]
	    type=Royal Militiaman
	    side=$unit.side
	    x=recall
	    y=recall
	    random_traits=yes
	    generate_name=yes
	    [modifications]
		{TRAIT_LOYAL}
	    [/modifications]
	[/unit]
	[unit]
	    type=Royal Militiaman
	    side=$unit.side
	    x=recall
	    y=recall
	    random_traits=yes
	    generate_name=yes
	    [modifications]
		{TRAIT_LOYAL}
	    [/modifications]
	[/unit]
	[store_locations]
	    find_in=human_villages
	    [not]
		x=$x1
		y=$y1
	    [/not]
	    variable=human_villages2
	[/store_locations]
	[set_variables]
	    name=human_villages
	    to_variable=human_villages2
	[/set_variables]
	{CLEAR_VARIABLE human_villages2}
    [/event]
    [event]
	id=merfolk_militia
        name=capture
        first_time_only=no
	[filter]
	    canrecruit=yes
	    ability=patriotism3
	    [and]
	        [filter_location]
                    find_in=human_villages
		    terrain=*^Vm
              	[/filter_location]
	    [/and]
	[/filter]
	[unstore_unit]
            variable=unit
	    find_vacant=no
	    text= _ "Some of the local merfolks
join Royal Army as militiamen
(see in your recall list)"
	    red,green,blue=128,128,128
	[/unstore_unit]
	[unit]
	    type=Royal Merfolk Militiaman
	    side=$unit.side
	    x=recall
	    y=recall
	    random_traits=yes
	    generate_name=yes
	    [modifications]
		{TRAIT_LOYAL}
	    [/modifications]
	[/unit]
	[unit]
	    type=Royal Merfolk Militiaman
	    side=$unit.side
	    x=recall
	    y=recall
	    random_traits=yes
	    generate_name=yes
	    [modifications]
		{TRAIT_LOYAL}
	    [/modifications]
	[/unit]
	[store_locations]
	    find_in=human_villages
	    [not]
		x=$x1
		y=$y1
	    [/not]
	    variable=human_villages2
	[/store_locations]
	[set_variables]
	    name=human_villages
	    to_variable=human_villages2
	[/set_variables]
	{CLEAR_VARIABLE human_villages2}
    [/event]
    [event]
    	id=first_ghost
    	name=turn 1
    	[store_unit]
	    [filter]
	    	trait=undead leader
	    	canrecruit=yes	
	    [/filter]
	    kill=no
	    variable=necromancers   
    	[/store_unit]
    	{FOREACH necromancers n}
	    [if]
		[not]
		    [have_unit]
	    		trait=eternal
	    		side=$necromancers[$n].side
	    		search_recall_list=yes	     
		    [/have_unit]
		[/not]
		[then]
	    	    [if]
			[variable]
	    	    	    name=necromancers[$n].type
	    	    	    equals="Undead High Sorcerer Warrior"
			[/variable]
	    		[or]
	    		    [variable]
	    	    	    	name=necromancers[$n].type
	    	    		equals="Undead Lich Warrior"
	    		    [/variable]
	    		[/or]
	    		[or]
	    		    [variable]
	    	    		name=necromancers[$n].type
	    	    		equals="Undead Dark Lord Warrior"
	    		    [/variable]
	    		[/or]
	    	        [then]
	    		    [unit]
		    		type=Undead Ilkkhayaleth Warrior
		    		side=$necromancers[$n].side
		    		x=$necromancers[$n].x
		    		y=$necromancers[$n].y
		    		moves=0
	    		    [/unit]
	    		[/then]
	    	    [/if]
	    	    [if]
			[variable]
	    	    	    name=necromancers[$n].type
	    	    	    equals="Undead High Sorcerer Hound"
			[/variable]
	    		[or]
	    		    [variable]
	    	    		name=necromancers[$n].type
	    	    		equals="Undead Lich Hound"
	    		    [/variable]
	    		[/or]
	    		[or]
	    		    [variable]
	    	    		name=necromancers[$n].type
	    	    		equals="Undead Dark Lord Hound"
	    		    [/variable]
	    		[/or]
	    		[then]
	    		    [unit]
		    		type=Undead Ilkkhayaleth Hound
		    		side=$necromancers[$n].side
		    		x=$necromancers[$n].x
		    		y=$necromancers[$n].y
		    		moves=0
	    		    [/unit]
	    		[/then]
	    	    [/if]
	    	    [if]
			[variable]
	    	    	    name=necromancers[$n].type
	    	    	    equals="Undead High Sorcerer Fetan"
			[/variable]
	    		[or]
	    		    [variable]
	    	    		name=necromancers[$n].type
	    	    		equals="Undead Lich Fetan"
	    		    [/variable]
	    		[/or]
	    		[or]
	    		    [variable]
	    	    		name=necromancers[$n].type
	    	    		equals="Undead Dark Lord Fetan"
	    		    [/variable]
	    		[/or]
	    	    [then]
	    		[unit]
		    	    type=Undead Ilkkhayaleth Thief
		   	    side=$necromancers[$n].side
		    	    x=$necromancers[$n].x
		    	    y=$necromancers[$n].y
		    	    moves=0
	    		[/unit]
	    	    [/then]
	    	[/if]
	    	[store_locations]
		    terrain=C*, K*
		    [filter_adjacent_location]
		    	x=$necromancers[$n].x
		    	y=$necromancers[$n].y
		    [/filter_adjacent_location]
		    variable=necromancer_castle
	    	[/store_locations]
	    	{FOREACH necromancer_castle nc}
		    [teleport]
		    	[filter]
			    side=$necromancers[$n].side
			    trait=eternal
		        [/filter]
		    	x=$necromancer_castle[$nc].x
		    	y=$necromancer_castle[$nc].y
		    [/teleport]
	    	{NEXT nc}
	    	{CLEAR_VARIABLE necromancer_castle}
	    [/then]
	    [/if]

    	{NEXT n}
    	{CLEAR_VARIABLE necromancers}
    [/event]
    [event]
    	id=henchmen
    	name=turn 1
    	[store_unit]
	    [filter]
	    	trait=vile
	    	canrecruit=yes	
	    [/filter]
	    kill=no
	    variable=gungs 
    	[/store_unit]
    	{FOREACH gungs g}
	    [if]
		[variable]
	    	    name=gungs[$g].type
	    	    equals="Robber Antiquarian"
		[/variable]
	    	[then]
		    [unit]
	    		type=Robber Arsonist
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=Robber Bandit
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=Robber Prostitute
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=Robber Mercenary Henchman
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
	    	[/then]
		[else]
		    {VARIABLE temp_type "Robber Prostitute"}
		    [if]
			[variable]
	    	    	    name=gungs[$g].type
	    	    	    equals="Robber Mercenary Captain"
			[/variable]
			[or]
			    [variable]
	    	    	    	name=gungs[$g].type
	    	    	    	equals="Robber Dogs of War Captain"
			    [/variable]
			[/or]
	    		[then]
		    	      {VARIABLE temp_type "Robber Mercenary Henchman"}
			[/then]
		    [/if]
		    [if]
			[variable]
	    	    	    name=gungs[$g].type
	    	    	    equals="Robber Caporegime"
			[/variable]
			[or]
			    [variable]
	    	    	    	name=gungs[$g].type
	    	    	    	equals="Robber Boss"
			    [/variable]
			[/or]
	    		[then]
		    	      {VARIABLE temp_type "Robber Bandit"}
			[/then]
		    [/if]
		    [if]
			[variable]
	    	    	    name=gungs[$g].type
	    	    	    equals="Robber Highwayman"
			[/variable]
			[or]
			    [variable]
	    	    	    	name=gungs[$g].type
	    	    	    	equals="Robber Legendary Robber"
			    [/variable]
			[/or]
	    		[then]
		    	      {VARIABLE temp_type "Robber Arsonist"}
			[/then]
		    [/if]
		    [unit]
	    		type=$temp_type
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=$temp_type
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=$temp_type
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
		    [unit]
	    		type=$temp_type
	    		side=$gungs[$g].side
	    		x=recall
	    		y=recall
	    		random_traits=yes
	    		generate_name=yes
		    [/unit]
	    	    {CLEAR_VARIABLE temp_type}
		[/else]
	    [/if]
	{NEXT g}
	{CLEAR_VARIABLE gungs}
    [/event]
    [event]
	id=seven_spirits
	name=turn 1
	[unit]
	    id=vodhabodung
	    type=Spirit Vodhabodung
	    name= _ "Vod-ha-bodung"
	    side=1
	    random_traits=yes
	    to_variable=spirits[1]
	[/unit]
	[unit]
	    id=baratrohsharku
	    type=Spirit Baratrohsharku
	    name= _ "Barat-roh-sharku"
	    side=1
	    random_traits=yes
	    to_variable=spirits[2]
	[/unit]
	[unit]
	    id=debosh
	    type=Spirit Debosh
	    name= _ "Debosh"
	    side=1
	    random_traits=yes
	    to_variable=spirits[3]
	[/unit]
	[unit]
	    id=maradartolkatjang
	    type=Spirit Maradartolkatjang
	    name= _ "Maradar-tolkatjang"
	    side=1
	    random_traits=yes
	    to_variable=spirits[4]
	[/unit]
	[unit]
	    id=wooorhdagakoorc
	    type=Spirit Wooorhdagakoorc
	    name= _ "Wo-oorh-dagak-oorc"
	    side=1
	    random_traits=yes
	    to_variable=spirits[5]
	[/unit]
	[unit]
	    id=kuratyykjop
	    type=Spirit Kura Tyyk Jop
	    name= _ "Kura Tyyk Jop"
	    side=1
	    random_traits=yes
	    to_variable=spirits[6]
	[/unit]
	[unit]
	    id=wargkuraran
	    type=Spirit Warg Kuraran
	    name= _ "Warg Kuraran"
	    side=1
	    random_traits=yes
	    to_variable=spirits[7]
	[/unit]
    [/event]    
    [event]
	id=dream_world
	name=side turn end
        first_time_only=no
        [store_unit]
            [filter]
                ability=dream_world
		side=$side_number
            [/filter]
            variable=dreamwalkers
	    mode=append
	    kill=yes
        [/store_unit]
    [/event]
    [event]
	id=remove_statuses
        name=turn refresh
        first_time_only=no
#dreamwalkers appearing
	{FOREACH dreamwalkers dw}
	    [if]
 	    [variable]
		name=dreamwalkers[$dw].side
		equals=$side_number
	    [/variable]
	    [then]
		{VARIABLE dreamwalkers[$dw].moves 1}
		{VARIABLE dreamwalkers[$dw].attacks_left 1}
            	[unstore_unit]
                    variable=dreamwalkers[$dw]
		    find_vacant=yes
            	[/unstore_unit]
	    	{CLEAR_VARIABLE dreamwalkers[$dw]}
		[set_variable]
		    name=dw
		    sub=1
		[/set_variable]
	    [/then]
	    [/if]
	{NEXT dw}	
#replacing
        [store_unit]
            [filter]
                side=$side_number
            [/filter]
            variable=siders
	    kill=yes
        [/store_unit]
	{FOREACH siders un}

            [unstore_unit]
                variable=siders[$un]
            [/unstore_unit]

	{NEXT un}
	{CLEAR_VARIABLE siders}
#nehushtan
        [if]
	[have_unit]
	    side=$side_number
	    ability=nehushtan
	[/have_unit]
	[then]
	    [store_unit]
            	[filter]
                    side=$side_number
            	[/filter]
                variable=jews
	    	kill=no
            [/store_unit]
	    {FOREACH jews j}
	    	{CLEAR_VARIABLE jews[$j].status.poisoned}
            	[unstore_unit]
                    variable=jews[$j]
		    text=_"cure"
		    {COLOR_HEAL}
		    find_vacant=no
                [/unstore_unit]			
	    {NEXT j}
	[/then]
	[/if]
#launching
        [store_unit]
            [filter]
                side=$side_number
		ability=launch
            [/filter]
            variable=launchers
	    kill=no
        [/store_unit]
	{FOREACH launchers ln}    
	    [if]
	    [have_unit]
		[filter_adjacent]
		    x=$launchers[$ln].x
		    y=$launchers[$ln].y
		[/filter_adjacent]	
		count=6
	    [/have_unit]
	    [then]
		
	    [/then]
	    [else]
	    	[unit]
		    type=Tribes Punk
		    side=$launchers[$ln].side
		    x=$launchers[$ln].x
		    y=$launchers[$ln].y
		    generate_name=yes
		    random_traits=yes
		    passable=yes
	    	[/unit]
	    [/else]
	    [/if]
	{NEXT ln}
#rum and grog removes statuses
        [store_unit]
            [filter]
                side=$side_number
		ability=rum_bottle
		[or]
                    side=$side_number
		    ability=grog_barrel
		[/or]
		[not]
		    race=SA_undead,SA_mechanical,SA_spirit,SA_bat,SA_monster
		[/not]
		[and]
		    [not]
		    	[filter_adjacent]
			    ability=sailors_authority
		    	[/filter_adjacent]
		    [/not]
		    [or]
			ability=sailors_authority
		    [/or]
		[/and]
            [/filter]
            variable=rumdrinkers
	    kill=yes
        [/store_unit]
	{FOREACH rumdrinkers rd}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.slowed}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.poisoned}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.eternal_poison}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.ignited}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.bleeding}
	    {CLEAR_VARIABLE rumdrinkers[$rd].status.septicemed}
            [unstore_unit]
                variable=rumdrinkers[$rd]
		text= _ "*gulp*"
		{COLOR_HEAL}
		find_vacant=no
            [/unstore_unit]		
	{NEXT rd}
	{CLEAR_VARIABLE rumdrinkers}
        [store_unit]
            [filter]
                [filter_adjacent]
                    side=$side_number
		    ability=grog_barrel
		    is_enemy=no
                [/filter_adjacent]
		[not]
		    race=SA_undead,SA_mechanical,SA_bat,SA_spirit,SA_monster
		[/not]
            [/filter]
            variable=grogdrinkers
	    kill=no
        [/store_unit]

	{FOREACH grogdrinkers gd}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.slowed}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.poisoned}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.eternal_poison}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.ignited}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.bleeding}
	    {CLEAR_VARIABLE grogdrinkers[$gd].status.septicemed}
            [unstore_unit]
                variable=grogdrinkers[$gd]
		text= _ "*gulp*"
		{COLOR_HEAL}
		find_vacant=no
            [/unstore_unit]		
	{NEXT gd}
	{CLEAR_VARIABLE grogdrinkers}
#waterwalking status removed
        [store_unit]
            [filter]
                side=$side_number
                status=waterwalking
            [/filter]
            variable=waterwalker
	    kill=no
        [/store_unit]
	{FOREACH waterwalker w}
            {CLEAR_VARIABLE waterwalker[$w].status.waterwalking}

            [unstore_unit]
                variable=waterwalker[$w]
		find_vacant=no
            [/unstore_unit]

	    [object]
            	silent=yes
            	duration=turn

	    	[filter]
	    	    x=$waterwalker[$w].x
	    	    y=$waterwalker[$w].y
	    	[/filter]

	    [/object]
        {NEXT w}

        {CLEAR_VARIABLE waterwalker}
#i need help gets helpers

        [store_unit]
            [filter]
                side=$side_number
                ability=i_need_help
            [/filter]
            variable=needers
	    kill=no
        [/store_unit]
	{FOREACH needers n}
	    {VARIABLE needers[$n].variables.helpers 2}
	    [unstore_unit]
		variable=needers[$n]
		find_vacant=no
	    [/unstore_unit]
	{NEXT n}
	{CLEAR_VARIABLE needers}

#distraction status removed
        [store_unit]
            [filter]
                side=$side_number
		status=distracted
            [/filter]
            variable=distracted
	    kill=no
        [/store_unit]
        {FOREACH distracted d}
            {CLEAR_VARIABLE distracted[$d].status.distracted}

            [unstore_unit]
                variable=distracted[$d]
		find_vacant=no
            [/unstore_unit]
        {NEXT d}

        {CLEAR_VARIABLE distracted}
#ambusher status removed
        [store_unit]
            [filter]
                side=$side_number
		status=ambusher
            [/filter]
            variable=ambushers
	    kill=no
        [/store_unit]
        {FOREACH ambushers a}
            {CLEAR_VARIABLE ambushers[$a].status.ambusher}

            [unstore_unit]
                variable=ambushers[$a]
		find_vacant=no
            [/unstore_unit]
        {NEXT a}

        {CLEAR_VARIABLE ambushers}
#alcoholic status removed
        [store_unit]
            [filter]
                side=$side_number
		status=alcoholic
            [/filter]
            variable=alcoholic
	    kill=no
        [/store_unit]
        {FOREACH alcoholic a}
            {CLEAR_VARIABLE alcoholic[$a].status.alcoholic}

            [unstore_unit]
                variable=alcoholic[$a]
		find_vacant=no
            [/unstore_unit]
        {NEXT a}

        {CLEAR_VARIABLE alcoholic}
#sleep status removed
        [store_unit]
            [filter]
                side=$side_number
		[and]
		    status=sleeped
		    [or]
			status=wakes
		    [/or]
		[/and]   
            [/filter]
            variable=sleeped
	    kill=no
        [/store_unit]
        {FOREACH sleeped sd}
            {CLEAR_VARIABLE sleeped[$sd].status.sleeped}
	    {CLEAR_VARIABLE sleeped[$sd].status.wakes}

            [unstore_unit]
                variable=sleeped[$sd]
		find_vacant=no
            [/unstore_unit]
        {NEXT sd}

        {CLEAR_VARIABLE sleeped}
#dark mark status removed
        [store_unit]
            [filter]
                side=$side_number
                status=darkmarked
            [/filter]
            variable=darkmarks
	    kill=no
        [/store_unit]
        {FOREACH darkmarks dm}
            {CLEAR_VARIABLE darkmarks[$dm].status.darkmarked}
	    {CLEAR_VARIABLE darkmarks[$dm].variables.darkmarkof}
            [unstore_unit]
                variable=darkmarks[$dm]
		find_vacant=no
            [/unstore_unit]
        {NEXT dm}

        {CLEAR_VARIABLE darkmarks}
#bleeding, septicemia and eternal poison healed by magic
        [store_unit]
            [filter]
                side=$side_number
		[filter_adjacent]
		    ability=curing
		    [or]
			ability=cure
		    	[or]
			    ability=bowl of snake poison
		    	[/or]
		    [/or]
		    is_enemy=no
		[/filter_adjacent]
		[or]
		    ability=si_yah_kan
		    [or]
			ability=regenerates
		    [/or]
		[/or]
		[and]
                    status=bleeding
		    [or]
			status=eternal_poison
			[or]
			    status=septicemed
			[/or]
		    [/or]
		[/and]
            [/filter]
            variable=badpatients
	    kill=no
        [/store_unit]
        {FOREACH badpatients bp}
	    [if]
	    [variable]
		name=badpatients[$bp].status.eternal_poison
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE badpatients[$bp].status.eternal_poison}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=badpatients[$bp].status.septicemed
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE badpatients[$bp].status.septicemed}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=badpatients[$bp].status.bleeding
		equals=yes
	    [/variable]
	    [then]
	        {CLEAR_VARIABLE badpatients[$bp].status.bleeding}
            	[unstore_unit]
                    variable=badpatients[$bp]
		    find_vacant=no
            	[/unstore_unit]
            	[object]
            	    silent=yes
            	    duration=forever

            	    [filter]
                    	x,y=$x1,$y1
            	    [/filter]

            	    [effect]
                    	apply_to=image_mod
                    	add="CS(0,25,25)"
            	    [/effect]
            	[/object]
	    [/then]
	    [else]
            	[unstore_unit]
                    variable=badpatients[$bp]
		    find_vacant=no
            	[/unstore_unit]
	    [/else]
            [/if]

        {NEXT bp}

        {CLEAR_VARIABLE badpatients}
#holy mark applies
        [store_unit]
            [filter]
                side=$side_number
	 	[not]
		    race=SA_undead,SA_mechanical,SA_spirit
		[/not]
		[filter_adjacent]
		    ability=holy mark
		    is_enemy=no
		[/filter_adjacent]
            [/filter]
            variable=lightmarked
	    kill=no
        [/store_unit]
        {FOREACH lightmarked lm}
	    [if]
	    [variable]
		name=lightmarked[$lm].status.eternal_poison
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE lightmarked[$lm].status.eternal_poison}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=lightmarked[$lm].status.poisoned
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE lightmarked[$lm].status.poisoned}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=lightmarked[$lm].status.septicemed
		equals=yes
	    [/variable]
	    [then]
		{CLEAR_VARIABLE lightmarked[$lm].status.septicemed}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=lightmarked[$lm].status.darkmarked
		equals=yes
	    [/variable]
	    [then]
            	{CLEAR_VARIABLE lightmarked[$lm].status.darkmarked}
	    	{CLEAR_VARIABLE lightmarked[$lm].variables.darkmarkof}
	    [/then]
            [/if]
	    [if]
	    [variable]
		name=lightmarked[$lm].status.bleeding
		equals=yes
	    [/variable]
	    [then]
	        {CLEAR_VARIABLE lightmarked[$lm].status.bleeding}
            	[unstore_unit]
                    variable=lightmarked[$lm]
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255    
            	[/unstore_unit]
            	[object]
            	    silent=yes
            	    duration=forever

            	    [filter]
                    	x,y=$x1,$y1
            	    [/filter]

            	    [effect]
                    	apply_to=image_mod
                    	add="CS(0,25,25)"
            	    [/effect]
            	[/object]
	    [/then]
	    [else]
            	[unstore_unit]
                    variable=lightmarked[$lm]
		    find_vacant=no
        	    male_text= _ "purified"
		    female_text= _ "female^purified"
        	    red,green,blue=255,255,255   
            	[/unstore_unit]
	    [/else]
            [/if]

        {NEXT lm}

        {CLEAR_VARIABLE lightmarked}
#ogres forgot
        [store_unit]
            [filter]
                side=$side_number
		[and]
		    status=ogresremember
		    [or]
			status=ogresorder
		    [/or]
		[/and]
	    [/filter]
            variable=sinsremembered
	    kill=no
        [/store_unit]
        {FOREACH sinsremembered sr}
            {CLEAR_VARIABLE sinsremembered[$sr].variables.ogresremember}
            {CLEAR_VARIABLE sinsremembered[$sr].status.ogresremember}
            {CLEAR_VARIABLE sinsremembered[$sr].status.ogresorder}
	    [unstore_unit]
                variable=sinsremembered[$sr]
		find_vacant=no
	    [/unstore_unit]
        {NEXT sr}
	{CLEAR_VARIABLE sinsremembered}
#units with black market gains gold
        [store_unit]
            [filter]
                side=$side_number
                ability=black_market
		[filter_location]
                    terrain=*^V*
		[/filter_location]
            [/filter]
            variable=blackmarket
	    kill=no
        [/store_unit]
        {FOREACH blackmarket bm}
            [gold]
		amount=1
		side=$side_number
	    [/gold]
	    [unstore_unit]
                variable=blackmarket[$bm]
		find_vacant=no
		text=_"+1"
		red,green,blue=196,196,128
	    [/unstore_unit]
        {NEXT bm}
	{CLEAR_VARIABLE blackmarket}
#units with eternal poison restores poison status
        [store_unit]
            [filter]
                side=$side_number
		status=eternal_poison
            [/filter]
            variable=eternalpoisoned
	    kill=no
        [/store_unit]
        {FOREACH eternalpoisoned ep}
            {VARIABLE eternalpoisoned[$ep].status.poisoned yes}
            [unstore_unit]
                variable=eternalpoisoned[$ep]
		find_vacant=no
            [/unstore_unit]
        {NEXT ep}

        {CLEAR_VARIABLE eternalpoisoned}
#extinguishing flame
        [store_unit]
            [filter]
		side=$side_number
		status=ignited
		[and]
		    ability=extinguisher
		    [or]
                    	[filter_adjacent]
		    	    ability=extinguisher
		    	    is_enemy=no
                    	[/filter_adjacent]
		     [/or]
		[/and]
            [/filter]
            variable=extingishers
	    kill=no
        [/store_unit]
	{FOREACH extingishers fe}
	    {CLEAR_VARIABLE extingishers[$fe].status.ignited}
            [unstore_unit]
                variable=extingishers[$fe]
            	male_text= _ "female^extinguished"
	    	female_text= _ "extinguished"
		{COLOR_HEAL}
		find_vacant=no
            [/unstore_unit]		
	{NEXT fe}
	{CLEAR_VARIABLE grogdrinkers}
#units with ignition status gain damage
        [store_unit]
            [filter]
                side=$side_number
		status=ignited
            [/filter]
            variable=ignited
	    kill=no
        [/store_unit]

        {FOREACH ignited i}
            [harm_unit]
		[filter]
		    x=$ignited[$i].x
		    y=$ignited[$i].y
		[/filter]
		amount=8
		damage_type=fire
		kill=yes
		fire_event=yes		
	    [/harm_unit]
        {NEXT i}

        {CLEAR_VARIABLE ignited}

#units with bleeding status gain damage
        [store_unit]
            [filter]
                side=$side_number
		status=bleeding
            [/filter]
            variable=gashed
	    kill=no
        [/store_unit]

        {FOREACH gashed g}
	    [if]
	    [variable]
		name=gashed[$g].status.septicemed
		equals=yes
	    [/variable]
	    [then]
		{VARIABLE gda 5}
	    [/then]
	    [else]
		{VARIABLE gda 4}
	    [/else]
	    [/if]
            [harm_unit]
		[filter]
		    x=$gashed[$g].x
		    y=$gashed[$g].y
		[/filter]
		amount=$gda
		kill=yes
		fire_event=yes
	    [/harm_unit]
	    {CLEAR_VARIABLE gda}
        {NEXT g}

        {CLEAR_VARIABLE gashed}

#units with corruption ability inflicts damage
        [store_unit]
            [filter]
		[filter_adjacent]
                   side=$side_number
                   ability=corruption
		   is_enemy=yes
		[/filter_adjacent]
            [/filter]
            variable=corruptions
	    kill=no
        [/store_unit]

        {FOREACH corruptions c}
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$corruptions[$c].x
		    y=$corruptions[$c].y
		[/filter]
			
		[effect]
            	    apply_to=max_experience
            	    increase=1
                [/effect]   	

		[effect]
            	    apply_to=hitpoints
            	    increase=-1
		    increase_total=-1
                [/effect]   
	    [/object]
        {NEXT c}

        {CLEAR_VARIABLE corruptions}

#units with power stealing ability inflicts damage
        [store_unit]
            [filter]
		[filter_adjacent]
                   side=$side_number
                   ability=power stealing
		   is_enemy=yes
		[/filter_adjacent]
            [/filter]
            variable=stealings
	    kill=no
        [/store_unit]

        {FOREACH stealings s}
            [store_unit]
                [filter]
		   side=$side_number
		   ability=power stealing
		   [filter_adjacent]                      
                      x=$stealings[$s].x
		      y=$stealings[$s].y
		      is_enemy=yes
		   [/filter_adjacent]
                [/filter]
                variable=stealer
	        kill=no
            [/store_unit]	    
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$stealings[$s].x
		    y=$stealings[$s].y
		[/filter]
			
		[effect]
            	    apply_to=max_experience
            	    increase=1
                [/effect]   

		[effect]
            	    apply_to=hitpoints
            	    increase=-1
		    increase_total=-1
                [/effect] 	
	    [/object]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$stealer[0].x
		    y=$stealer[0].y
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=1
                [/effect]   

		[effect]
            	    apply_to=hitpoints
		    increase_total=1
            	    increase=1
                [/effect] 	
	    [/object]
	    {CLEAR_VARIABLE stealer}
        {NEXT s}

        {CLEAR_VARIABLE stealings}

#units with holy relic ability inflicts damage
        [store_unit]
            [filter]
		race=SA_undead
		[filter_adjacent]
                   side=$side_number
                   ability=holy_relic
		[/filter_adjacent]
            [/filter]
            variable=holyrelic
	    kill=no
        [/store_unit]

        {FOREACH holyrelic hr}
            [store_unit]
                [filter]
		   side=$side_number
		   ability=holy_relic
		   [filter_adjacent]                      
                      x=$holyrelic[$hr].x
		      y=$holyrelic[$hr].y		
		   [/filter_adjacent]
                [/filter]
                variable=relicvary
	        kill=no
            [/store_unit]
	    [set_variable]
		name=tmp_holy_relic_damage
		value=$relicvary[0].level
            [/set_variable]
	    [set_variable]
		name=tmp_holy_relic_damage
		multiply=2
            [/set_variable]
            [harm_unit]
		[filter]
		    x=$holyrelic[$hr].x
		    y=$holyrelic[$hr].y
		[/filter]
		[filter_second]
		    x=$relicvary[0].x
		    y=$relicvary[0].y
		[/filter_second]
		[secondary_attack]
		    name=lightbeam
		[/secondary_attack]
		amount=$tmp_holy_relic_damage
		damage_type=arcane
		kill=yes
		fire_event=yes
		experience=no
	    [/harm_unit]
	    {CLEAR_VARIABLE relicvary}
	    {CLEAR_VARIABLE tmp_holy_relic_damage}
        {NEXT hr}

        {CLEAR_VARIABLE holyrelic}

#units near white castle become slowed and ZOC-deprived
        [store_unit]
            [filter]
		side=$side_number
		[filter_adjacent]
                   ability=whitecastle
		[/filter_adjacent]
            [/filter]
            variable=whitecastle
	    kill=no
        [/store_unit]

        {FOREACH whitecastle wc}
	    {VARIABLE whitecastle[$wc].status.slowed yes}
	    [unstore_unit]
		variable=whitecastle[$wc]
		male_text= _ "frozen"
	    	female_text= _ "female^frozen"
            	red,green,blue=255,255,255
		find_vacant=no
	    [/unstore_unit]
    	    [object]
            	silent=yes
            	duration=turn

	    	[filter]
	    	    x=$whitecastle[$wc].x
	    	    y=$whitecastle[$wc].y
	    	[/filter]

            	[effect]
            	    apply_to=zoc
    	    	    value=no
	    	[/effect]
    	    [/object]
        {NEXT wc}
        [store_unit]
            [filter]
		side=$side_number
                ability=whitecastle
            [/filter]
            variable=whitecastlemen
	    kill=no
        [/store_unit]
	{FOREACH whitecastlemen wcm}
	[if]
	[variable]
	    name=whitecastlemen[$wcm].level
	    less_than=4
	[/variable]
	[then]
	    {VARIABLE whitecastle[$wcm].status.slowed yes}
	    [unstore_unit]
		variable=whitecastle[$wcm]
		male_text= _ "frozen"
	    	female_text= _ "female^frozen"
            	red,green,blue=255,255,255
		find_vacant=no
	    [/unstore_unit]
	[/then]
	[/if]
	{NEXT wcm}

	{CLEAR_VARIABLE whitecastlemen}
        {CLEAR_VARIABLE whitecastle}	
#evil miracle damages and heals
 	[store_unit]
            [filter]
		side=$side_number
                ability=evil miracle
		[filter_adjacent]
		    is_enemy=yes
		[/filter_adjacent]
            [/filter]
            variable=evilmiracles
	    kill=no
        [/store_unit]
	{FOREACH evilmiracles em}
            [store_unit]
            	[filter]
		    [filter_adjacent]
                   	x=$evilmiracles[$em].x
                   	y=$evilmiracles[$em].y
		   	is_enemy=yes
		    [/filter_adjacent]
		    [not]
			status=undrainable
		    [/not]
            	[/filter]
            	variable=victimsofevil
	    	kill=no
            [/store_unit]
            [store_unit]
            	[filter]
		    [filter_adjacent]
                   	x=$evilmiracles[$em].x
                   	y=$evilmiracles[$em].y
		   	is_enemy=no
		    [/filter_adjacent]
            	[/filter]
            	variable=followersofevil
	    	kill=no
            [/store_unit]
	    {VARIABLE dh 0}
	    {FOREACH victimsofevil ve}
		[if]
		[variable]
		     name=victimsofevil[$ve].hitpoints
		     greater_than=12
		[/variable]
		[then]
		     [set_variable]
			name=dh
			add=12
		     [/set_variable]
		[/then]
		[else]
		     [set_variable]
			name=dh
			add=$victimsofevil[$ve].hitpoints
		     [/set_variable]
		[/else]
		[/if]	
                [harm_unit]
		    [filter]
		    	x=$victimsofevil[$ve].x
		    	y=$victimsofevil[$ve].y
		    [/filter]
		    [filter_second]
		    	x=$evilmiracles[$em].x
		    	y=$evilmiracles[$em].y
		    [/filter_second]
		    amount=12
		    kill=yes
		    fire_event=yes
		    experience=no
	    	[/harm_unit]	
	    {NEXT ve}
	    [if]
	    [variable]
		name=followersofevil.length
		greater_than=0
	    [/variable]
	    [then]
	    	[set_variable]
		    name=dh
		    divide=$followersofevil.length
	    	[/set_variable]
    	    	[heal_unit]
	   	    [filter]
			[filter_adjacent]
                	    x=$evilmiracles[$em].x
                	    y=$evilmiracles[$em].y
			    is_enemy=no
			[/filter_adjacent]
	  	    [/filter]
		    [filter_second]
			x=$evilmiracles[$em].x
			y=$evilmiracles[$em].y
		    [/filter_second]
	   	    amount=$dh
		    restore_statuses=yes
    	    	[/heal_unit]
	    [/then]
	    [/if]	    
	    {CLEAR_VARIABLE dh}	
            {CLEAR_VARIABLE victimsofevil}	
            {CLEAR_VARIABLE followersofevil}
	{NEXT em}
	{CLEAR_VARIABLE evilmiracles}

#waterwalking status applies
        [store_unit]
            [filter]
		[not]
		    {IS_CAN_FLY}
		[/not]
		[and]
		    [filter_adjacent]
                   	side=$side_number
                   	ability=waterwalking
		   	is_enemy=no
		    [/filter_adjacent]
		[/and]
            [/filter]
            variable=waterwalk
	    kill=no
        [/store_unit]

	{FOREACH waterwalk ww}
	[modify_unit]
  	    [filter]
	   	x=$waterwalk[$ww].x
	   	y=$waterwalk[$ww].y
   	    [/filter]
  	    [status]
	    	waterwalking=yes
	    [/status]
        [/modify_unit]
	[if]
	[variable]
	    name=waterwalk[$ww].movement_costs.deep_water
	    equals=""
	[/variable]
	[then] 
	    {VARIABLE tmp_deep_def $waterwalk[$ww].defense.flat}
	    {VARIABLE tmp_deep_mov $waterwalk[$ww].movement_costs.flat}
	[/then]
	[else]
	    {VARIABLE tmp_deep_def $waterwalk[$ww].defense.deep_water}
	    {VARIABLE tmp_deep_mov $waterwalk[$ww].movement_costs.deep_water}
	[/else]
	[/if]
	[if]
	[variable]
	    name=waterwalk[$ww].defense.shallow_water
	    less_than=$waterwalk[$ww].defense.flat
	[/variable]
	[then]
	    {VARIABLE tmp_shallow_def $waterwalk[$ww].defense.shallow_water}
	[/then]
	[else]
	    {VARIABLE tmp_shallow_def $waterwalk[$ww].defense.flat}	
	[/else]
	[/if]
	[if]
	[variable]
	    name=waterwalk[$ww].defense.swamp_water
	    less_than=$waterwalk[$ww].defense.flat
	[/variable]
	[then]
	    {VARIABLE tmp_swamp_def $waterwalk[$ww].defense.swamp_water}
	[/then]
	[else]
	    {VARIABLE tmp_swamp_def $waterwalk[$ww].defense.flat}	
	[/else]
	[/if]
	[if]
	[variable]
	    name=waterwalk[$ww].defense.reef
	    less_than=$waterwalk[$ww].defense.flat
	[/variable]
	[then]
	    {VARIABLE tmp_reef_def $waterwalk[$ww].defense.reef}
	[/then]
	[else]
	    {VARIABLE tmp_reef_def $waterwalk[$ww].defense.flat}	
	[/else]
	[/if]
	
	[if]
	[variable]
	    name=waterwalk[$ww].movement_costs.shallow_water
	    less_than=$waterwalk[$ww].movement_costs.flat
	[/variable]
	[then]
	    {VARIABLE tmp_shallow_mov $waterwalk[$ww].movement_costs.shallow_water}
	[/then]
	[else]
	    {VARIABLE tmp_shallow_mov $waterwalk[$ww].movement_costs.flat}	
	[/else]
	[/if]
	[if]
	[variable]
	    name=waterwalk[$ww].movement_costs.swamp_water
	    less_than=$waterwalk[$ww].movement_costs.flat
	[/variable]
	[then]
	    {VARIABLE tmp_swamp_mov $waterwalk[$ww].movement_costs.swamp_water}
	[/then]
	[else]
	    {VARIABLE tmp_swamp_mov $waterwalk[$ww].movement_costs.flat}	
	[/else]
	[/if]
	[if]
	[variable]
	    name=waterwalk[$ww].movement_costs.reef
	    less_than=$waterwalk[$ww].movement_costs.flat
	[/variable]
	[then]
	    {VARIABLE tmp_reef_mov $waterwalk[$ww].movement_costs.reef}	
	[/then]
	[else]
	    {VARIABLE tmp_reef_mov $waterwalk[$ww].movement_costs.flat}
	[/else]
	[/if]
	[object]
            silent=yes
            duration=turn

	    [filter]
	    	x=$waterwalk[$ww].x
	    	y=$waterwalk[$ww].y
	    [/filter]

            [effect]
            	apply_to=image_mod
            	add="CS(0,0,50)"
            [/effect]

            [effect]
	    	apply_to=defense
	    	replace=yes
            	[defense]
		    deep_water=$tmp_deep_def
               	    shallow_water=$tmp_shallow_def
                    reef=$tmp_reef_def
                    swamp_water=$tmp_swamp_def
            	[/defense]
	    [/effect]
            [effect]
	    	apply_to=movement_costs
	    	replace=yes
            	[movement_costs]
		    deep_water=$tmp_deep_mov
               	    shallow_water=$tmp_shallow_mov
                    reef=$tmp_reef_mov
                    swamp_water=$tmp_swamp_mov
            	[/movement_costs]
	    [/effect]
    	[/object]
	{CLEAR_VARIABLE tmp_deep_def}	
	{CLEAR_VARIABLE tmp_shallow_def}
	{CLEAR_VARIABLE tmp_reef_def}
	{CLEAR_VARIABLE tmp_swamp_def}
	{CLEAR_VARIABLE tmp_deep_mov}
	{CLEAR_VARIABLE tmp_shallow_mov}
	{CLEAR_VARIABLE tmp_reef_mov}
	{CLEAR_VARIABLE tmp_swamp_mov}
	{NEXT ww}
	{CLEAR_VARIABLE waterwalk}
#terrorize removes and starts

        [store_unit]
            [filter]
                side=$side_number
		status=terrorised
            [/filter]
            variable=terror
	    kill=no
        [/store_unit]
        {FOREACH terror t}
            {CLEAR_VARIABLE terror[$t].status.terrorised}

            [unstore_unit]
                variable=terror[$t]
		find_vacant=no
            [/unstore_unit]
        {NEXT t}

        {CLEAR_VARIABLE terror}

        [store_unit]
            [filter]
                [filter_adjacent]
		    side=$side_number
		    ability=harbinger of doom
                [/filter_adjacent]
		[and]
		    [not]
			race=SA_undead,SA_mechanical,SA_bat,SA_spirit
			[or]
			    trait=fearless
			[/or]
		    [/not]
		[/and]
            [/filter]
            variable=terror
	    kill=no
        [/store_unit]
        {FOREACH terror tt}
        {VARIABLE terror[$tt].status.terrorised yes}

        [unstore_unit]
            variable=terror[$tt]
            find_vacant=no
            male_text= _ "terrorised"
	    female_text= _ "female^terrorised"
            red,green,blue=196,196,196
        [/unstore_unit]

        [object]
            silent=yes
            duration=turn

            [filter]
                x,y=$terror[$tt].x,$terror[$tt].y
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(25,25,25)"
            [/effect]

            [effect]
                apply_to=attack
	        increase_damage=-25%
            [/effect]
        [/object]            
        {NEXT tt}

        {CLEAR_VARIABLE terror}
#invisible units get ambusher status
        [store_unit]
            [filter]
                side=$side_number
		ability_type_active=hides
            [/filter]
            variable=ambushers
	    kill=no
        [/store_unit]
        {FOREACH ambushers a}
            {CLEAR_VARIABLE ambushers[$a].status.ambusher}

            [unstore_unit]
                variable=ambushers[$a]
		find_vacant=no
            [/unstore_unit]
        {NEXT a}

        {CLEAR_VARIABLE ambushers}
#anyone who stands on territory, unreachable for him, dies
        [store_unit]
            [filter]
		side=$side_number
		[filter_location]
		    terrain=Wo*
		[/filter_location]
            [/filter]
            variable=anyone
	    kill=no
        [/store_unit]
	{FOREACH anyone aw}
	[if]
	[variable]
	    name=anyone[$aw].movement_costs.deep_water
	    equals=""
	[/variable]
	[then]
	    [kill]
		x=$anyone[$aw].x
		y=$anyone[$aw].y
		animate=yes
		fire_event=yes	
	    [/kill]
	[/then]	
	[/if]	
	{NEXT aw}
	{CLEAR_VARIABLE anyone}
        [store_unit]
            [filter]
		side=$side_number
		[filter_location]
		    terrain=Q*
		[/filter_location]
            [/filter]
            variable=anyone
	    kill=no
        [/store_unit]
	{FOREACH anyone aq}
	[if]
	[variable]
	    name=anyone[$aq].movement_costs.unwalkable
	    equals=""
	[/variable]
	[then]
	    [kill]
		x=$anyone[$aq].x
		y=$anyone[$aq].y
		animate=yes
		fire_event=yes	
	    [/kill]
	[/then]	
	[/if]	
	{NEXT aq}
	{CLEAR_VARIABLE anyone}
	[store_unit]
            [filter]
		side=$side_number
		[filter_location]
		    terrain=X*
		[/filter_location]
            [/filter]
            variable=anyone
	    kill=no
        [/store_unit]
	{FOREACH anyone ax}
	[kill]
	    x=$anyone[$ax].x
	    y=$anyone[$ax].y
	    animate=yes
	    fire_event=yes	
	[/kill]
	{NEXT ax}
	{CLEAR_VARIABLE anyone}

	[redraw]
	[/redraw]
#rebels attack
	[store_unit]
	    [filter]
		ability=rebel
		side=$side_number
		[filter_adjacent]
		    is_enemy=yes
		[/filter_adjacent]
	    [/filter]
	    variable=rebels
	    kill=no
	[/store_unit]
	{FOREACH rebels rb}
	    [fire_event]
	    	name=unauthorized_attack
	    	[primary_unit]
		    x=$rebels[$rb].x
		    y=$rebels[$rb].y
	    	[/primary_unit]
	    [/fire_event]
	{NEXT rb}
	{CLEAR_VARIABLE rebels}
    [/event]

    [event]
	id=remove_ignition
        name=moveto
        first_time_only=no
	[filter]
	   status=ignited
     	   [and]
              [filter_location]
	         {IS_TERRAIN_HAS_WATER}	  
	      [/filter_location] 
	   [/and]
	[/filter]
        [store_unit]
            [filter]
                x=$x1
		y=$y1
            [/filter]
            variable=ignitedunit
        [/store_unit]

        {CLEAR_VARIABLE igniteduniy.status.ignited}

        [unstore_unit]
            variable=ignitedunit
            find_vacant=no
            male_text= _ "female^extinguished"
	    female_text= _ "extinguished"
            red,green,blue=128,128,196
        [/unstore_unit]

        [object]
            silent=yes
            duration=forever

            [filter]
                x,y=$x1,$y1
            [/filter]

            [effect]
                apply_to=image_mod
                add="CS(-50,0,0)"
            [/effect]
        [/object]

        {CLEAR_VARIABLE ignitedunit}

    [/event]

#define WEAPON_SPECIAL_SMOKE
    [attacks]
        id=smoke
        name= _ "smoke"
        name_inactive= _ "smoke"
        description= _ "When this attack used, encounter ends"
        description_inactive= _ "When this attack used, encounter ends"
        value=1
        apply_to=both
    [/attacks]
    [attacks]
        id=smoke2
        value=0
	active_on=offense
        apply_to=opponent
    [/attacks]
#enddef

#define WEAPON_SPECIAL_MANEUVERING_1
    [dummy]
        id=maneuvering
        name= _ "maneuvering"
        description= _ "After unit did all its shoots, it retreats, so its opponent can't continue attack anymore. After attack unit gain additional MP"
    [/dummy]
    [attacks]
        id=maneuvering1
        value=1
        apply_to=opponent
	active_on=defense
        [filter_base_value]
	    greater_than=1
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
    [attacks]
        id=maneuvering2
        value=0
        apply_to=opponent
	active_on=offense
        [filter_base_value]
	    greater_than=0
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		    [or]
			special=firstshoot
		    [/or]
		    [or]
			special=firststrike
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
    [attacks]
        id=maneuvering3
        value=1
        apply_to=opponent
	active_on=offense
        [filter_base_value]
	    greater_than=1
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		[/not]
		[and]
		    special=firstshoot
		    [or]
			special=firststrike
		    [/or]
		[/and]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_MANEUVERING_3
    [attacks]
        id=maneuvering
        name= _ "maneuvering"
        description= _ "After unit did all its shoots, it retreats, so its opponent can't continue attack anymore. After attack unit gain additional MP"
    [/attacks]
    [attacks]
        id=maneuvering1
        value=3
        apply_to=opponent
	active_on=defense
        [filter_base_value]
	    greater_than=3
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
    [attacks]
        id=maneuvering2
        value=2
        apply_to=opponent
	active_on=offense
        [filter_base_value]
	    greater_than=2
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		    [or]
			special=firstshoot
		    [/or]
		    [or]
			special=firststrike
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
    [attacks]
        id=maneuvering3
        value=3
        apply_to=opponent
	active_on=offense
        [filter_base_value]
	    greater_than=3
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		[/not]
		[and]
		    special=firstshoot
		    [or]
			special=firststrike
		    [/or]
		[/and]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
#enddef
[event]
    id=maneuvering_event
    name=attack end
    first_time_only=no

    [filter_attack]
        special=maneuvering
    [/filter_attack]

    [unstore_unit]
        variable=unit
        {COLOR_HEAL}
        text= _ "+1"
        find_vacant=no
    [/unstore_unit]

    [modify_unit]
        [filter]
    	    x,y=$x1,$y1
  	[/filter]
        moves=1
    [/modify_unit]
[/event]
#define WEAPON_SPECIAL_UNRIVALED NUMBER
    [attacks]
        id=unrivaled
        name= _ "unrivaled"
        description= _ "If the opponent has more strikes than unit, number of the opponent's strikes decreased to number of unit's strikes. Number of unit's strikes can't be decreased"
	value={NUMBER}
	apply_to=opponent
        [filter_base_value]
	      greater_than={NUMBER}
        [/filter_base_value]
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=unrivaled
		    [or]
			special_active=sure
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_COUP_DE_GRACE
    [dummy]
        id=coup de grace
        name= _ "coup de grace"
        description= _ "This attack can be used only in offense, when opponent is slowed, stunned or distracted. If this attack hits the enemy, it dies. Does not work against giant and mounted units, and against units with ''first strike'' ability"
	active_on=offense
	[filter_opponent]
	    [not]
		{IS_BIG}
	    [/not]
	    [and]
	        status=slowed
	    	[or]
		    status=distracted
		    [or]
			status=immobilizied		
		    [/or]
	    	[/or]
	    [/and]
	[/filter_opponent]
    [/dummy]
    [disable]
        id=coup de grace1
	active_on=offense
	[filter_opponent]
	    [filter_weapon]
		special=firststrike
		[or]
		    special=firstshoot
		[/or]
	    [/filter_weapon]
	    [or]
		{IS_BIG}
	    [/or]
	    [or]
	    	[not]
	            status=slowed
	    	    [or]
		    	status=distracted
		    	[or]
			    status=immobilizied		
		    	[/or]
	    	    [/or]
	    	[/not]
	    [/or]
	[/filter_opponent]
    [/disable]
    [disable]
        id=coup de grace2
	active_on=defense
    [/disable]
#enddef
[event]
    id=coup_de_grace_event
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=coup de grace
    [/filter_attack]
    [unstore_unit]
        variable=second_unit
        {COLOR_HARM}
        text= _ "COUP DE GRACE!"
        find_vacant=no
    [/unstore_unit]
    [harm_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	[filter_second]
	    x=$x1
	    y=$y1
	[/filter_second]
	amount=$second_unit.hitpoints
	kill=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
[/event]
#define WEAPON_SPECIAL_SEPTICEMIA
    [dummy]
	id=septicemia
        name= _ "septicemia"
 	description= _ "When this attack hits, it infects opponent's blood, making it more vulnerable to both bleeding and voodoo magic by 25%. Septicemia can be healed by magic only"
        [filter_opponent]
            [not]
            	status=undrainable
            [/not]
    	[/filter_opponent]
    [/dummy]
#enddef
    [event]
	id=septicemia_in_attack
        name=attacker hits
        first_time_only=no

        [filter_attack]
            special=septicemia
        [/filter_attack]

    	[filter_second]
            [not]
            	status=undrainable
            [/not]
    	[/filter_second]

	{VARIABLE second_unit.status.septicemed yes}

        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text= _ "septicemia"
            red,green,blue=32,32,32
        [/unstore_unit]

    [/event]

    [event]
	id=septicemia_in_defense
        name=defender hits
        first_time_only=no

        [filter_second_attack]
            special=septicemia
        [/filter_second_attack]

    	[filter]
            [not]
            	status=undrainable
            [/not]
    	[/filter]

	{VARIABLE unit.status.septicemed yes}

        [unstore_unit]
            variable=unit
            find_vacant=no
            text= _ "septicemia"
            red,green,blue=128,0,0
        [/unstore_unit]	

    [/event]

#define WEAPON_SPECIAL_VOODOO_MAGIC
    [damage]
        id=voodoo magic
        multiply=1.25
	[filter_opponent]
	    status=septicemed
	[/filter_opponent]
    [/damage]
    [damage]
        id=voodoo magic1
        multiply=1.25
	[filter_self]
	    [filter_adjacent]
		ability=evil miracle
	    [/filter_adjacent]
	[/filter_self]
    [/damage]
#enddef
#define WEAPON_SPECIAL_WOLF_SKIN
    [damage]
        id=wolf skin
        name= _ "wolf skin"
        description= _ "When unit in this form it has 100% resistance to blade, pierce and impact attacks"
        value=1
	apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		type=blade,pierce,impact
		[not]
		     special_active=sneaky blow
		     [or]
			special_active=always backstab
		     [/or]     	
	    	[/not]
	    [/filter_weapon] 
	[/filter_opponent]
    [/damage]
#enddef
#define WEAPON_SPECIAL_ELECTRICAL
    [dummy]
        id=electrical
        name= _ "electrical"
        description= _ "There are no resitances to electrical damage. If the enemy stands in water, attack do 20% additional damage. If enemy stands in the rain aura, attack do 25% additional damage. These effects are cumulative. If the enemy consists entirely of water, it is gain 50% additional damage from this attack, no matter where it stands"
    [/dummy]
    [damage]
        id=electrical1
        multiply=1.2
	[filter_opponent]
    	    [filter_location]
		 {IS_TERRAIN_OPEN_WATER}
    	    [/filter_location]	
	    [not]
		 {IS_CAN_FLY}
	    [/not]
	[/filter_opponent]
    [/damage]
    [damage]
        id=electrical2
        multiply=1.25
	[filter_opponent]
    	    [filter_adjacent]
		ability=rain_aura1
    	    [/filter_adjacent]	
	    [or]
		ability=rain_aura1
	    [/or]
	[/filter_opponent]	
    [/damage]
#enddef
#define WEAPON_SPECIAL_ANTIUNDEAD
    [damage]
        id=antiundead
        name= _ "versus undead"
        description= _ "This attack inflicts damage only to undead"
        multiply=0
	[filter_opponent]
	    [not]
		race=SA_undead
	    [/not]
	[/filter_opponent]
    [/damage]
#enddef
#define WEAPON_SPECIAL_SAFE
    [disable]
        id=safe
        name= _ "safe"
        description= _ "Opponent can't inflict counterstrikes. Can be countered with ''backstab''"
	apply_to=opponent
	active_on=offense
	[filter_opponent]
  	    [filter_weapon]
	    	[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
			[or]
			    special_active=sure
			[/or]
		    [/or]
	    	[/not]
	    [/filter_weapon]      	
	[/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_DIVINE_PROTECTION
    [damage]
        id=divineprotect
        name= _ "divine protection"
        description= _ "Protects unit from any non-arcane attacks. Can be countered with ''backstab''"
        multiply=0
	apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    type=arcane
		    [or]
			special_active=sneaky blow
			[or]
			     special_active=always backstab
			[/or]
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/damage]
    [disable]
	id=divineprotect2
	active_on=offense
    [/disable]
#enddef
#define WEAPON_SPECIAL_BARRIER
     [attacks]
        id=barrier
        name= _ "barrier"
        description= _ "Holy barrier prevents undead from coming close to unit, so it can not be attacked by undead"
        multiply=0
	apply_to=opponent
	[filter_opponent]
	     race=SA_undead
	[/filter_opponent]
    [/attacks]   
#enddef
#define WEAPON_SPECIAL_INVISIBLE_DEATH
    [attacks]
        id=invisible death
        name= _ "invisible death"
        name_inactive= _ "invisible death"
        description= _ "Opponent can't retaliate if unit is attacking from ambush"
        description_inactive= _ "Opponent can't retaliate if unit is attacking from ambush.

Ability will work if unit began his turn at invisible state"
	apply_to=opponent
	active_on=offense
        multiply=0
	[filter_self]
	    status=ambusher
	[/filter_self]
    [/attacks]
#enddef
#define WEAPON_SPECIAL_SUFFOCATION
    [disable]
        id=suffocation
        name= _ "suffocation"
        description= _ "Prevents living opponents from attacking unit. Can be countered with ''backstab''"
	apply_to=opponent
	[filter_opponent]
	     [not]
	          race=SA_undead,SA_mechanical,SA_spirit
	     [/not]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
			[or]
			    special_active=sure
			[/or]
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_FIRSTSHOOT
    [firststrike]
        id=firstshoot
        name= _ "first shoot"
        description= _ "This unit always shoots first with this attack, even if they are defending"
    [/firststrike]
#enddef
#define WEAPON_SPECIAL_DISPELLING_STORM
    [chance_to_hit]
        id=displellingstorm
        sub=30
        apply_to=opponent
        active_on=offense
	[filter_opponent]
	    [filter_weapon]
		special=magical
		[or]
		    special=absolute
		    [or]
		    	special=absolute defense
		    [/or]
		[/or]
	    [/filter_weapon]
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define ABILITY_DISPELLING_STORM
    [dummy]
	id=displellingstorm_fake
        name= _ "dispelling storm"
        female_name= _ "female^dispelling storm"
        description= _ "Before unit attacks it calls magic storm which reduces efficiency of the opponent's magical counterattacks. Enemy attacks with specials ''magical'', ''unavoidable'' or ''perfect defense'' will lose 30% of accuracy"
    [/dummy]
#enddef
#define WEAPON_SPECIAL_EXHAUSTING_DUEL
    [chance_to_hit]
        id=exhausting duel
        name= _ "exhausting duel"
        description= _ "If there are no enemies around unit except current opponent, unit's accuracy increases by 10% and opponent's accuracy decreases by 10%"
        add=10
	apply_to=self
	[filter_self]
	    [filter_adjacent]
		is_enemy=yes
		count=1
	    [/filter_adjacent]
	[/filter_self]	
    [/chance_to_hit]
    [chance_to_hit]
        id=exhausting duel2
        sub=10
	apply_to=opponent
	[filter_self]
	    [filter_adjacent]
		is_enemy=yes
		count=1
	    [/filter_adjacent]
	[/filter_self]	
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_MARTIAL_ARTS
    [chance_to_hit]
        id=martial arts
        name= _ "martial arts"
        description= _ "If any melee encounter unit's accuracy increases by 10% and opponent's accuracy decreases by 10%. Can be countered with ''backstab''"
        add=10
	apply_to=self
	[filter_self]
	    [filter_weapon]
		[not]
		    special_active=martial_disable
		[/not]
	    [/filter_weapon]
	[/filter_self]	
    [/chance_to_hit]
    [chance_to_hit]
        id=martial arts2
        sub=10
	apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
			[or]
 			    special_active=sure
			[/or]
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/chance_to_hit]
    [dummy]
	id=martial_disable
	[filter_opponent]
	    [filter_weapon]
		special_active=sneaky blow
		[or]
		    special_active=always backstab
		    [or]
 			special_active=sure
		    [/or]
		[/or]
	    [/filter_weapon]
	[/filter_opponent]	
    [/dummy]
#enddef
#define WEAPON_SPECIAL_SNAKE_AGILITY
    [chance_to_hit]
        id=snake agility
        name= _ "snake agility"
        description= _ "Opponent stikes with 20% less accuracy when unit uses this attack. Can be countered with ''backstab''"
        sub=20
        apply_to=opponent
	[filter_opponent]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
			[or]
			     special_active=sure
			[/or]
		    [/or]
		[/not]
	     [/filter_weapon]
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_LONG_RANGE
    [chance_to_hit]
        id=long range
        name= _ "long range"
        description= _ "When used offensively, opponent shoots back with 10% less accuracy"
        sub=10
        active_on=offense
        apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special=long range
		    [or]
			 special_active=sure
		    [/or]
		[/not]
	    [/filter_weapon]
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_RUSH
    [chance_to_hit]
        id=rush
        name= _ "rush"
        description= _ "When used offensively, opponent strikes back with 10% less accuracy"
        sub=10
        active_on=offense
        apply_to=opponent
	[filter_opponent]
	    [filter_weapon]
		[not]
		    special_active=sure
		[/not]
	    [/filter_weapon] 	     
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_ANIMAL_HABITS
    [chance_to_hit]
        id=animal habits
        name= _ "animal habits"
        description= _ "Unit well-learned habits of animals, so accuracy of this attack against animals is 10% greater, while they can't use ''backstab'' on the unit"
        add=10
	[filter_opponent]
	    {IS_ANIMAL}
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_DEFT
    [chance_to_hit]
        id=deft
        name= _ "deft"
        description= _ "Accuracy of this attack never less than 50%. Can be countered with ''backstab''"
        value=50
	cumulative=yes
	[filter_self]
	     [filter_weapon]
		[not]
		    special_active=deft_disable
		[/not]
	     [/filter_weapon]
	[/filter_self]
    [/chance_to_hit]
    [dummy]
	id=deft_disable
	[filter_opponent]
	     [filter_weapon]
		special_active=sneaky blow
		[or]
		    special_active=animal habits
		[/or]
	     [/filter_weapon]
	[/filter_opponent]
    [/dummy]
#enddef
#define WEAPON_SPECIAL_INACCURATE
    [chance_to_hit]
        id=inaccurate
        name= _ "inaccurate"
        description= _ "Accuracy of this attack never greater than 50%"
        value=50
	cumulative=no
	[filter_base_value]
	     greater_than=50
	[/filter_base_value]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_SEER
    [chance_to_hit]
        id=foreseer
        name= _ "seer"
        description= _ "Unit can predict its opponent's actions, so accuracy of attacks against it will be 20% less and accuracy of its own attacks will be 20% more. Negates ''backstab''"
        sub=20
        apply_to=opponent
    [/chance_to_hit]
    [chance_to_hit]
        id=foreseer2
        add=20
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_SIEGE
    [chance_to_hit]
        id=siege
        name= _ "siege"
        description= _ "When used against unit in village or castle, this attack always has at least a 50% chance to hit"
        value=50
        cumulative=yes
        [filter_opponent]
            [filter_location]
                terrain=*^V*, C*, K*
            [/filter_location]
        [/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_ASSAULT_WEAPON
    [chance_to_hit]
        id=assault weapon
        name= _ "assault weapon"
        description= _ "20% less accuracy against units on flat terrain, but 20% more accuracy against units in villages and castles"
        add=20
        cumulative=yes
        [filter_opponent]
            [filter_location]
                terrain=*^V*, C*, K*
            [/filter_location]
        [/filter_opponent]
    [/chance_to_hit]
    [chance_to_hit]
        id=assault weapon2
        sub=20
        cumulative=yes
        [filter_opponent]
            [filter_location]
                terrain=G*, R*
		[not]
		    terrain=*^V*
		[/not]
            [/filter_location]
        [/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_RAM
    [chance_to_hit]
        id=ram
        name= _ "ram"
        description= _ "Can be used only against unit in village or castle and have 90% chance to hit, ignoring any accuracy-lowering specials"
        value=90
        cumulative=no
    [/chance_to_hit]
    [disable]
	id=ram2
	[filter_opponent]
            [filter_location]
		[not]
                    terrain=*^V*, C*, K*
		[/not]
            [/filter_location]
        [/filter_opponent]
    [/disable]
#enddef
#define WEAPON_SPECIAL_SWIFT
    [chance_to_hit]
        id=swift
        name= _ "swift"
        description= _ "This attack has 90% chance to hit if opponent is slowed, stunned or distracted"
        value=90
        [filter_opponent]
     	    status=slowed
	    [or]
		status=distracted
	    [/or]
        [/filter_opponent]
        [filter_self]
	    [not]
     	    	status=slowed
	    	[or]
		    status=distracted
	    	[/or]
	    [/not]
        [/filter_self]   
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_INTERFERENCE
    [chance_to_hit]
        id=interference
        name= _ "interference"
        description= _ "Opponent shoots back with 10% less accuracy. Can be countered with ''backstab''"
        sub=10
        apply_to=opponent
	[filter_opponent]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		        [or]
			    special_active=sure
		        [/or]
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/chance_to_hit] 
#enddef
#define WEAPON_SPECIAL_SCUD
    [chance_to_hit]
        id=scud
        name= _ "scud"
        description= _ "Opponent shoots back with 20% less accuracy. Can be countered with ''backstab''"
        sub=20
        apply_to=opponent
	[filter_opponent]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		        [or]
			    special_active=sure
		        [/or]
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/chance_to_hit] 
#enddef
#define WEAPON_SPECIAL_FLASH
    [chance_to_hit]
        id=flash
        name= _ "flash"
        description= _ "Opponent shoots back with 20% less accuracy. Can be countered with ''backstab''"
        sub=20
        apply_to=opponent
	[filter_opponent]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		        [or]
			    special_active=sure
		        [/or]
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/chance_to_hit] 
#enddef

#define WEAPON_SPECIAL_ABSOLUTE
    [chance_to_hit]
        id=absolute
        name= _ "unavoidable"
        description= _ "This attack has 90% chance to hit in both offense and defense"
        value=90  
    [/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_ABSOLUTE_DEFENSE
    [chance_to_hit]
        id=absolute defense
        name= _ "perfect defense"
        description= _ "This attack has 90% chance to hit in defense. Can be countered with ''backstab''"
        active_on=defense
        value=90
	[filter_opponent]
	     [filter_weapon]
		[not]
		    special_active=sneaky blow
		    [or]
			special_active=always backstab
		    [/or]
		[/not]
	     [/filter_weapon]	     
	[/filter_opponent]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_SURE
    [chance_to_hit]
        id=sure
        name= _ "sure"
        description= _ "This attack has 90% chance to hit in both offense and defense. Accuracy of the attack can't be decreased, nor it can be prevented with any ability"
        value=90  
    [/chance_to_hit]
#enddef
[event]
    id=banner_protect_1
    name=die
    first_time_only=no
    [filter]
	ability=banner_royal_protect
	[filter_adjacent]
	    side=$unit.side
	    {IS_ROYAL_INFANTRYMAN}
	    level=1
	[/filter_adjacent]
	[filter_location]
	    [not]
		terrain=*^V*
	    [/not]
	[/filter_location]
    [/filter]
    [filter_second_attack]
	[not]
	    special=curse of undead
	    [or]
		special=plague(Undead Zombie)
	    [/or]
	[/not]
    [/filter_second_attack]
    [store_unit]
	[filter]
	    side=$unit.side
	    {IS_ROYAL_INFANTRYMAN}
	    level=1
	    [filter_adjacent]
		x=$x1
		y=$y1
	    [/filter_adjacent]
	[/filter]
	variable=bannerman
	kill=no
    [/store_unit]
    [unstore_unit]
       variable=bannerman[0]
       {COLOR_HEAL}
       text= _ "PROTECT BANNER!"
       find_vacant=no
    [/unstore_unit]
    [transform_unit]
	x=$bannerman[0].x
	y=$bannerman[0].y
	transform_to=Royal Infantry Bannerman	
    [/transform_unit]
    [heal_unit]
	[filter]
	    x=$bannerman[0].x
	    y=$bannerman[0].y
	[/filter]
	amount=full
    [/heal_unit]    
[/event]
[event]
    id=banner_protect_2
    name=die
    first_time_only=no
    [filter]
	ability=banner_royal_protect
	[filter_adjacent]
	    side=$unit.side
	    {IS_ROYAL_INFANTRYMAN}
	    level=1
	[/filter_adjacent]
	[filter_location]
	    terrain=*^V*
	[/filter_location]
    [/filter]
    [store_unit]
	[filter]
	    side=$unit.side
	    {IS_ROYAL_INFANTRYMAN}
	    level=1
	    [filter_adjacent]
		x=$x1
		y=$y1
	    [/filter_adjacent]
	[/filter]
	variable=bannerman
	kill=no
    [/store_unit]
    [unstore_unit]
       variable=bannerman[0]
       {COLOR_HEAL}
       text= _ "PROTECT BANNER!"
       find_vacant=no
    [/unstore_unit]
    [transform_unit]
	x=$bannerman[0].x
	y=$bannerman[0].y
	transform_to=Royal Infantry Bannerman	
    [/transform_unit]
    [heal_unit]
	[filter]
	    x=$bannerman[0].x
	    y=$bannerman[0].y
	[/filter]
	amount=full
    [/heal_unit]    
[/event]

#define ABILITY_IMMORTALITY
    [dummy]
        id=immortality
        name= _ "immortality"
        female_name= _ "female^immortality"
        description= _ "When HP of unit reaches 0, it will downgrade instead of dying"
    [/dummy]
#enddef

[event]
    id=immortal
    name=last breath
    first_time_only=no
    [filter]
	ability=immortality
    [/filter]
    [filter_second_attack]
	[not]
	    special=demolition
	[/not]
    [/filter_second_attack]
    [transform_unit]
	x=$unit.x
	y=$unit.y
	transform_to=Undead Ancient Warrior
    [/transform_unit]
    [heal_unit]
	[filter]
	    x=$unit.x
	    y=$unit.y
	[/filter]
	amount=full
    [/heal_unit] 
    [modify_unit]
	[filter]
	   x=$unit.x
	   y=$unit.y
	[/filter]
	experience=0	
    [/modify_unit]   
[/event]

#define ABILITY_WOLF_FRIENDSHIP
    [dummy]
        id=wolf friendship
        name= _ "wolf friendship"
        female_name= _ "female^wolf friendship"
        description= _ "If unit left with 8 or less HP, wolf eats goblin and downgrades to full HP unit of lesser lvl"
    [/dummy]
#enddef

[event]
    id=wolf_friendship
    name=attack end
    first_time_only=no
    [filter]
	ability=wolf friendship
    [/filter]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [and]
    	[variable]
	    name=unit.hitpoints
	    less_than=9
    	[/variable]
    [/and]
    [then]
        [transform_unit]
	    x=$unit.x
	    y=$unit.y
	    transform_to=Tribes Wolf
        [/transform_unit]
        [heal_unit]
	    [filter]
	       x=$unit.x
	       y=$unit.y
	    [/filter]
	    amount=full
        [/heal_unit] 
        [modify_unit]
	    [filter]
	       x=$unit.x
	       y=$unit.y
	    [/filter]
	    experience=0	
        [/modify_unit]
    [/then]
    [/if]   
[/event]
[event]
    id=wolf_friendship_defense
    name=attack end
    first_time_only=no
    [filter_second]
	ability=wolf friendship
    [/filter_second]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [and]
    	[variable]
	    name=second_unit.hitpoints
	    less_than=9
    	[/variable]
    [/and]
    [then]
        [transform_unit]
	    x=$second_unit.x
	    y=$second_unit.y
	    transform_to=Tribes Wolf
        [/transform_unit]
        [heal_unit]
	    [filter]
	       x=$second_unit.x
	       y=$second_unit.y
	    [/filter]
	    amount=full
        [/heal_unit] 
        [modify_unit]
	    [filter]
	       x=$second_unit.x
	       y=$second_unit.y
	    [/filter]
	    experience=0	
        [/modify_unit]
    [/then]
    [/if]   
[/event]
[event]
    id=eternalghost
    name=last breath
    first_time_only=no
    [filter]
	trait=eternal
    [/filter]
    [filter_second_attack]
	[not]
	    special=demolition
	[/not]
    [/filter_second_attack]
    [unstore_unit]
        variable=second_unit
	find_vacant=no
	text= _ "Ilk'kha'ya'leth was defeated
(see in your recall list
to bring it back)"
	red,green,blue=128,128,128
    [/unstore_unit]
    [store_unit]	
	[filter]
	    x=$unit.x
	    y=$unit.y
	[/filter]
	variable=fg
	kill=no
    [/store_unit]
    {VARIABLE fg.x "recall"}
    {VARIABLE fg.y "recall"}
    {CLEAR_VARIABLE fg.status}
    {VARIABLE fg.hitpoints $fg.max_hitpoints}
    [unstore_unit]
	variable=fg
    [/unstore_unit]
    {CLEAR_VARIABLE fg}
[/event]

[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Red Vampire
    [/filter]
    {VARIABLE tmp_upgrade_type "Undead Red Vampire"}
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="energy"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Energystream"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="fire"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Fireball"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="fire2"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Fireballhuge"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="lightning"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Lightning"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="water"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Waterball"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="water2"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Waterspray"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="teleport"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Teleport"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="shadow"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Shadowwave"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="shadow2"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Shadowwavewithfetters"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="gas"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Poisongas"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="curse"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Mortalcurse"}
    [/then]
    [/if] 
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="curse_ritual"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Mortalcursewithritual"}
    [/then]
    [/if] 
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="curse_mortal"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Mortalcurseinstant"}
    [/then]
    [/if] 
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="firewitch"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Flamemissiles"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="firewitch2"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Smokemissiles"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="coldwitch"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Chillwave"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="coldwitch2"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Chillwavedouble"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="orcpriest"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Acidspray"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="orcwitch"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Deliriumtremens"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="flash"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Flash"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.variables.drunkof
	equals="summoner"
    [/variable]
    [then]
	{VARIABLE tmp_upgrade_type "Undead Red Vampire Fake Summon"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_upgrade_type
	equals="Undead Red Vampire"
    [/variable]
    [then] 
    [/then]
    [else]  
        [transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=$tmp_upgrade_type
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    [/else]
    [/if]
    {CLEAR_VARIABLE tmp_upgrade_type}
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Red Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Red Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Red Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Red Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Blue Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Blue Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Blue Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Blue Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal White Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal White Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal White Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal White Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Sun Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Red Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_201
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Sun Mage Fake Withdragonflame
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Sun Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/else] 	
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Sun Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_201
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Sun Mage Fake Withdragonflame
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Sun Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/else] 	
    [/if]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Moon Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Blue Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_206
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Moon Mage Fake Withouticehammer
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Moon Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/else] 	
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Moon Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_206
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Moon Mage Fake Withouticehammer
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Moon Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/else] 	
    [/if]
[/event]

[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Silver Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	ability=heat_aura1
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Silver Mage Fake Sandstorm
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=rain_aura1
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Silver Mage Fake Thunderstorm
    	[/transform_unit]
    	[transform_unit]
	    x=$x1
	    y=$y1
        [/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/then]
    	[else]
    	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Silver Mage Fake
    	[/transform_unit]
        [transform_unit]
	     x=$x1
	     y=$y1
    	[/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
	[/else]
	[/if]
    [/else] 	
    [/if]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Silver Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Apprentice Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_102
	[/has_attack]
    [/have_unit]
    [then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Red Mage Fake
   	[/transform_unit]
    	[transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    [/then]
    [else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Blue Mage Fake
   	[/transform_unit]
    	[transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]	
    [/else] 	
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	ability=heat_aura1
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Silver Mage Fake Sandstorm
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=rain_aura1
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Silver Mage Fake Thunderstorm
    	[/transform_unit]
    	[transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/then]
    	[else]
    	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Silver Mage Fake
    	[/transform_unit]
        [transform_unit]
	     x=$x1
	     y=$y1
        [/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
	[/else]
	[/if]
    [/else] 	
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Light Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_209
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Light Mage Fake Withsunlight
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=holy_relic
    	[/have_unit]
    	[then]
	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Light Mage
    	[/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
    	[/then]
    	[else]
    	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Light Mage Fake
    	[/transform_unit]
    	[transform_unit]
	     x=$x1
	     y=$y1
        [/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
	[/else]
	[/if]
    [/else] 	
    [/if]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Light Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal White Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_206
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Light Mage Fake Withsunlight
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=holy_relic
    	[/have_unit]
    	[then]
	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Light Mage
    	[/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
    	[/then]
    	[else]
    	[transform_unit]
	     x=$x1
	     y=$y1
	     transform_to=Royal Light Mage Fake
    	[/transform_unit]
        [transform_unit]
	     x=$x1
	     y=$y1
    	[/transform_unit]
    	[heal_unit]
	     [filter]
	   	x=$x1
	   	y=$y1
	     [/filter]
	     amount=full
    	[/heal_unit]
	[/else]
	[/if]
    [/else] 	
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Inquisitor Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Inquisitor Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]   
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Royal Great Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Royal Apprentice Mage Fake
    [/transform_unit]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_102
	[/has_attack]
    [/have_unit]
    [then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Red Mage Fake
   	[/transform_unit]
        [transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	    	name=spell_201
	    [/has_attack]
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Sun Mage Fake Withdragonflame
    	[/transform_unit]
        [transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
        [/then]
        [else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Sun Mage Fake
    	[/transform_unit]
        [transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
        [heal_unit]
	    [filter]
	       x=$x1
	       y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/else] 	
        [/if]	
    [/then]
    [else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Blue Mage Fake
   	[/transform_unit]
        [transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	    	name=spell_206
	    [/has_attack]
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Moon Mage Fake Withouticehammer
    	[/transform_unit]
    	[transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/then]
    	[else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Royal Moon Mage Fake
    	[/transform_unit]
        [transform_unit]
	    x=$x1
	    y=$y1
    	[/transform_unit]
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/else] 	
    	[/if]	
    [/else] 	
    [/if]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_206
	[/has_attack]
    [/have_unit]
    [then]
	[if]
	[have_unit]
            x=$x1
	    y=$y1
	    ability=waterwalking
	[/have_unit]
	[then]
    	    [transform_unit]
		x=$x1
		y=$y1
		transform_to=Royal Great Mage Fake Secret1
    	    [/transform_unit]
	[/then]
	[else]
    	    [transform_unit]
		x=$x1
		y=$y1
		transform_to=Royal Great Mage Fake Onlyblade
    	    [/transform_unit]
	[/else]
	[/if]
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	    	name=spell_202
	    [/has_attack]
    	[/have_unit]
    	[then]
	[if]
	    [have_unit]
            	x=$x1
	    	y=$y1
		[has_attack]
	    	    name=spell_302
		[/has_attack]
	    [/have_unit]
	    [then]
    	    	[transform_unit]
		    x=$x1
		    y=$y1
		    transform_to=Royal Great Mage Fake Secret2
    	    	[/transform_unit]
	    [/then]
	    [else]
    	    	[transform_unit]
	 	    x=$x1
		    y=$y1
		    transform_to=Royal Great Mage Fake Onlypike
    	    	[/transform_unit]
	    [/else]
	[/if]
	[/then]
        [else]
	    [if]
	    [have_unit]
		x=$x1
	    	y=$y1
	    	ability=fire mines
	    [/have_unit]
	    [then]
	    [transform_unit]
		x=$x1
	    	y=$y1
		transform_to=Royal Great Mage Fake Disintegration
            [/transform_unit]	    
	    [/then]
	    [else]
		[if]
	    	[have_unit]
		    x=$x1
	    	    y=$y1
	    	    ability=heat_aura1
	        [/have_unit]
	    	[then]
	    	[transform_unit]
		    x=$x1
	    	    y=$y1
		    transform_to=Royal Great Mage Fake Phoenixnibs
            	[/transform_unit]			
		[/then]
		[else]
		    [if]
	    	    [have_unit]
		    	x=$x1
	    	    	y=$y1
	    	    	[has_attack]
	    		    name=spell_203
			[/has_attack]
	            [/have_unit]
		    [then]
		    [if]
		    [have_unit]
			x=$x1
	    	    	y=$y1
	    	    	[has_attack]
	    		    name=spell_304
			[/has_attack]
	            [/have_unit]
		    [then]
		    [transform_unit]
		    	x=$x1
	    	        y=$y1
		        transform_to=Royal Great Mage Fake Whitecastle_and_ninthwave
            	    [/transform_unit]
		    [/then]
		    [else]
		    [transform_unit]
		    	x=$x1
	    	        y=$y1
		        transform_to=Royal Great Mage Fake Ninthwave
            	    [/transform_unit]
		    [/else]
		    [/if]
		    [/then]
		    [else]
			[if]
		    	[have_unit]
			    x=$x1
	    	    	    y=$y1
	    	    	    [has_attack]
	    		    	name=spell_304
			    [/has_attack]
	            	[/have_unit]
		    	[then]
		    	[transform_unit]
		    	    x=$x1
	    	            y=$y1
		            transform_to=Royal Great Mage Fake Whitecastle
            	    	[/transform_unit]			
			[/then]
			[else]
		    	[transform_unit]
		    	    x=$x1
		    	    y=$y1
		    	    transform_to=Royal Great Mage Fake
        	    	[/transform_unit]
			[/else]
			[/if]
		    [/else]
		    [/if]
		[/else]
		[/if]
	    [/else]
	    [/if]
	[/else]
	[/if]
    [/else] 	
    [/if]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Royal Great Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	   name=spell_206
	[/has_attack]
    [/have_unit]
    [then]
	[if]
	[have_unit]
            x=$x1
	    y=$y1
	    ability=waterwalking
	[/have_unit]
	[then]
    	    [transform_unit]
		x=$x1
		y=$y1
		transform_to=Royal Great Mage Fake Secret1
    	    [/transform_unit]
	[/then]
	[else]
    	    [transform_unit]
		x=$x1
		y=$y1
		transform_to=Royal Great Mage Fake Onlyblade
    	    [/transform_unit]
	[/else]
	[/if]
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	    	name=spell_202
	    [/has_attack]
    	[/have_unit]
    	[then]
	[if]
	    [have_unit]
            	x=$x1
	    	y=$y1
	    	[has_attack]
	    	    name=spell_302
		[/has_attack]
	    [/have_unit]
	    [then]
    	    	[transform_unit]
		    x=$x1
		    y=$y1
		    transform_to=Royal Great Mage Fake Secret2
    	    	[/transform_unit]
	    [/then]
	    [else]
    	    	[transform_unit]
	 	    x=$x1
		    y=$y1
		    transform_to=Royal Great Mage Fake Onlypike
    	    	[/transform_unit]
	    [/else]
	[/if]
	[/then]
        [else]
	    [if]
	    [have_unit]
		x=$x1
	    	y=$y1
	    	ability=fire mines
	    [/have_unit]
	    [then]
	    [transform_unit]
		x=$x1
	    	y=$y1
		transform_to=Royal Great Mage Fake Disintegration
            [/transform_unit]	    
	    [/then]
	    [else]
		[if]
	    	[have_unit]
		    x=$x1
	    	    y=$y1
	    	    ability=heat_aura1
	        [/have_unit]
	    	[then]
	    	[transform_unit]
		    x=$x1
	    	    y=$y1
		    transform_to=Royal Great Mage Fake Phoenixnibs
            	[/transform_unit]			
		[/then]
		[else]
		    [if]
	    	    [have_unit]
		    	x=$x1
	    	    	y=$y1
	    	    	[has_attack]
	    		    name=spell_203
			[/has_attack]
	            [/have_unit]
		    [then]
		    [if]
		    [have_unit]
			x=$x1
	    	    	y=$y1
	    	    	[has_attack]
	    		    name=spell_304
			[/has_attack]
	            [/have_unit]
		    [then]
		    [transform_unit]
		    	x=$x1
	    	        y=$y1
		        transform_to=Royal Great Mage Fake Whitecastle_and_ninthwave
            	    [/transform_unit]
		    [/then]
		    [else]
		    [transform_unit]
		    	x=$x1
	    	        y=$y1
		        transform_to=Royal Great Mage Fake Ninthwave
            	    [/transform_unit]
		    [/else]
		    [/if]
		    [/then]
		    [else]
			[if]
		    	[have_unit]
			    x=$x1
	    	    	    y=$y1
	    	    	    [has_attack]
	    		        name=spell_304
			    [/has_attack]
	            	[/have_unit]
		    	[then]
		    	[transform_unit]
		    	    x=$x1
	    	            y=$y1
		            transform_to=Royal Great Mage Fake Whitecastle
            	    	[/transform_unit]			
			[/then]
			[else]
		    	[transform_unit]
		    	    x=$x1
		    	    y=$y1
		    	    transform_to=Royal Great Mage Fake
        	    	[/transform_unit]
			[/else]
			[/if]
		    [/else]
		    [/if]
		[/else]
		[/if]
	    [/else]
	    [/if]
	[/else]
	[/if]
    [/else] 	
    [/if]
    [transform_unit]
	x=$x1
	y=$y1
    [/transform_unit]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Black Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Black Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Black Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Black Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Witch Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Witch Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Witch Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Witch Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Shadow Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Shadow Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Shadow Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Shadow Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Dark Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Black Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_218
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Dark Mage Fake Withshadowdance
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=ancientpower
	    trait=intelligent
    	[/have_unit]
	[then]	
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Dark Mage Fake Withdreadfulwarrior
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
	[/then]
	[else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Dark Mage Fake
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
	[/else]
	[/if]
    	[heal_unit]
	   [filter]
	      x=$x1
	      y=$y1
	   [/filter]
	   amount=full
    	[/heal_unit]
    [/else] 	
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Dark Mage Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_218
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Dark Mage Fake Withshadowdance
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
    	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    ability=ancientpower
	    trait=intelligent
    	[/have_unit]
	[then]	
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Dark Mage Fake Withdreadfulwarrior
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
	[/then]
	[else]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Dark Mage Fake
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
	[/else]
	[/if]
    	[heal_unit]
	   [filter]
	      x=$x1
	      y=$y1
	   [/filter]
	   amount=full
    	[/heal_unit]
    [/else] 	
    [/if]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Balance Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Shadow Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Balance Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Balance Mage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Balance Mage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Undead Sabbath Queen Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Witch Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_219
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Sabbath Queen Fake Fire
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	        name=spell_220
	    [/has_attack]
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Sabbath Queen Fake Cold
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/then]
 	[else]
	    [if]
    	    [have_unit]
            	x=$x1
	    	y=$y1
	       [has_attack]
	           name=spell_222
	       [/has_attack]
    	    [/have_unit]
	    [then]
    	    [transform_unit]
	        x=$x1
	        y=$y1
	        transform_to=Undead Sabbath Queen Fake Curse
    	    [/transform_unit]
    	    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	    [heal_unit]
	        [filter]
	   	    x=$x1
	   	    y=$y1
	    	[/filter]
	    	amount=full
    	    [/heal_unit]		
	    [/then]
	    [else]
    		[transform_unit]
	    	    x=$x1
	    	    y=$y1
	    	    transform_to=Undead Sabbath Queen Fake Skin
    		[/transform_unit]
    		{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    		[heal_unit]
	    	    [filter]
	   		x=$x1
	   		y=$y1
	    	    [/filter]
	    	    amount=full
    		[/heal_unit]	
	    [/else]
	    [/if]
	[/else]
	[/if]	    	
    [/else]
    [/if]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Sabbath Queen Temp
    [/filter]
    [if]
    [have_unit]
        x=$x1
	y=$y1
	[has_attack]
	    name=spell_219
	[/has_attack]
    [/have_unit]
    [then]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Undead Sabbath Queen Fake Fire
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    [/then]
    [else]
	[if]
    	[have_unit]
            x=$x1
	    y=$y1
	    [has_attack]
	        name=spell_220
	    [/has_attack]
    	[/have_unit]
    	[then]
    	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Undead Sabbath Queen Fake Cold
    	[/transform_unit]
    	{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	[heal_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=full
    	[/heal_unit]
    	[/then]
 	[else]
	    [if]
    	    [have_unit]
            	x=$x1
	    	y=$y1
	       [has_attack]
	           name=spell_222
	       [/has_attack]
    	    [/have_unit]
	    [then]
    	    [transform_unit]
	        x=$x1
	        y=$y1
	        transform_to=Undead Sabbath Queen Fake Curse
    	    [/transform_unit]
    	    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    	    [heal_unit]
	        [filter]
	   	    x=$x1
	   	    y=$y1
	    	[/filter]
	    	amount=full
    	    [/heal_unit]		
	    [/then]
	    [else]
    		[transform_unit]
	    	    x=$x1
	    	    y=$y1
	    	    transform_to=Undead Sabbath Queen Fake Skin
    		[/transform_unit]
    		{ADVANCE_UNIT (x,y=$x1,$y1) ()}
    		[heal_unit]
	    	    [filter]
	   		x=$x1
	   		y=$y1
	    	    [/filter]
	    	    amount=full
    		[/heal_unit]	
	    [/else]
	    [/if]
	[/else]
	[/if]	    	
    [/else]
    [/if]
[/event]

[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Tribes Shaman
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Shaman Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Tribes Spiritual Warrior Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Spiritual Warrior Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Tribes Spiritual Warrior Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Spiritual Warrior Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Tribes Sage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Spiritual Warrior Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Sage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Tribes Sage Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Sage Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Tribes Hitman Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Hitman Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Tribes Hitman Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Hitman Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=recruit
    first_time_only=no
    [filter]
	type=Tribes Brotherhood Chief Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Hitman Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Brotherhood Chief Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Tribes Brotherhood Chief Temp
    [/filter]
    [transform_unit]
	x=$x1
	y=$y1
	transform_to=Tribes Brotherhood Chief Fake
    [/transform_unit]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
#define WEAPON_SPECIAL_FULL_DEMOLITION
    [damage]
        id=demolition
        name= _ "full demolition"
        description= _ "When this attack hits it kills the enemy in instant. After first successfully use this attack become inaccessible"
        multiply=1
    [/damage]
#enddef
[event]
    id=demolition_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=demolition
    [/filter_attack]
    [unstore_unit]
    	variable=second_unit
        {COLOR_HARM}
        male_text= _ "DEMOLISHED!"
        female_text= _ "female^DEMOLISHED!"
        find_vacant=no
    [/unstore_unit]
    [harm_unit]
	[filter]
	   x=$x2
	   y=$y2
	[/filter]
	[filter_second]
	   x=$x1
	   y=$y1
	[/filter_second]
	amount=$second_unit.hitpoints
	kill=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
    [if]
    [variable]
	name=$unit.level
	greater_than=3
    [/variable]
    [then]
    	[object]
            silent=yes
            duration=scenario
	    [filter]
	    	x=$x1
	    	y=$y1
            [/filter]
	    [effect]
	    	apply_to=remove_attacks
	    	special=demolition
	    [/effect]
    	[/object]
    [/then]
    [else]
    	[object]
            silent=yes
            duration=forever
	    [filter]
	    	x=$x1
	    	y=$y1
            [/filter]
	    [effect]
	    	apply_to=remove_attacks
	    	special=demolition
	    [/effect]
	    [effect]
	    	apply_to=attack
	        increase_attacks=-1
	    [/effect]
    	[/object]
    [/else]
    [/if]
[/event]
[event]
    id=demolition_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=demolition
    [/filter_second_attack]
    [unstore_unit]
    	variable=unit
        {COLOR_HARM}
        male_text= _ "DEMOLISHED!"
        female_text= _ "female^DEMOLISHED!"
        find_vacant=no
    [/unstore_unit]
    [harm_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	[filter_second]
	   x=$x2
	   y=$y2
	[/filter_second]
	amount=$unit.hitpoints
	kill=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
    [if]
    [variable]
	name=$second_unit.level
	greater_than=3
    [/variable]
    [then]
    	[object]
            silent=yes
            duration=forever
	    [filter]
	    	x=$x2
	    	y=$y2
            [/filter]
	    [effect]
	    	apply_to=remove_attacks
	    	special=demolition
	    [/effect]
    	[/object]
    [/then]
    [else]
    	[object]
            silent=yes
            duration=forever
	    [filter]
	    	x=$x2
	    	y=$y2
            [/filter]
	    [effect]
	    	apply_to=remove_attacks
	    	special=demolition
	    [/effect]
	    [effect]
	    	apply_to=attack
	        increase_attacks=-1
	    [/effect]
    	[/object]
    [/else]
    [/if]
[/event]
#define WEAPON_SPECIAL_MASS_DESTRUCTION
    [damage]
        id=massdestruction
        name= _ "mass destruction"
        description= _ "When this attack hits it inflicts damage to all units adjacent to attacker, and also to attacker itself if it hasn't 4th level.
ATTENTION! Do not use this attack where your allies may suffer"
        multiply=1
    [/damage]
#enddef
[event]
    id=massdestruction_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=massdestruction
    [/filter_attack]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x2
		    y=$y2
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    [if]
    [variable]
	name=unit.level
	less_than=4
    [/variable]
    [then]
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $unit.x}
    	{VARIABLE cy2 $unit.y}
    	{VARIABLE basic $weapon.damage}
   	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}

    	[harm_unit]
	    [filter]
	   	x=$x1
	   	y=$y1
	    [/filter]
	    amount=$damagetotal
	    damage_type=$weapon.type
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=no	    
    	[/harm_unit]
    [/then]
    [/if]
    {FOREACH targets t}
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	   	id=targets[$t].id
	    [/filter]
	    [filter_second]
	   	x=$x1
	   	y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$weapon.type
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
    {NEXT t}
    {CLEAR_VARIABLE align}
    {CLEAR_VARIABLE damagetotal}
    {CLEAR_VARIABLE targets}
[/event]
[event]
    id=massdestruction_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=massdestruction
    [/filter_second_attack]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x1
		    y=$y1
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    [if]
    [variable]
	name=second_unit.level
	less_than=4
    [/variable]
    [then]
 	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $second_unit..x}
    	{VARIABLE cy2 $second_unit.y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[harm_unit]
	    [filter]
	   	x=$x2
	   	y=$y2
	    [/filter]
	    amount=$damagetotal
	    damage_type=$second_weapon.type
	    kill=yes
	    alignment=$align
	    fire_event=yes
	    experience=no	    
    	[/harm_unit]
    	{CLEAR_VARIABLE damagetotal}
    [/then]
    [/if]
    {FOREACH targets t}
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[harm_unit]
	    [filter]
	   	id=targets[$t].id
	    [/filter]
	    [filter_second]
	   	x=$x2
	   	y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$second_weapon.type
	    align=$align
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
    	{CLEAR_VARIABLE damagetotal}
    {NEXT t}
    {CLEAR_VARIABLE targets}
[/event]


#define WEAPON_SPECIAL_MASS_DISTRACTION
    [damage]
        id=massdistraction
        name= _ "mass distraction"
        description= _ "When this attack hits it inflicts additional damage to all units adjacent to attacker. All goals loses their zones of control until next turn.
ATTENTION! Do not use this attack where your allies may suffer"
        multiply=1
    [/damage]
#enddef
[event]
    id=massdistraction_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=massdistraction
    [/filter_attack]
    [store_unit]
        [filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
	    [/filter_adjacent]
        [/filter]
        variable=distracted
	kill=no
    [/store_unit]

    {FOREACH distracted d}
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $distracted[$d].x}
    	{VARIABLE cy2 $distracted[$d].y}
    	{VARIABLE basic $weapon.damage}
    	[harm_unit]
	    [filter]
	   	x=$distracted[$d].x
	   	y=$distracted[$d].y
	   	[and]
		    [not]
		    	x=$x2
		    	y=$y2
		    [/not]
	   	[/and]
	    [/filter]
	    [filter_second]
	   	x=$x1
	   	y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$weapon.type
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
    	{CLEAR_VARIABLE damagetotal}
    	[modify_unit]
  	    [filter]
	   	x=$distracted[$d].x
	   	y=$distracted[$d].y
  	    [/filter]
  	    [status]
	    	distracted=yes
	    [/status]
    	[/modify_unit]
    	[object]
            silent=yes
            duration=turn

	    [filter]
	    	x=$distracted[$d].x
	    	y=$distracted[$d].y
	    [/filter]

            [effect]
            	apply_to=image_mod
            	add="CS(50,50,0)"
            [/effect]

            [effect]
            	apply_to=zoc
    	    	value=no
	    [/effect]
    	[/object]
    {NEXT d}

    {CLEAR_VARIABLE distracted}
[/event]
[event]
    id=massdistraction_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=massdistraction
    [/filter_second_attack]
    [store_unit]
        [filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
	    [/filter_adjacent]
        [/filter]
        variable=distracted
	kill=no
    [/store_unit]

    {FOREACH distracted d}
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $distracted[$d].x}
    	{VARIABLE cy2 $distracted[$d].y}
    	{VARIABLE basic $second_weapon.damage}
    	[harm_unit]
	    [filter]
	   	x=$distracted[$d].x
	   	y=$distracted[$d].y
	    	[and]
		    [not]
		    	x=$x1
		    	y=$y1
		    [/not]
	   	[/and]
	    [/filter]
	    [filter_second]
	   	x=$x2
	   	y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$second_weapon.type
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
    	{CLEAR_VARIABLE damagetotal}
    	[modify_unit]
  	    [filter]
	   	x=$distracted[$d].x
	   	y=$distracted[$d].y
  	    [/filter]
  	    [status]
	    	distracted=yes
	    [/status]
    	[/modify_unit]
    	[object]
            silent=yes
            duration=turn

	    [filter]
	    	x=$distracted[$d].x
	    	y=$distracted[$d].y
	    [/filter]

            [effect]
            	apply_to=image_mod
            	add="CS(50,50,0)"
            [/effect]

            [effect]
            	apply_to=zoc
    	    	value=no
	    [/effect]
    	[/object]
    {NEXT d}

    {CLEAR_VARIABLE distracted}
[/event]
#define WEAPON_SPECIAL_BIG_MISTAKE
    [dummy]
        id=bigmistake
        name= _ "big mistake"
        description= _ "When this attack hits it inflicts damage to all units adjacent to target, except its user.
When this attack misses, it poisons main target and all units adjacent to it, except its user"
    [/dummy]
#enddef
[event]
    id=bigmistake_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=bigmistake
    [/filter_attack]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x1
		    y=$y1
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    {FOREACH targets t}
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	   	id=targets[$t].id
	    [/filter]
	    [filter_second]
	   	x=$x1
	   	y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$weapon.type
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
    	{CLEAR_VARIABLE align}
        {CLEAR_VARIABLE damagetotal}
    {NEXT t}
    {CLEAR_VARIABLE targets}
[/event]
[event]
    id=bigmistake_in_attack_miss
    name=attacker misses
    first_time_only=no
    [filter_attack]
	special=bigmistake
    [/filter_attack]
    [harm_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x1
		    y=$y1
		[/not]
	    [/and]
	[/filter]
	[filter_second]
	   x=$x1
	   y=$y1
	[/filter_second]
	amount=0
	damage_type=$weapon.type
	poisoned=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
[/event]
[event]
    id=bigmistake_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=massdestruction
    [/filter_second_attack]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x2
		    y=$y2
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    {FOREACH targets t}
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[harm_unit]
	    [filter]
	   	id=targets[$t].id
	    [/filter]
	    [filter_second]
	   	x=$x2
	   	y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=$second_weapon.type
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=yes	    
    	[/harm_unit]
	{CLEAR_VARIABLE align}
        {CLEAR_VARIABLE damagetotal}
    {NEXT t}
    {CLEAR_VARIABLE targets}
[/event]
[event]
    id=bigmistake_in_defense_miss
    name=defender misses
    first_time_only=no
    [filter_second_attack]
	special=bigmistake
    [/filter_second_attack]
    [harm_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
	    [/filter_adjacent]
	    [and]
		[not]
		    x=$x2
		    y=$y2
		[/not]
	    [/and]
	[/filter]
	[filter_second]
	   x=$x2
	   y=$y2
	[/filter_second]
	amount=0
	damage_type=$second_weapon.type
	poisoned=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
[/event]
#define WEAPON_SPECIAL_BOOM
    [dummy]
        id=boom
        name= _ "BOOM"
        description= _ "This attack damages all units around target, besides it chooses as target hex behind unit it attacks. Chance to hit and damage is calculated separately for each victim.
ATTENTION! Do not use this attack where your allies may suffer"
    [/dummy]
#enddef
[event]
    id=boom_in_attack
    name=attacker hits, attacker misses
    first_time_only=no
    [filter_attack]
	special=boom
    [/filter_attack]
    [store_unit]
	[filter]
	    [filter_location]
		[filter_adjacent_location]
		    [filter_adjacent_location]
	   	   	x=$x2
	   	   	y=$y2
		   	adjacent=$second_unit.facing
		    [/filter_adjacent_location]	
		[/filter_adjacent_location]
	    [/filter_location]
	    [and]
		[not]
		    x=$x2
		    y=$y2
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    {FOREACH targets t}
    	{VARIABLE cx1 $unit.x}
    	{VARIABLE cy1 $unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[set_variable]
	    name=tmp_luck
	    rand=1..100
    	[/set_variable]
	[if]
	[variable]
	    name=targets[$t].defense
	    greater_than=$tmp_luck
	[/variable]
	[then]
    	    [harm_unit]
	    	[filter]
	   	    id=targets[$t].id
	    	[/filter]
	    	[filter_second]
	   	    x=$x1
	   	    y=$y1
	    	[/filter_second]
	    	amount=$damagetotal
	    	damage_type=$weapon.type
		alignment=$align
	    	kill=yes
	    	fire_event=yes
	    	experience=yes	    
    	    [/harm_unit]
	[/then]
	[else]
            [unstore_unit]
            	variable=targets[$t]
            	{COLOR_HARM}
            	text= _ "miss"
            	find_vacant=no
    	    [/unstore_unit]	    
	[/else]
	[/if]
	{CLEAR_VARIABLE damagetotal}
	{CLEAR_VARIABLE align}
    {NEXT t}
    [if]
    [have_unit]
	x=$x1
	y=$y1
	ability=ruthless bombardment
    [/have_unit]
    [then]
	[capture_village]
	    [filter_location]
		[filter_adjacent_location]
		    [filter_adjacent_location]
	   	   	x=$x2
	   	   	y=$y2
		   	adjacent=$second_unit.facing
		    [/filter_adjacent_location]	
		[/filter_adjacent_location]
	    [/filter_location]
	    [and]
		[not]
		    x=$x2
		    y=$y2
		[/not]
	    [/and]	
	[/capture_village]
    [/then]
    [/if]
    {CLEAR_VARIABLE targets}
[/event]
[event]
    id=boom_in_defense
    name=defender hits, defender misses
    first_time_only=no
    [filter_second_attack]
	special=boom
    [/filter_second_attack]
    [store_unit]
	[filter]
	    [filter_location]
		[filter_adjacent_location]
		    [filter_adjacent_location]
	   	   	x=$x1
	   	   	y=$y1
		   	adjacent=$unit.facing
		    [/filter_adjacent_location]	
		[/filter_adjacent_location]
	    [/filter_location]
	    [and]
		[not]
		    x=$x1
		    y=$y1
		[/not]
	    [/and]
	[/filter]
	variable=targets
	kill=no
    [/store_unit]
    {FOREACH targets t}
    	{VARIABLE cx1 $second_unit.x}
    	{VARIABLE cy1 $second_unit.y}
    	{VARIABLE cx2 $targets[$t].x}
    	{VARIABLE cy2 $targets[$t].y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[set_variable]
	    name=tmp_luck
	    rand=1..100
    	[/set_variable]
	[if]
	[variable]
	    name=targets[$t].defense
	    greater_than=$tmp_luck
	[/variable]
	[then]
    	    [harm_unit]
	    	[filter]
	   	    id=targets[$t].id
	    	[/filter]
	    	[filter_second]
	   	    x=$x2
	   	    y=$y2
	    	[/filter_second]
	    	amount=$damagetotal
	    	damage_type=$second_weapon.type
		alignment=$align
	    	kill=yes
	    	fire_event=yes
	    	experience=yes	    
    	    [/harm_unit]
	[/then]
	[else]
            [unstore_unit]
            	variable=targets[$t]
            	{COLOR_HARM}
            	text= _ "miss"
            	find_vacant=no
    	    [/unstore_unit]	    
	[/else]
	[/if]    
	{CLEAR_VARIABLE align}
    	{CLEAR_VARIABLE damagetotal}
    {NEXT t}
    [if]
    [have_unit]
	x=$x2
	y=$y2
	ability=ruthless bombardment
    [/have_unit]
    [then]
	[capture_village]
	    [filter_location]
		[filter_adjacent_location]
		    [filter_adjacent_location]
	   	   	x=$x1
	   	   	y=$y1
		   	adjacent=$second_unit.facing
		    [/filter_adjacent_location]	
		[/filter_adjacent_location]
	    [/filter_location]
	    [and]
		[not]
		    x=$x1
		    y=$y1
		[/not]
	    [/and]	
	[/capture_village]
    [/then]
    [/if]
    {CLEAR_VARIABLE targets}
[/event]
#define ABILITY_WHITE_CASTLE
    [dummy]
        id=whitecastle
        name= _ "white castle"
        description= _ "Units, which began its turn near this unit, will be slowed and deprived of their ZoC for 1 turn. This ability can affect your allies"
    [/dummy]
#enddef
#define ABILITY_CIRCLE_OF_ELEMENTS
    [dummy]
        id=circleofelements
        name= _ "circle of elements"
        description= _ "After ''cutting wind'' used, with next attack unit can use ''blizzard'' without spending attack points. If opponent slowed by ''blizzard'', ''earthquake'' inflicts double damage. If ''earthquake'' hits, ''hell fire'' will hit the opponent with 90% accuracy during next turn. ''Cutting wind'' used after ''hell fire'' will cause ignition"
    [/dummy]
#enddef
#define WEAPON_SPECIAL_FIRE_AND_EARTH
    [chance_to_hit]
        id=fire_n_earth
        value=90
	[filter_opponent]
	     status=circle_earth
	[/filter_opponent]	
    [/chance_to_hit]
#enddef
[event]
    id=elemental_circle_earth
    name=attacker hits
    [filter]
	ability=circleofelements
    [/filter]
    [filter_attack]
	type=impact
	special=absolute
    [/filter_attack]
    [filter_second]
	[not]
	    status=circle_earth
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x2
	      y=$y2
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_earth
	   [/effect]
         [/object]	
    [/then]
    [/if]
[/event]
[event]
    id=elemental_circle_earth2
    name=defender hits
    [filter_second]
	ability=circleofelements
    [/filter_second]
    [filter_second_attack]
	type=impact
	special=absolute
    [/filter_second_attack]
    [filter]
	[not]
	    status=circle_earth
	[/not]
    [/filter]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x1
	      y=$y1
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_earth
	   [/effect]
         [/object]	
    [/then]
    [/if]  
[/event]
#define WEAPON_SPECIAL_EARTH_AND_WATER
    [damage]
        id=earth_n_water
        multiply=2
	[filter_opponent]
	     status=circle_water
	[/filter_opponent]	
    [/damage]
#enddef
[event]
    id=elemental_circle_water
    name=attacker hits
    [filter]
	ability=circleofelements
    [/filter]
    [filter_attack]
	type=cold
	special=slow
    [/filter_attack]
    [filter_second]
	status=slowed
	[not]
	    status=circle_water
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x2
	      y=$y2
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_water
	   [/effect]
         [/object]	
    [/then]
    [/if]
[/event]
[event]
    id=elemental_circle_water2
    name=defender hits
    [filter_second]
	ability=circleofelements
    [/filter_second]
    [filter_second_attack]
	type=cold
	special=slow
    [/filter_second_attack]
    [filter]
	status=slowed
	[not]
	    status=circle_water
	[/not]
    [/filter]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x1
	      y=$y1
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_water
	   [/effect]
         [/object]	
    [/then]
    [/if]  
[/event]
#define WEAPON_SPECIAL_AIR_AND_FIRE
    [damage]
        id=air_n_fire
        multiply=1
	[filter_opponent]
	     status=circle_fire
	[/filter_opponent]	
    [/damage]
#enddef
[event]
    id=elemental_circle_fire
    name=attacker hits,attacker misses
    [filter]
	ability=circleofelements
    [/filter]
    [filter_attack]
	type=fire
	range=ranged
    [/filter_attack]
    [filter_second]
	[not]
	    status=circle_fire
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x2
	      y=$y2
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_fire
	   [/effect]
         [/object]	
    [/then]
    [/if]
[/event]
[event]
    id=elemental_circle_fire2
    name=defender hits, defender misses
    [filter_second]
	ability=circleofelements
    [/filter_second]
    [filter_second_attack]
	type=fire
	range=ranged
    [/filter_second_attack]
    [filter]
	[not]
	    status=circle_fire
	[/not]
    [/filter]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
        [object]
           silent=yes
           duration=turn
	   [filter]
	      x=$x1
	      y=$y1
           [/filter]
	   [effect]
	      apply_to=status
	      add=circle_fire
	   [/effect]
         [/object]	
    [/then]
    [/if]  
[/event]

#define WEAPON_SPECIAL_WATER_AND_AIR
    [damage]
        id=water_n_air
        multiply=1
	[filter_self]
	     status=circle_air
	[/filter_self]	
    [/damage]
#enddef
[event]
    id=elemental_circle_air
    name=attacker hits, attacker misses
    [filter]
	ability=circleofelements
	[not]
	    status=circle_air
	[/not]
    [/filter]
    [filter_attack]
	type=blade
	special=magical
	range=ranged
    [/filter_attack]
    [object]
        silent=yes
        duration=turn
	[filter]
	   x=$x2
	   y=$y2
        [/filter]
	[effect]
	   apply_to=status
	   add=circle_air
	[/effect]
    [/object]
    [modify_unit]
  	[filter]
	    x=$x1
	    y=$y1
   	[/filter]
  	[status]
	    circle_air=yes
	[/status]
	[effect]
	    apply_to=attack
	    special=water_n_air
	    attack_weight=10.0
	[/effect]
    [/modify_unit]    	
[/event]
[event]
    id=elemental_circle_air2
    name=defender hits, defender misses
    [filter_second]
	ability=circleofelements
	[not]
	    status=circle_air
	[/not]
    [/filter_second]
    [filter_second_attack]
	type=blade
	special=magical
	range=ranged
    [/filter_second_attack]
    [object]
        silent=yes
        duration=turn
	[filter]
	   x=$x1
	   y=$y1
        [/filter]
	[effect]
	   apply_to=status
	   add=circle_air
	[/effect]
    [/object]
    [modify_unit]
  	[filter]
	    x=$x2
	    y=$y2
   	[/filter]
  	[status]
	    circle_air=yes
	[/status]
	[effect]
	    apply_to=attack
	    special=water_n_air
	    attack_weight=10.0
	[/effect]
    [/modify_unit]   
[/event]
[event]
    id=elemental_free_blizzard
    name=attack end
    [filter]
	ability=circleofelements
	status=circle_air
    [/filter]
    [filter_attack]
	special_active=water_n_air
    [/filter_attack]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [then]
	{CLEAR_VARIABLE unit.status.circle_air}
	{VARIABLE unit.attacks_left 1}
	[unstore_unit]
	    variable=unit
            {COLOR_HEAL}
            text= _ "WINTER IS COMING!"
	    find_vacant=no
	[/unstore_unit]
        [modify_unit]
  	    [filter]
	 	x=$x1
	  	y=$y1
   	    [/filter]
	    [effect]
	        apply_to=attack
		special=water_n_air
		attack_weight=1.0
	    [/effect]
    	[/modify_unit]  
    [/then]
    [/if]    	
[/event]
[event]
    id=elemental_complete_circle
    name=attack end
    [filter]
	ability=circleofelements
    [/filter]
    [filter_attack]
	special=earth_n_water
    [/filter_attack]
    [filter_second]
	status=circle_earth
	[and]
	    status=circle_water
	[/and]
	[and]
	    status=circle_air
	[/and]
    [/filter_second]
    [if]
    [variable]
	name=unit.hitpoints
	greater_than=0
    [/variable]
    [and]
        [variable]
	    name=second_unit.hitpoints
	    greater_than=0
    	[/variable]
    [/and]
    [then]
	[unstore_unit]
	    variable=unit
            {COLOR_HEAL}
            text= _ "FULL CIRCLE IS COMPLETED! NOW, BURN!"
	    find_vacant=no
	[/unstore_unit]
        {VARIABLE cx1 $unit.x}
        {VARIABLE cy1 $unit.y}
        {VARIABLE cx2 $second_unit.x}
        {VARIABLE cy2 $second_unit.y}
        {VARIABLE basic 10}
	{VARIABLE l $unit.level}
	[set_variable]
	    name=lev
	    multiply=10
	[/set_variable]
	[set_variable]
	    name=basic
	    add=$lev
	[/set_variable]
	{CLEAR_VARIABLE lev}
        {ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	    	x=$x2
	    	y=$y2
	    [/filter]
	    [filter_second]
	 	x=$x1
		y=$y1
	    [/filter_second]
	    [secondary_attack]
	    	type=fire
	        range=ranged
	    [/secondary_attack]
	    amount=$damagetotal
	    alignment=$align
	    damage_type=fire
	    kill=yes
	    fire_event=yes
	    experience=yes
        [/harm_unit]		
	{CLEAR_VARIABLE align}
	{CLEAR_VARIABLE damagetotal}
    [/then]
    [/if]    	
[/event]
#define WEAPON_SPECIAL_TOMBSTONE
    [dummy]
        id=tombstone
        name= _ "tombstone"
        description= _ "When enemy unit is killed by this attack, an obelisk is erected above his grave"
    [/dummy]
#enddef
[event]
    id=tombstone
    name=die
    first_time_only=no
    [filter_second_attack]
        special=tombstone
    [/filter_second_attack]
    [unit]
	type=Spirit Obelisk
	side=$second_unit.side
	x=$x1
	y=$y1
	to_variable=monumental
    [/unit]
    [unstore_unit]
	variable=monumental
	find_vacant=no
        text= _ "Glory to Labor!"
        {COLOR_HARM}
    [/unstore_unit]
    {CLEAR_VARIABLE monumental}
[/event]
#define WEAPON_SPECIAL_BIFURCATION
    [dummy]
        id=bifurcation
        name= _ "bifurcation"
        description= _ "When unit is attacked and uses this attack for self-protection, it divides on two equivalent units, with both having half of original hitpoints"
	active_on=defense
    [/dummy]
#enddef
[event]
    id=bifurcation
    name=attack
    first_time_only=no
    [filter_second_attack]
	special_active=bifurcation
    [/filter_second_attack]
    [filter_second]
	[filter_adjacent]
	     count=0-5
	[/filter_adjacent]
    [/filter_second]
    [if]
    [variable]
	name=second_unit.hitpoints
	greater_than=1
    [/variable]
    [then]
    	{VARIABLE hits $second_unit.hitpoints}
    	[set_variable]
	    name=hits
	    divide=2
    	[/set_variable]
    	{VARIABLE second_unit.hitpoints $hits}
    	[unit]
	    type=$second_unit.type
	    name=$second_unit.name
	    side=$second_unit.side
	    gender=$second_unit.gender
	    moves=$second_unit.moves
	    canrecruit=$second_unit.cancrecruit
	    attacks_left=$second_unit.attacks_left
	    resting=$second_unit.resting
	    variation=$second_unit.variation
	    overlays=$second_unit.overlays
	    x=$second_unit.x
	    y=$second_unit.y
	    hitpoints=$hits
	    profile=$second_unit.profile
	    ai_special=$second_unit.ai_special
	    random_traits=yes
    	[/unit]
        [unstore_unit]
	    variable=second_unit
	    find_vacant=no
            text= _ "THEY MULTIPLY!!!"
            {COLOR_HEAL}
        [/unstore_unit]
        {CLEAR_VARIABLE hits}
    [/then]
    [/if]
[/event]
#define ABILITY_SAVIOR
    [teleport]
        id=savior
        name= _ "savior"
        female_name= _ "female^savior"
        description= _ "Unit is able to teleport allies from any location to itself and from itself - to their leader"
        [tunnel]
            id=savior_teleport_1
	    allow_vision=no
            [source]
            [/source]

            [target]
                [filter_adjacent_location]
		    [filter]
			ability=savior
		    	side=$teleport_unit.side
		    [/filter]
                [/filter_adjacent_location]
            [/target]

	    [filter]
		side=$teleport_unit.side
	    [/filter]
        [/tunnel]
        [tunnel]
            id=savior_teleport_2
	    allow_vision=no
            [source]
                [filter_adjacent_location]
		    [filter]
			ability=savior
		    	side=$teleport_unit.side
		    [/filter]
                [/filter_adjacent_location]
            [/source]

            [target]
                [filter_adjacent_location]
		    [filter]
			canrecruit=yes
		    	side=$teleport_unit.side
		    [/filter]
                [/filter_adjacent_location]
            [/target]

	    [filter]
		side=$teleport_unit.side
		canrecruit=no
	    [/filter]
        [/tunnel]
    [/teleport]
#enddef
#define ABILITY_EVIL_BEGETS_EVIL
    [dummy]
        id=evil begets evil
        name= _ "evil begets evil"
        female_name= _ "female^evil begets evil"
        description= _ "Every time unit is attacked, it gets HP in amount of taken damage"
    [/dummy]
#enddef
[event]
    id=evil_in_defense
    name=attacker hits
    first_time_only=no
    [filter_second]
	ability=evil begets evil
    [/filter_second]
    [heal_unit]
	[filter]
	   x=$x2
	   y=$y2
	[/filter]
	amount=$damage_inflicted
	restore_statuses=yes
    [/heal_unit]
[/event]
[event]
    id=evil_in_attack
    name=defender hits
    first_time_only=no
    [filter]
	ability=evil begets evil
    [/filter]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=$damage_inflicted
	restore_statuses=yes
    [/heal_unit]
[/event]
#define ABILITY_EVIL_MIRACLE
    [dummy]
        id=evil miracle
        name= _ "evil miracle"
        female_name= _ "female^evil miracle"
        description= _ "Every turn unit absorbs 12 HP from each adjacent enemy (killed units became zombies) and split those hitpoints between adjacent allies. Damage of voodoo spells of adjacent mages increases by 25%"
    [/dummy]
#enddef

[event]
    id=evilmiracle_aura
    name=die
    first_time_only=no

    [filter]
        [not]
            status=unplagueable
        [/not]
	[and]
	    [not]
            	[filter_location]
                    terrain=*^V*
            	[/filter_location]
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	ability=evil miracle
    [/filter_second]

    [store_unit]
	[filter]
	    [filter_adjacent]
		x=$x1
		y=$y1
	    [/filter_adjacent]	
	    ability=evil miracle    
	[/filter]
	variable=miracle
	kill=no
    [/store_unit]

    [unit]
	type=Undead Zombie
	variation=$unit.undead_variation
	side=$miracle.side
	x=$x1
	y=$y1
	to_variable=plagued
    [/unit]
    [unstore_unit]
	variable=plagued
	find_vacant=no
        text= _ "zombification"
        red,green,blue=128,64,128
    [/unstore_unit]
    [object]
        silent=yes
        duration=forever

        [filter]
           x,y=$x1,$y1
        [/filter]

        [effect]
           apply_to=remove_advancement
           types=Undead Ghoul,Undead Flesh Golem,Undead Cursed Tree,Undead Black Vampire
        [/effect]
     [/object]  
    {CLEAR_VARIABLE miracle}
    {CLEAR_VARIABLE plagued}
[/event]

#define WEAPON_SPECIAL_DOUBLING
    [damage]
        id=doubling
        name= _ "doubling"
        description= _ "Every time this attack hits damage of all following strikes doubles"
        multiply=1
    [/damage]
#enddef
[event]
    id=doubling_in_attack_begin
    name=attack
    first_time_only=no
    [filter_attack]
	special=doubling
    [/filter_attack]
    {VARIABLE multiplicator1 1}
[/event]
[event]
    id=doubling_in_defense_begin
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=doubling
    [/filter_second_attack]
    {VARIABLE multiplicator2 1}
[/event]
[event]
    id=doubling_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=doubling
    [/filter_attack]
    [set_variable]
	name=multiplicator1
	multiply=2
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=doubling
	    increase_damage=100%
	[/effect]
    [/object]
[/event]
[event]
    id=doubling_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=doubling
    [/filter_second_attack]
    [set_variable]
	name=multiplicator2
	multiply=2
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=doubling
	    increase_damage=100%
	[/effect]
    [/object]
[/event]
[event]
    name=attack end
    id=doubling_in_attack_end
    first_time_only=no
    [filter_attack]
	special=doubling
    [/filter_attack]
    [set_variable]
	name=tmp1
	value=100
    [/set_variable]
    [set_variable]
	name=tmp1
	divide=$multiplicator1
    [/set_variable]
    [set_variable]
	name=tmp2
	value=-100
    [/set_variable]
    [set_variable]
	name=tmp2
	add=$tmp1
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=doubling
	    increase_damage=$tmp2%
	[/effect]
    [/object]
    {CLEAR_VARIABLE tmp1}
    {CLEAR_VARIABLE tmp2}
    {CLEAR_VARIABLE multiplicator1}
[/event]
[event]
    name=attack end
    id=doubling_in_defense_end
    first_time_only=no
    [filter_second_attack]
	special=doubling
    [/filter_second_attack]
    [set_variable]
	name=tmp1
	value=100
    [/set_variable]
    [set_variable]
	name=tmp1
	divide=$multiplicator2
    [/set_variable]
    [set_variable]
	name=tmp2
	value=-100
    [/set_variable]
    [set_variable]
	name=tmp2
	add=$tmp1
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=doubling
	    increase_damage=$tmp2%
	[/effect]
    [/object]
    {CLEAR_VARIABLE tmp1}
    {CLEAR_VARIABLE tmp2}
    {CLEAR_VARIABLE multiplicator2}
[/event]
#define WEAPON_SPECIAL_CUMULATIVE
    [damage]
        id=cumulative
        name= _ "cumulative"
        description= _ "Every time this attack hits it gains additional shoot, up to 9 shoots"
        multiply=1
    [/damage]
#enddef
[event]
    id=cumulative_in_attack_begin
    name=attack
    first_time_only=no
    [filter_attack]
	special=cumulative
    [/filter_attack]
    {VARIABLE adder1 0}
[/event]
[event]
    id=cumulative_in_defense_begin
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=cumulative
    [/filter_second_attack]
    {VARIABLE adder2 0}
[/event]
[event]
    id=cumulative_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=cumulative
    [/filter_attack]
    [set_variable]
	name=adder1
	add=1
    [/set_variable]
    [object]
        silent=yes
        duration=forever
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=cumulative
	    increase_attacks=1
	    [filter]
		[not]
	    	    [has_attack]
	    		special=cumulative
			number=9-999
	    	    [/has_attack]
		[/not]
	    [/filter]
	[/effect]
    [/object]
[/event]
[event]
    id=cumulative_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=doubling
    [/filter_second_attack]
    [set_variable]
	name=adder2
	add=1
    [/set_variable]
    [object]
        silent=yes
        duration=forever
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=cumulative
	    increase_attacks=1
	    [filter]
		[not]
	    	    [has_attack]
	    		special=cumulative
			number=9-999
	    	    [/has_attack]
		[/not]
	    [/filter]
	[/effect]
    [/object]
[/event]
[event]
    name=attack end
    id=cumulative_in_attack_end
    first_time_only=no
    [filter_attack]
	special=cumulative
    [/filter_attack]
    [set_variable]
	name=adder1
	multiply=-1
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x1
	    y=$y1
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=cumulative
	    increase_attacks=$adder1
	[/effect]
    [/object]
    {CLEAR_VARIABLE adder1}
[/event]
[event]
    name=attack end
    id=cumulative_in_defense_end
    first_time_only=no
    [filter_second_attack]
	special=cumulative
    [/filter_second_attack]
    [set_variable]
	name=adder2
	multiply=-1
    [/set_variable]
    [object]
        silent=yes
        duration=turn
	[filter]
	    x=$x2
	    y=$y2
        [/filter]
	[effect]
	    apply_to=status
	    add=temporary
	[/effect]
	[effect]
	    apply_to=attack
	    special=cumulative
	    increase_attacks=$adder2
	[/effect]
    [/object]
    {CLEAR_VARIABLE adder2}
[/event]
#define WEAPON_SPECIAL_MOONLIGHT
    [chance_to_hit]
        id=moonlight1
        name= _ "moonlight"
        description= _ "This attack would work only if there is fair weather and the moon is high in the sky"
        value=100
	[filter_self]
	    [filter_location]
		time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	    [/filter_location]
	    [and]
		[not]
		    ability=rain_aura1
		[/not]
	    [/and]
	    [and]
		[not]
		    [filter_adjacent]
		    	ability=rain_aura1
		    [/filter_adjacent]
		[/not]
	    [/and]
	    [and]
		[not]
		     ability=darknesscover
		[/not]
	    [/and]
	    [and]
		[not]
		    [filter_adjacent]
		    	ability=darknesscover
		    [/filter_adjacent]
		[/not]
	    [/and]
	    [and]
		[not]
		    ability=eternalnight
		[/not]
	    [/and]
	    [and]
		[not]
		    [filter_adjacent]
		    	ability=eternalnight
		    [/filter_adjacent]
		[/not]
	    [/and]
	[/filter_self]
    [/chance_to_hit]
    [chance_to_hit]
        id=moonlight2
        value=0
	[filter_self]
	    [not]
	    	[filter_location]
		    time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	    	[/filter_location]
	    [/not]
	    [or]
		ability=rain_aura1
	    [/or]
	    [or]
		[filter_adjacent]
		    ability=rain_aura1
		[/filter_adjacent]
	    [/or]
	    [or]
		ability=darknesscover
	    [/or]
	    [or]
		[filter_adjacent]
		    ability=darknesscover
		[/filter_adjacent]
	    [/or]
	    [or]
		ability=eternalnight
	    [/or]
	    [or]
		[filter_adjacent]
		    ability=eternalnight
		[/filter_adjacent]
	    [/or]
	[/filter_self]
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_GRAVITATION_COLLAPSE
    [damage]
        id=gravitationcollapse
        name= _ "gravitational collapse"
        description= _ "This attack inflicts damage to all units adjacent to attacker, instantly kills ones, who taken more than 25 points of damage. Didn't damage flying units at all.
ATTENTION! Do not use this attack where your allies may suffer"
        multiply=0
	[filter_opponent]
	    {IS_CAN_FLY}
	[/filter_opponent]
    [/damage]
#enddef
[event]
    id=collapse_in_attack
    name=attacker hits
    first_time_only=no
    [filter_attack]
	special=gravitationcollapse
    [/filter_attack]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=24
    [/variable]
    [then]
        [unstore_unit]
            variable=second_unit
            {COLOR_HARM}
            male_text= _ "CRASHED!"
	    female_text= _ "female^CRASHED!"
            find_vacant=no
    	[/unstore_unit]
    	[harm_unit]
	    [filter]
		x=$x2
		y=$y2
	    [/filter]
	    [filter_second]
		x=$x1
		y=$y1
	    [/filter_second]
	    amount=$second_unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=yes	    
       	[/harm_unit]
    [/then]
    [/if]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
	    [/filter_adjacent]
	    [and]
		[not]
	    	    {IS_CAN_FLY}
		[/not]
	    [/and]
	    [and]
		[not]
	   	    x=$x2
	   	    y=$y2
		[/not]
	    [/and]
	[/filter]
	variable=collapsed
	kill=no	
    [/store_unit]
    {FOREACH collapsed cd}
    	{VARIABLE cx1 $x1}
    	{VARIABLE cy1 $y1}
    	{VARIABLE cx2 $collapsed[$cd].x}
    	{VARIABLE cy2 $collapsed[$cd].y}
    	{VARIABLE basic 25}
    	{ALIGNMENT_MODIFIERS}   
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
		x=$collapsed[$cd].x
		y=$collapsed[$cd].y
	    [/filter]
	    [filter_second]
		x=$x1
		y=$y1
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=impact
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=yes
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=25
	[/variable]
	[and]
	    [variable]
	    	name=overall.harm_amount
	    	less_than=$collapsed[$cd].hitpoints
	    [/variable]	    
	[/and]
	[then]
            [unstore_unit]
           	variable=$collapsed[$cd]
            	{COLOR_HARM}
            	male_text= _ "CRASHED!"
	    	female_text= _ "female^CRASHED!"
            	find_vacant=no
    	    [/unstore_unit]
    	    [harm_unit]
	    	[filter]
		    x=$collapsed[$cd].x
		    y=$collapsed[$cd].y
	        [/filter]
	        [filter_second]
		    x=$x1
		    y=$y1
	    	[/filter_second]
	    	amount=$collapsed[$cd].hitpoints
	    	kill=yes
	    	fire_event=yes
	    	experience=yes	    
       	    [/harm_unit]    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
	{CLEAR_VARIABLE damagetotal}
	{CLEAR_VARIABLE overall}
    {NEXT cd}
    {CLEAR_VARIABLE collapsed}
[/event]
[event]
    id=collapse_in_defense
    name=defender hits
    first_time_only=no
    [filter_second_attack]
	special=gravitationcollapse
    [/filter_second_attack]
    [if]
    [variable]
	name=damage_inflicted
	greater_than=24
    [/variable]
    [then]
        [unstore_unit]
            variable=unit
            {COLOR_HARM}
            male_text= _ "CRASHED!"
	    female_text= _ "female^CRASHED!"
            find_vacant=no
    	[/unstore_unit]
    	[harm_unit]
	    [filter]
		x=$x1
		y=$y1
	    [/filter]
	    [filter_second]
		x=$x2
		y=$y2
	    [/filter_second]
	    amount=$unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=yes	    
       	[/harm_unit]
    [/then]
    [/if]
    [store_unit]
	[filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
	    [/filter_adjacent]
	    [and]
		[not]
	    	    {IS_CAN_FLY}
		[/not]
	    [/and]
	    [and]
		[not]
	   	    x=$x1
	   	    y=$y1
		[/not]
	    [/and]
	[/filter]
	variable=collapsed
	kill=no	
    [/store_unit]
    {FOREACH collapsed cd}
    	{VARIABLE cx1 $x2}
    	{VARIABLE cy1 $y2collapsed[$cd].y}
    	{VARIABLE cx2 $collapsed[$cd].x}
    	{VARIABLE cy2 $collapsed[$cd].y}
    	{VARIABLE basic 25}
    	{ALIGNMENT_MODIFIERS}   
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name}
    	[harm_unit]
	    [filter]
		x=$collapsed[$cd].x
		y=$collapsed[$cd].y
	    [/filter]
	    [filter_second]
		x=$x2
		y=$y2
	    [/filter_second]
	    amount=$damagetotal
	    damage_type=impact
	    alignment=$align
	    kill=yes
	    fire_event=yes
	    experience=yes
	    variable=overall
       	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=25
	[/variable]
	[and]
	    [variable]
	    	name=overall.harm_amount
	    	less_than=$collapsed[$cd].hitpoints
	    [/variable]	    
	[/and]
	[then]
            [unstore_unit]
           	variable=$collapsed[$cd]
            	{COLOR_HARM}
            	male_text= _ "CRASHED!"
	    	female_text= _ "female^CRASHED!"
            	find_vacant=no
    	    [/unstore_unit]
    	    [harm_unit]
	    	[filter]
		    x=$collapsed[$cd].x
		    y=$collapsed[$cd].y
	        [/filter]
	        [filter_second]
		    x=$x2
		    y=$y2
	    	[/filter_second]
	    	amount=$collapsed[$cd].hitpoints
	    	kill=yes
	    	fire_event=yes
	    	experience=yes	    
       	    [/harm_unit]    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
	{CLEAR_VARIABLE damagetotal}
	{CLEAR_VARIABLE overall}
    {NEXT cd}
    {CLEAR_VARIABLE collapsed}
[/event]
[event]
    id=clear_temporary_statuses1
    name=attack end
    first_time_only=no
    [filter]
	status=temporary
    [/filter]
    [set_variables]
	name=arr1
    [/set_variables]
    {VARIABLE n 0}
    {VARIABLE nn 0}
    {FOREACH unit.modifications.object uo}
	[if]
	    [variable]
		name=unit.modifications.object[$uo].effect[0].add
		equals="temporary"
	    [/variable]
	    [then]
		[set_variable]
		    name=nn
		    value=$uo
		[/set_variable]
		[set_variable]
		    name=nn
		    sub=$n
		[/set_variable]
		[set_variables]
		    name=arr1
		    mode=append
		    [value]
			code=$nn
		    [/value]
   		[/set_variables]
		[set_variable]
		    name=n
		    add=1
		[/set_variable]
	    [/then]
 	[/if]    
    {NEXT uo}
    {FOREACH arr1 quo}
	{CLEAR_VARIABLE unit.modifications.object[$arr1[$quo].code]}
    {NEXT quo}
    {CLEAR_VARIABLE arr1}
    {CLEAR_VARIABLE nn}
    {CLEAR_VARIABLE n}
    [unstore_unit]
	variable=unit
	find_vacant=no
    [/unstore_unit]
[/event]
[event]
    id=clear_temporary_statuses2
    name=attack end
    first_time_only=no
    [filter_second]
	status=temporary
    [/filter_second]
    [set_variables]
	name=arr2
    [/set_variables]
    {VARIABLE n 0}
    {VARIABLE nn 0}
    {FOREACH second_unit.modifications.object so}
	[if]
	    [variable]
		name=second_unit.modifications.object[$so].effect[0].add
		equals="temporary"
	    [/variable]
	    [then]
		[set_variable]
		    name=nn
		    value=$so
		[/set_variable]
		[set_variable]
		    name=nn
		    sub=$n
		[/set_variable]
		[set_variables]
		    name=arr2
		    mode=append
		    [value]
			code=$nn
		    [/value]
   		[/set_variables]
		[set_variable]
		    name=n
		    add=1
		[/set_variable]
	    [/then]
 	[/if]    
    {NEXT so}
    {FOREACH arr2 qso}
	{CLEAR_VARIABLE second_unit.modifications.object[$arr2[$qso].code]}
    {NEXT qso}
    {CLEAR_VARIABLE arr2}
    {CLEAR_VARIABLE nn}
    {CLEAR_VARIABLE n}
    [unstore_unit]
	variable=second_unit
	find_vacant=no
    [/unstore_unit]
[/event]
#define WEAPON_SPECIAL_RIGHTEOUS_LIGHT
    [dummy]
        id=righteouslight
        name= _ "righteous light"
        description= _ "This attack also damages all units adjacent to primary goal, not affects allies of attacker. Secondary goals have 50% chances to avoid attack, when primary goal has its usual defense. Only primary goal has opportunity to fight back"
    [/dummy]
#enddef
[event]
    id=masslight_in_attack
    name=attacker hits,attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=righteouslight
    [/filter_attack]
    [store_unit]
        [filter]
	    [filter_adjacent]
	   	x=$x2
	   	y=$y2
		is_enemy=no
	    [/filter_adjacent]
        [/filter]
        variable=rightfullydamaged
	kill=no
    [/store_unit]

    {FOREACH rightfullydamaged rd}
    [set_variable]
	name=tmp_luck
	rand=1..100
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	greater_than=50
    [/variable]
    [then]
    [harm_unit]
	[filter]
	   x=$rightfullydamaged[$rd].x
	   y=$rightfullydamaged[$rd].y
	[/filter]
	[filter_second]
	   x=$x1
	   y=$y1
	[/filter_second]
	amount=$weapon.damage
	damage_type=$weapon.type
	alignment=lawful
	kill=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
    [/then]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
    {NEXT rd}

    {CLEAR_VARIABLE rightfullydamaged}
[/event]
[event]
    id=masslight_in_defense
    name=defender hits,defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=righteouslight
    [/filter_second_attack]
    [store_unit]
        [filter]
	    [filter_adjacent]
	   	x=$x1
	   	y=$y1
		is_enemy=no
	    [/filter_adjacent]
        [/filter]
        variable=rightfullydamaged
	kill=no
    [/store_unit]

    {FOREACH rightfullydamaged rd}
    [set_variable]
	name=tmp_luck
	rand=1..100
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	greater_than=50
    [/variable]
    [then]
    [harm_unit]
	[filter]
	   x=$rightfullydamaged[$rd].x
	   y=$rightfullydamaged[$rd].y
	[/filter]
	[filter_second]
	   x=$x2
	   y=$y2
	[/filter_second]
	amount=$second_weapon.damage
	damage_type=$second_weapon.type
	alignment=lawful
	kill=yes
	fire_event=yes
	experience=yes	    
    [/harm_unit]
    [/then]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
    {NEXT rd}

    {CLEAR_VARIABLE rightfullydamaged}
[/event]
#define WEAPON_SPECIAL_NATURE_WRATH
    [dummy]
        id=naturewrath
        name= _ "nature wrath"
        description= _ "This attack also damages one random adjacent hex with each shoot.
ATTENTION! Do not use this attack where your allies may suffer"
    [/dummy]
#enddef
[event]
    id=naturewrath_in_attack
    name=attacker hits,attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
	special=naturewrath
    [/filter_attack]
    [set_variable]
	name=tmp_luck
	rand=1..6
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_direct "n"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_direct "ne"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_direct "nw"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=4
    [/variable]
    [then]
	{VARIABLE tmp_direct "s"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=5
    [/variable]
    [then]
	{VARIABLE tmp_direct "se"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=6
    [/variable]
    [then]
	{VARIABLE tmp_direct "sw"}
    [/then]
    [/if]
    [animate_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	flag=attack
	[primary_attack]
	    name=spell_302
	[/primary_attack]
	hits=yes
	[facing]
	    [filter_adjacent_location]
		[filter]
		    x=$x1
	    	    y=$y1	    
		[/filter]
		adjacent=$tmp_direct
	    [/filter_adjacent_location]
	[/facing]
    [/animate_unit]
    [if]
    [have_unit]
	[filter_adjacent]
	    x=$x1
	    y=$y1
	    adjacent=$tmp_direct
	[/filter_adjacent]	
    [/have_unit]
    [then]
	[store_unit]
	    [filter]
		[filter_adjacent]
	    	    x=$x1
	    	    y=$y1
	    	    adjacent=$tmp_direct
		[/filter_adjacent]
	    [/filter]
	    variable=victim
	    kill=no
	[/store_unit]
    	{VARIABLE tmp_res 1}
    	[if]
    	[have_unit]
	    x=$victim.x
	    y=$victim.y
	    [and]
		[filter_location]
		    {IS_TERRAIN_OPEN_WATER}
    	    	[/filter_location]			
	    [/and]
    	[/have_unit]
    	[then]
	    [set_variable]
		name=tmp_res
		multiply=1.2
	    [/set_variable]
	[/then]
	[/if]    
    	[if]
    	[have_unit]
	    x=$victim.x
	    y=$victim.y
	    [and]
		[filter_adjacent]
		    ability=rain_aura1
    	    	[/filter_adjacent]
		[or]
		    ability=rain_aura1
		[/or]			
	    [/and]
    	[/have_unit]
    	[then]
	    [set_variable]
		name=tmp_res
		multiply=1.25
	    [/set_variable]
	    [if]
	    [variable]
		name=weapon.type
		equals="fire"
	    [/variable]
	    [then]
	    	[set_variable]
		    name=tmp_res
		    multiply=1.25
	    	[/set_variable]		
	    [/then]
	    [/if]
	[/then]
	[/if]
    	{VARIABLE cx1 $x1}
    	{VARIABLE cy1 $y1}
    	{VARIABLE cx2 $victim.x}
    	{VARIABLE cy2 $victim.y}
    	{VARIABLE basic $weapon.damage}
    	{ALIGNMENT_MODIFIERS} 
	{CHOOSE_DEFAULT_ALIGNMENT $weapon.name}
    	[harm_unit]
	    [filter]
	    	x=$victim.x
	    	y=$victim.y	
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
  	    [/filter_second]
	    animate=defender
	    amount=$damagetotal
	    damage_type=$weapon.type
	    kill=no
	    alignment=$align
	    fire_event=yes
	    experience=no	  
	    resistance_multiplier=$tmp_res
	    variable=overall
	    delay=200
    	[/harm_unit]
	{VARIABLE ol $overall.harm_amount}
	{CLEAR_VARIABLE overall}
    	[harm_unit]
	    [filter]
	    	x=$victim.x
	    	y=$victim.y	
	    [/filter]
	    [filter_second]
	    	x=$x1
	    	y=$y1
  	    [/filter_second]
	    animate=no
	    amount=$damagetotal
	    damage_type=fire
	    kill=yes
	    alignment=$align
	    fire_event=yes
	    experience=no	  
	    resistance_multiplier=$tmp_res
	    variable=overall
    	[/harm_unit]
	[set_variable]
	    name=ol
	    add=$overall.harm_amount
	[/set_variable]
	[if]
	[variable]
	    name=ol
	    greater_than_equal_to=$victim.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x1
		    y=$y1
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$victim.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
	{CLEAR_VARIABLE damagetotal}
	{CLEAR_VARIABLE victim}
	{CLEAR_VARIABLE overall}
	{CLEAR_VARIABLE ol}
    [/then]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
    {CLEAR_VARIABLE tmp_direct}
    {CLEAR_VARIABLE tmp_res}
[/event]
[event]
    id=naturewrath_in_defense
    name=defender hits,defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
	special=naturewrath
    [/filter_second_attack]
    [set_variable]
	name=tmp_luck
	rand=1..6
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_direct "n"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_direct "ne"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_direct "nw"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=4
    [/variable]
    [then]
	{VARIABLE tmp_direct "s"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=5
    [/variable]
    [then]
	{VARIABLE tmp_direct "se"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=6
    [/variable]
    [then]
	{VARIABLE tmp_direct "sw"}
    [/then]
    [/if]
    [animate_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	flag=attack
	[primary_attack]
	    special=naturewrath
	[/primary_attack]
	hits=yes
	[facing]
	    [filter_adjacent_location]
		[filter]
		    x=$x2
	    	    y=$y2	    
		[/filter]
		adjacent=$tmp_direct
	    [/filter_adjacent_location]
	[/facing]
    [/animate_unit]
    [if]
    [have_unit]
	[filter_adjacent]
	    x=$x2
	    y=$y2
	    adjacent=$tmp_direct
	[/filter_adjacent]	
    [/have_unit]
    [then]
	[store_unit]
	    [filter]
		[filter_adjacent]
	    	    x=$x2
	    	    y=$y2
	    	    adjacent=$tmp_direct
		[/filter_adjacent]
	    [/filter]
	    variable=victim
	    kill=no
	[/store_unit]
    	{VARIABLE tmp_res 1}
    	[if]
    	[have_unit]
	    x=$victim.x
	    y=$victim.y
	    [and]
		[filter_location]
		    {IS_TERRAIN_OPEN_WATER}
    	    	[/filter_location]			
	    [/and]
    	[/have_unit]
    	[then]
	    [set_variable]
		name=tmp_res
		multiply=1.2
	    [/set_variable]
	[/then]
	[/if]    
    	[if]
    	[have_unit]
	    x=$victim.x
	    y=$victim.y
	    [and]
		[filter_adjacent]
		    ability=rain_aura1
    	    	[/filter_adjacent]
		[or]
		    ability=rain_aura1
		[/or]			
	    [/and]
    	[/have_unit]
    	[then]
	    [set_variable]
		name=tmp_res
		multiply=1.25
	    [/set_variable]
	    [if]
	    [variable]
		name=weapon.type
		equals="fire"
	    [/variable]
	    [then]
	    	[set_variable]
		    name=tmp_res
		    multiply=1.25
	    	[/set_variable]		
	    [/then]
	    [/if]
	[/then]
	[/if]
    	{VARIABLE cx1 $x2}
    	{VARIABLE cy1 $y2}
    	{VARIABLE cx2 $victim.x}
    	{VARIABLE cy2 $victim.y}
    	{VARIABLE basic $second_weapon.damage}
    	{ALIGNMENT_MODIFIERS}
	{CHOOSE_DEFAULT_ALIGNMENT $second_weapon.name} 
    	[harm_unit]
	    [filter]
	    	x=$victim.x
	    	y=$victim.y	
	    [/filter]
	    [filter_second]
	    	x=$x2
	    	y=$y2
  	    [/filter_second]
	    animate=no
	    amount=$damagetotal
	    alignment=$align
	    damage_type=$second_weapon.type
	    kill=yes
	    fire_event=yes
	    experience=no	  
	    resistance_multiplier=$tmp_res
	    variable=overall
    	[/harm_unit]
	[if]
	[variable]
	    name=overall.harm_amount
	    greater_than_equal_to=$victim.hitpoints
	[/variable]
	[then]
	    [object]
            	silent=yes
            	duration=forever

		[filter]
		    x=$x2
		    y=$y2
		[/filter]
			
		[effect]
            	    apply_to=experience
            	    increase=7
		    times=$victim.level
                [/effect]   	
	    [/object]	    
	[/then]
	[/if]
	{CLEAR_VARIABLE align}
	{CLEAR_VARIABLE damagetotal}
	{CLEAR_VARIABLE victim}
	{CLEAR_VARIABLE overall}
    [/then]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
    {CLEAR_VARIABLE tmp_direct}
    {CLEAR_VARIABLE tmp_res}
[/event]

#define WEAPON_SPECIAL_DEMON_PAKARAT_RAKAB    
    [attacks]
        id=pakarat_rakab
        name= _ "power of spirit"
        description= _ "Pakarat-rakab willingly helps his shamans in both offense and defense - he freezes the opponent on the distance from which no attack is possible. Opponent will be slowed and lose possibility to attack shaman at least once"
        multiply=0
	apply_to=opponent
    [/attacks]
    [slow]
        id=pakarat_rakab2
    [/slow]
    [chance_to_hit]
        id=pakarat_rakab3
	value=100
	apply_to=self
	cumulative=no
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_FREEZING
    [attacks]
        id=freezing
        name= _ "freezing"
        description= _ "Opponent will be slowed and lose possibility to attack at least once"
        multiply=0
	apply_to=opponent
    [/attacks]
    [slow]
        id=freezing2
    [/slow]
    [chance_to_hit]
        id=freezing3
	value=100
	apply_to=self
	cumulative=no
    [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_DEMON_RAGAT_ROH_KODJANG
    [dummy]
        id=ragat_roh_kodjang
        name= _ "power of spirit"
        description= _ "Ragat-roh-kodjang wouldn't fight instead of you, but he'll provide you weapon for which your opponent is most vulnerable"
    [/dummy]
#enddef
[event]
    id=ragat_roh_kodjang_attacks
    name=attack
    first_time_only=no
    [filter_attack]
	special=ragat_roh_kodjang
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.resistance.blade
	greater_than_equal_to=$second_unit.resistance.pierce
    [/variable]
    [and]
    	[variable]
	    name=second_unit.resistance.blade
	    greater_than_equal_to=$second_unit.resistance.impact
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "blade"}
    [/then]
    [/if]
    [if]
    [variable]
	name=second_unit.resistance.pierce
	greater_than_equal_to=$second_unit.resistance.blade
    [/variable]
    [and]
    	[variable]
	    name=second_unit.resistance.pierce
	    greater_than_equal_to=$second_unit.resistance.impact
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "pierce"}
    [/then]
    [/if]
    [if]
    [variable]
	name=second_unit.resistance.impact
	greater_than_equal_to=$second_unit.resistance.pierce
    [/variable]
    [and]
    	[variable]
	    name=second_unit.resistance.impact
	    greater_than_equal_to=$second_unit.resistance.blade
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "impact"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
        [/filter]

        [effect]
            apply_to=attack
	    special=ragat_roh_kodjang
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
[/event]
[event]
    id=ragat_roh_kodjang_protects
    name=attack
    first_time_only=no
    [filter_second_attack]
	special=ragat_roh_kodjang
    [/filter_second_attack]
    [if]
    [variable]
	name=unit.resistance.blade
	greater_than_equal_to=$unit.resistance.pierce
    [/variable]
    [and]
    	[variable]
	    name=unit.resistance.blade
	    greater_than_equal_to=$unit.resistance.impact
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "blade"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.resistance.pierce
	greater_than_equal_to=$unit.resistance.blade
    [/variable]
    [and]
    	[variable]
	    name=unit.resistance.pierce
	    greater_than_equal_to=$unit.resistance.impact
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "pierce"}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.resistance.impact
	greater_than_equal_to=$unit.resistance.pierce
    [/variable]
    [and]
    	[variable]
	    name=unit.resistance.impact
	    greater_than_equal_to=$unit.resistance.blade
    	[/variable]
    [/and]
    [then]
	{VARIABLE tmp_type "impact"}
    [/then]
    [/if]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=attack
	    special=ragat_roh_kodjang
            set_type=$tmp_type
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_type}
[/event]
#define WEAPON_SPECIAL_DEMON_SHISSAT
    [dummy]
        id=shissat
        name= _ "power of spirit"
        description= _ "Shissat is not at home right now, so she can't come and help you, but you always has her gift: all of your attacks have ''eternal poison'' special"
    [/dummy]
#enddef
#define WEAPON_SPECIAL_DEMON_SHUTA_RSAK_JONG
    [dummy]
        id=suta_rsak_jong
        name= _ "power of spirit"
        description= _ "Maybe Shuta-rsak-jong isn't very powerful god, but he gives you 5 gold coins everytime you use this attack!"
    [/dummy]
#enddef
[event]
    id=shuta_rsak_jong_attacks
    name=attacker hits,attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_attack]
        special=suta_rsak_jong
    [/filter_attack]
    [gold]
	amount=5
	side=$unit.side
    [/gold]
    [unstore_unit]
        variable=unit
        find_vacant=no
        text= _ "+5"
        red,green,blue=196,196,128
    [/unstore_unit]
[/event]
[event]
    id=shuta_rsak_jong_protects
    name=defender hits,defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter_second_attack]
        special=suta_rsak_jong
    [/filter_second_attack]
    [gold]
	amount=5
	side=$second_unit.side
    [/gold]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text= _ "+5"
        red,green,blue=196,196,128
    [/unstore_unit]
[/event]
#define WEAPON_SPECIAL_DEMON_HA_NA_JONG
    [dummy]
        id=ha_na_jong
        name= _ "power of spirit"
        description= _ "Ha-na-jong provides your powerful attack with very high accuracy, which distracts opponent when hits"
    [/dummy]
    [dummy]
        id=distraction
    [/dummy]
#enddef
#define WEAPON_SPECIAL_DEMON_RAND_OR_BUG
    [slow]
        id=rand_or_bug
        name= _ "power of spirit"
        description= _ "To honor Rand-or-bug, you should put everything on one strike. If you will hit, it'll make slowing, distraction and critical hit at the same time"
    [/slow]
    [dummy]
        id=distraction
    [/dummy]
    [dummy]
        id=critical hit
    [/dummy]
#enddef
#define WEAPON_SPECIAL_DEMON_WOO_PAMRAT_JONG
    [dummy]
        id=woo_pamrat_jong
        name= _ "order of life and death"
        description= _ "If your opponent has 20 or less hitpoints, it will die before it can dodge or counterattack. If unit itself has 20 or less hitpoints, it will die too. Otherwise attack wouldn't inflict any damage"
    [/dummy]
#enddef
[event]
    id=woo_pamrat_jong_kill_all
    name=attack
    first_time_only=no
    [filter_attack]
	special=woo_pamrat_jong
    [/filter_attack]
    [if]
    [variable]
	name=second_unit.hitpoints
	less_than=21
    [/variable]
    [then]
        [unstore_unit]
            variable=second_unit
            {COLOR_HARM}
            text= _ "IT'S TIME TO DIE!"
            find_vacant=no
    	[/unstore_unit]
    	[harm_unit]
	    [filter]
		x=$x2
		y=$y2
	    [/filter]
	    [filter_second]
		x=$x1
		y=$y1
	    [/filter_second]
	    amount=$unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=yes	    
       	[/harm_unit]
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.hitpoints
	less_than=21
    [/variable]
    [then]
        [unstore_unit]
            variable=unit
            {COLOR_HARM}
            text= _ "IT'S TIME TO DIE!"
            find_vacant=no
    	[/unstore_unit]
    	[harm_unit]
	    [filter]
		x=$x1
		y=$y1
	    [/filter]
	    amount=$unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=no	    
       	[/harm_unit]
    [/then]
    [/if]
[/event]
#define WEAPON_SPECIAL_DO_LIKE_ME TYPE
    [chance_to_hit]
        id=do_like_me_{TYPE}
        add=10
	[filter_self]
	    status=teaches
	[/filter_self]
    [/chance_to_hit]
#enddef
[event]
     id=strongman_attack_begins
     name=attack
     first_time_only=no
     [filter]
	 ability=barut
	 canrecruit=no
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=father,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     {VARIABLE number_of_hits 0}
[/event]
[event]
     id=strongman_hits
     name=attacker hits
     first_time_only=no
     [filter]
	 ability=barut
	 canrecruit=no
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=father,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [set_variable]
	name=number_of_hits
	add=1
     [/set_variable]
[/event]
[event]
     id=strongman_loses
     name=attack end
     first_time_only=no
     [filter]
	 ability=barut
	 canrecruit=no
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=father,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [if]
     [variable]
	name=number_of_hits
	equals=0
     [/variable]
     [then]
	[if]
	[have_unit]
	     ability=father
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	     [and]
	       	[filter_adjacent]
		    x=$x2
		    y=$y2
	     	[/filter_adjacent]
	     [/and]	
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=father
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]
	     	    [and]
	       	    	[filter_adjacent]
		     	    x=$x2
		    	    y=$y2
	     	    	[/filter_adjacent]
	     	    [/and]	
		[/filter]
		variable=chief
		kill=no
	     [/store_unit]
	     {VARIABLE chief.status.teaches yes}
	     [unstore_unit]
        	text= _ "IDIOT! Here's how it is done!"
        	red,green,blue=128,0,0
		variable=chief
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
 	     {FOREACH chief.attack att}
	        [if]
	    	[have_unit]
		    id=$chief.id
		    [has_attack]
		    	name=$chief.attack[$att].name
		    	type=$chief.attack[$att].type
		    	range=$chief.attack[$att].range
		    	special=do_like_me_1
		    [/has_attack]
	    	[/have_unit]
	    	[then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
	    	[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
	     {VARIABLE atstor $chief.attacks_left}
    	     [modify_unit]
		[filter]
		    id=$chief.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$chief.x
			y=$chief.y
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
    	     [modify_unit]
  		 [filter]
	    	    id=$chief.id
   		 [/filter]
  		 [status]
	    	    teaches=no
		 [/status]
		 attacks_left=$atstor
    	     [/modify_unit]
	     {CLEAR_VARIABLE atstor}
     	     {CLEAR_VARIABLE chief}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[else]
	[if]
	[have_unit]
	     ability=sovereign
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=sovereign
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]	
		[/filter]
		variable=emperor
		kill=no
	     [/store_unit]
	     [unstore_unit]
        	text= _ "IDIOT! Do this properly!"
        	red,green,blue=128,0,0
		variable=emperor
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
	     {FOREACH unit.attack att}
	        [if]
	     	[variable]
		    name=unit.attack[$att].range
		    equals=$weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].name
		   	equals=$weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].type
		   	equals=$weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
	     [modify_unit]
		[filter]
		    id=$unit.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$x1
			y=$y1
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
     	     {CLEAR_VARIABLE emperor}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[/if]
	[/else]
	[/if]
     [/then]
     [/if]
     {CLEAR_VARIABLE number_of_hits}
[/event]
[event]
     id=goblin_attack_begins
     name=attack
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=older brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [filter_attack]
	special=goblin
     [/filter_attack]
     {VARIABLE number_of_hits 0}
[/event]
[event]
     id=goblin_hits
     name=attacker hits
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=older brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [filter_attack]
	special=goblin
     [/filter_attack]
     [set_variable]
	name=number_of_hits
	add=1
     [/set_variable]
[/event]
[event]
     id=goblin_loses
     name=attack end
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=older brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [filter_attack]
	special=goblin
     [/filter_attack]
     [if]
     [variable]
	name=number_of_hits
	equals=0
     [/variable]
     [then]
	[if]
	[have_unit]
	     ability=older brother
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	     [and]
	       	[filter_adjacent]
		    x=$x2
		    y=$y2
	     	[/filter_adjacent]
	     [/and]	
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=older brother
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]
	     	    [and]
	       	    	[filter_adjacent]
		     	    x=$x2
		    	    y=$y2
	     	    	[/filter_adjacent]
	     	    [/and]	
		[/filter]
		variable=chief
		kill=no
	     [/store_unit]
	     {VARIABLE chief.status.teaches yes}
	     [unstore_unit]
        	text= _ "IDIOT! Here's how it is done!"
        	red,green,blue=128,0,0
		variable=chief
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
 	     {FOREACH chief.attack att}
	        [if]
		[not]
		    [variable]
		    	name=weapon.type
		    	equals="fire"
		    [/variable]
		[/not]
		[and]
	    	    [have_unit]
		    	id=$chief.id
		    	[has_attack]
		     	    name=$chief.attack[$att].name
		    	    type=$chief.attack[$att].type
		    	    range=$chief.attack[$att].range
		    	    special=do_like_me_2
		        [/has_attack]
	    	    [/have_unit]
		[/and]
		[or]
	    	    [have_unit]
		    	id=$chief.id
		    	[has_attack]
		     	    name=$chief.attack[$att].name
		    	    type=$chief.attack[$att].type
		    	    range=$chief.attack[$att].range
		    	    special=do_like_me_3
		        [/has_attack]
	    	    [/have_unit]		     
		[/or]
	    	[then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
	    	[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
	     {VARIABLE atstor $chief.attacks_left}
    	     [modify_unit]
		[filter]
		    id=$chief.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$chief.x
			y=$chief.y
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
    	     [modify_unit]
  		 [filter]
	    	    id=$chief.id
   		 [/filter]
  		 [status]
	    	    teaches=no
		 [/status]
		 attacks_left=$atstor
    	     [/modify_unit]
	     {CLEAR_VARIABLE atstor}
     	     {CLEAR_VARIABLE chief}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[else]
	[if]
	[have_unit]
	     ability=sovereign
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=sovereign
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]	
		[/filter]
		variable=emperor
		kill=no
	     [/store_unit]
	     [unstore_unit]
        	text= _ "IDIOT! Do this properly!"
        	red,green,blue=128,0,0
		variable=emperor
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
	     {FOREACH unit.attack att}
	        [if]
	     	[variable]
		    name=unit.attack[$att].range
		    equals=$weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].name
		   	equals=$weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].type
		   	equals=$weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
    	     [modify_unit]
		[filter]
		    id=$unit.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$x1
			y=$y1
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
     	     {CLEAR_VARIABLE emperor}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[/if]
	[/else]
	[/if]
     [/then]
     [/if]
     {CLEAR_VARIABLE number_of_hits}
[/event]
[event]
     id=weakling_attack_begins
     name=attack
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=younger brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
	 [has_attack]
	     special=kirut
	 [/has_attack]
     [/filter]
     {VARIABLE number_of_hits 0}
[/event]
[event]
     id=weakling_hits
     name=attacker hits
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=younger brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
	 [has_attack]
	     special=kirut
	 [/has_attack]
     [/filter]
     [set_variable]
	name=number_of_hits
	add=1
     [/set_variable]
[/event]
[event]
     id=weakling_loses
     name=attack end
     first_time_only=no
     [filter]
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=younger brother,sovereign
	     is_enemy=no
	 [/filter_adjacent]
	 [has_attack]
	     special=kirut
	 [/has_attack]
     [/filter]
     [if]
     [variable]
	name=number_of_hits
	equals=0
     [/variable]
     [then]
	[if]
	[have_unit]
	     ability=younger brother
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	     [and]
	       	[filter_adjacent]
		    x=$x2
		    y=$y2
	     	[/filter_adjacent]
	     [/and]
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=weapon.range
	     equals="ranged"
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=younger brother
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]
	     	    [and]
	       	    	[filter_adjacent]
		     	    x=$x2
		    	    y=$y2
	     	    	[/filter_adjacent]
	     	    [/and]
		[/filter]
		variable=chief
		kill=no
	     [/store_unit]
	     {VARIABLE chief.status.teaches yes}
	     [unstore_unit]
        	text= _ "IDIOT! Here's how it is done!"
        	red,green,blue=128,0,0
		variable=chief
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
 	     {FOREACH chief.attack att}
	        [if]
	    	[not]
		    [variable]
		     	name=weapon.type
		    	equals="blade"
		    [/variable]
		[/not]
		[and]
	    	    [have_unit]
		    	id=$chief.id
		    	[has_attack]
		     	    name=$chief.attack[$att].name
		    	    type=$chief.attack[$att].type
		    	    range=ranged
		    	    special=do_like_me_5
		        [/has_attack]
	    	    [/have_unit]
		[/and]
		[or]
	    	    [have_unit]
		    	id=$chief.id
		    	[has_attack]
		     	    name=$chief.attack[$att].name
		    	    type=$chief.attack[$att].type
		    	    range=ranged
		    	    special=do_like_me_4
		        [/has_attack]
	    	    [/have_unit]
		[/or]
	    	[then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
	    	[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
	     {VARIABLE atstor $chief.attacks_left}
    	     [modify_unit]
		[filter]
		    id=$chief.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$chief.x
			y=$chief.y
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
    	     [modify_unit]
  		 [filter]
	    	    id=$chief.id
   		 [/filter]
  		 [status]
	    	    teaches=no
		 [/status]
		 attacks_left=$atstor
    	     [/modify_unit]
	     {CLEAR_VARIABLE atstor}
     	     {CLEAR_VARIABLE chief}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[else]
	[if]
	[have_unit]
	     ability=sovereign
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=sovereign
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]	
		[/filter]
		variable=emperor
		kill=no
	     [/store_unit]
	     [unstore_unit]
        	text= _ "IDIOT! Do this properly!"
        	red,green,blue=128,0,0
		variable=emperor
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
	     {FOREACH unit.attack att}
	        [if]
	     	[variable]
		    name=unit.attack[$att].range
		    equals=$weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].name
		   	equals=$weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].type
		   	equals=$weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
    	     [modify_unit]
		[filter]
		    id=$unit.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$x1
			y=$y1
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
     	     {CLEAR_VARIABLE emperor}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[/if]
	[/else]
	[/if]
     [/then]
     [/if]
     {CLEAR_VARIABLE number_of_hits}
[/event]
[event]
     id=troll_attack_begins
     name=attack
     first_time_only=no
     [filter]
	 race=SA_troll
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     {VARIABLE number_of_hits 0}
[/event]
[event]
     id=troll_hits
     name=attacker hits
     first_time_only=no
     [filter]
	 race=SA_troll
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [set_variable]
	name=number_of_hits
	add=1
     [/set_variable]
[/event]
[event]
     id=troll_loses
     name=attack end
     first_time_only=no
     [filter]
	 race=SA_troll
	 [filter_adjacent]
	     formula=($this_unit.level > $other_unit.level)
	     ability=sovereign
	     is_enemy=no
	 [/filter_adjacent]
     [/filter]
     [if]
     [variable]
	name=number_of_hits
	equals=0
     [/variable]
     [then]
	[if]
	[have_unit]
	     ability=sovereign
	     [filter_adjacent]
		x=$x1
		y=$y1
	     	formula=($this_unit.level < $other_unit.level)
		is_enemy=no
	     [/filter_adjacent]
	[/have_unit]
	[and]
	[variable]
	     name=unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[and]
	[variable]
	     name=second_unit.hitpoints
	     greater_than=0
	[/variable]
	[/and]
	[then]
	     [store_unit]
		[filter]
	     	    ability=sovereign
	     	    [filter_adjacent]
			x=$x1
			y=$y1
	     		formula=($this_unit.level < $other_unit.level)
			is_enemy=no
	       	    [/filter_adjacent]
		[/filter]
		variable=emperor
		kill=no
	     [/store_unit]
	     [unstore_unit]
        	text= _ "IDIOT! Do this properly!"
        	red,green,blue=128,0,0
		variable=emperor
		find_vacant=no
	     [/unstore_unit]
	     {VARIABLE w 1}
	     {FOREACH unit.attack att}
	        [if]
	     	[variable]
		    name=unit.attack[$att].range
		    equals=$weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].name
		   	equals=$weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=unit.attack[$att].type
		   	equals=$weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w $att}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att}
    	     {VARIABLE w2 "xyz"}
    	     {FOREACH second_unit.attack att2}
	        [if]
	     	[variable]
		    name=second_unit.attack[$att2].range
		    equals=$second_weapon.range
	        [/variable]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].name
		   	equals=$second_weapon.name
	            [/variable]
		[/and]
		[and]
	     	    [variable]
		    	name=second_unit.attack[$att2].type
		   	equals=$second_weapon.type
	            [/variable]
		[/and]
	        [then]
		    {VARIABLE w2 $att2}
		    [break]
		    [/break]
	    	[/then]
		[/if]
    	     {NEXT att2}
    	     [modify_unit]
		[filter]
		    id=$unit.id
		[/filter]
		attacks_left=1
    	     [/modify_unit]
    	     [do_command]
		[attack]
	    	    [source]
			x=$x1
			y=$y1
	    	    [/source]
	    	    [destination]
			x=$x2
			y=$y2
	    	    [/destination]
	    	    weapon=$w
	    	    defender_weapon=$w2
		[/attack]
    	     [/do_command]
     	     {CLEAR_VARIABLE emperor}
    	     {CLEAR_VARIABLE w}
    	     {CLEAR_VARIABLE w2}
    	     {CLEAR_VARIABLE att}
    	     {CLEAR_VARIABLE att2}
	[/then]
	[/if]
     [/then]
     [/if]
     {CLEAR_VARIABLE number_of_hits}
[/event]
[event]
     id=firstlevel_attack_begins
     name=attack
     first_time_only=no
     [filter]
	 level=0-1
	 [filter_adjacent]
	     ability=execution
	     is_enemy=no
	 [/filter_adjacent]
	 [not]
	     canrecruit=yes
	     [or]
		race=SA_undead,SA_mechanical,SA_monster,SA_bat,SA_spirit
	     [/or]
	 [/not]
     [/filter]
     {VARIABLE number_of_hits 0}
[/event]
[event]
     id=firstlevel_hits
     name=attacker hits
     first_time_only=no
     [filter]
	 level=0-1
	 [filter_adjacent]
	     ability=execution
	     is_enemy=no
	 [/filter_adjacent]
	 [not]
	     canrecruit=yes
	     [or]
		race=SA_undead,SA_mechanical,SA_monster,SA_bat,SA_spirit
	     [/or]
	 [/not]
     [/filter]
     [set_variable]
	name=number_of_hits
	add=1
     [/set_variable]
[/event]
[event]
     id=firstlevel_loses
     name=attack end
     first_time_only=no
     [filter]
	 level=0-1
	 [filter_adjacent]
	     ability=execution
	     is_enemy=no
	 [/filter_adjacent]
	 [not]
	     canrecruit=yes
	     [or]
		race=SA_undead,SA_mechanical,SA_monster,SA_bat,SA_spirit
	     [/or]
	 [/not]
     [/filter]
     [if]
     [variable]
	name=number_of_hits
	equals=0
     [/variable]
     [then]
	[store_unit]
	    [filter]
		ability=execution
	 	[filter_adjacent]
	       	    x=$x1
	    	    y=$y1
		    is_enemy=no
	 	[/filter_adjacent]
	    [/filter]
	    variable=chief
	    kill=no
	[/store_unit]
	[store_unit]
	    [filter]
	 	[filter_adjacent]
	       	    x=$x1
	    	    y=$y1
		    is_enemy=no
	 	[/filter_adjacent]
	 	[not]
	    	    canrecruit=yes
	     	    [or]
			race=SA_undead,SA_mechanical,SA_monster,SA_bat,SA_spirit
	     	    [/or]
		    [or]
			ability=execution
		    [/or]
	 	[/not]
	    [/filter]
	    variable=allies
	    kill=no
	[/store_unit]
	[unstore_unit]
	    variable=chief
	    find_vacant=no
	    text=_"DIE, WEAKLING!"
	    {COLOR_HARM}
	[/unstore_unit]
    	[harm_unit]
	    [filter]
	    	x=$x1
	    	y=$y1
	    [/filter]
	    [filter_second]
	 	x=$chief.x
		y=$chief.y
	    [/filter_second]
	    [secondary_attack]
	    	name=sword
	    [/secondary_attack]
	    amount=$second_unit.hitpoints
	    kill=yes
	    fire_event=yes
	    experience=no
        [/harm_unit]	 
	{FOREACH allies fa}
	    [unstore_unit]
	    	variable=allies[$fa]
	    	find_vacant=no
	    	text=_"!!"
	    	{COLOR_HEAL}
	    [/unstore_unit]
	    [object]
        	silent=yes
        	duration=turn

        	[filter]
           	    id=$allies[$fa].id
        	[/filter]

        	[effect]
           	    apply_to=attack
		    [not]
			special=magical
			[or]
			    special=absolute
			    [or]
				special=absolute defense
				[or]
				    special=inaccurate
				[/or]
			    [/or]
			[/or]
		    [/not]
           	    increase_accuracy=10
        	[/effect]
    	    [/object]  
	{NEXT fa}
    [/then]
    [/if]
[/event]
[event]
    id=fireghost_defends
    name=attacker hits
    first_time_only=no
    [filter_attack]
	type=fire
    [/filter_attack]
    [filter_second]
	ability=fireghost
    [/filter_second]
    [heal_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=14
    [/heal_unit]  
[/event]
[event]
    id=fireghost_attacks
    name=defender hits
    first_time_only=no
    [filter]
	ability=fireghost
    [/filter]
    [filter_second_attack]
	type=fire
    [/filter_second_attack]
    [heal_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=14
    [/heal_unit]
[/event]
[event]
    id=coldghost_defends
    name=attacker hits
    first_time_only=no
    [filter_attack]
	type=cold
    [/filter_attack]
    [filter_second]
	ability=coldghost
    [/filter_second]
    [heal_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=14
    [/heal_unit]  
[/event]
[event]
    id=coldghost_attacks
    name=defender hits
    first_time_only=no
    [filter]
	ability=coldghost
    [/filter]
    [filter_second_attack]
	type=cold
    [/filter_second_attack]
    [heal_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=14
    [/heal_unit]
[/event]
[event]
    id=darkghost_defends
    name=attacker hits
    first_time_only=no
    [filter_attack]
	type=arcane
    [/filter_attack]
    [filter_second]
	ability=darkghost
    [/filter_second]
    [heal_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=14
    [/heal_unit]  
[/event]
[event]
    id=darkghost_attacks
    name=defender hits
    first_time_only=no
    [filter]
	ability=darkghost
    [/filter]
    [filter_second_attack]
	type=arcane
    [/filter_second_attack]
    [heal_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=14
    [/heal_unit]
[/event]
[event]
    id=teasingghost_defends
    name=attacker misses
    first_time_only=no
    [filter]
	[not]
	    status=disabled
	[/not]    
    [/filter]
    [filter_second]
	ability=teasingghost
    [/filter_second]
    [heal_unit]
	[filter]
	    x=$x2
	    y=$y2
	[/filter]
	amount=7
    [/heal_unit]  
[/event]
[event]
    id=teasingghost_attacks
    name=defender misses
    first_time_only=no
    [filter_second]
	[not]
	    status=disabled
	[/not]    
    [/filter_second]
    [filter]
	ability=teasingghost
    [/filter]
    [heal_unit]
	[filter]
	    x=$x1
	    y=$y1
	[/filter]
	amount=7
    [/heal_unit]
[/event]
[event]
    id=all_my_enemies_serves_me
    name=die
    first_time_only=no

    [filter]
        canrecruit=yes
	[not]
            status=unplagueable
        [/not]
    [/filter]
    [filter_second]
        canrecruit=yes
	[and]
	    trait=undead leader
	[/and]
    [/filter_second]
    [if]
    [variable]
	name=unit.level
	equals=1
    [/variable]
    [then]
	{VARIABLE tmp_type (Undead Skeleton Warrior)}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.level
	equals=2
    [/variable]
    [then]
	{VARIABLE tmp_type (Undead Revenant)}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.level
	equals=3
    [/variable]
    [then]
	{VARIABLE tmp_type (Undead Death Knight)}
    [/then]
    [/if]
    [if]
    [variable]
	name=unit.level
	equals=4
    [/variable]
    [then]
	{VARIABLE tmp_type (Undead Dead King)}
    [/then]
    [/if]
    [unit]
	type=$tmp_type
	side=$second_unit.side
	x=$x1
	y=$y1
	to_variable=plagued
    [/unit]
    [unstore_unit]
	variable=plagued
	find_vacant=no
        text= _ "all my enemies serves me"
        red,green,blue=64,64,64
    [/unstore_unit]
    {CLEAR_VARIABLE plagued}
    {CLEAR_VARIABLE tmp_type}
[/event]

[event]
    id=villains
    name=die
    first_time_only=no

    [filter]
	[not]
            race=SA_undead,SA_mechanical,SA_bat,SA_monster,SA_spirit
        [/not]
	[and]
	    [not]
		ability=criminal_authority
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	trait=vile
	[not]
	    x=$x1
	    y=$y1
	[/not]
    [/filter_second]
    [if]
    [variable]
	name=unit.upkeep
	equals="full"
    [/variable]
    [then]
	[if]
	[variable]
	    name=second_unit.level
	    less_than=3
	[/variable]
	[and]
	    [variable]
	    	name=second_unit.race
	    	equals=SA_human
	    [/variable]
	    [and]
		[have_unit]
		    ability=mafiosi1
		    [filter_adjacent]
			x=$x2
			y=$y2
			is_enemy=no
		    [/filter_adjacent]
		[/have_unit]
		[or]
		    [have_unit]
		    	ability=cleaner
		    	x=$x2
		    	y=$y2
		    [/have_unit]		    
		[/or]
	    [/and]
	[/and]
	[or]
	[variable]
	    name=second_unit.level
	    less_than=4
	[/variable]
	[and]
	    [variable]
	    	name=second_unit.race
	    	equals=SA_human
	    [/variable]
	    [and]
		[have_unit]
		    ability=mafiosi2
		    [filter_adjacent]
			x=$x2
			y=$y2
			is_enemy=no
		    [/filter_adjacent]
		[/have_unit]
		[or]
		    [have_unit]
		    	ability=cleaner
		    	x=$x2
		    	y=$y2
		    [/have_unit]		    
		[/or]
	    [/and]
	[/and]	
	[/or]
	[then]
	    [set_variable]
		name=unit.level
		multiply=2
	    [/set_variable]
	[/then]
	[else]
	[/else]
	[/if]
	[if]
	[have_unit]
	    ability=robber doctor
	    [filter_adjacent]
		x=$second_unit.x
		y=$second_unit.y
		is_enemy=no
	    [/filter_adjacent]
	[/have_unit]
	[and]
	    [variable]
	    	name=second_unit.hitpoints
		less_than=$second_unit.max_hitpoints
	    [/variable]
	[/and]
	[then]
    	    [unstore_unit]
	    	variable=second_unit
	    	find_vacant=no
            	male_text= _ "Robbed by doctors!"
		female_text= _ "female^Robbed by doctors!"
            	{COLOR_HEAL}
    	    [/unstore_unit]
	    {VARIABLE am $unit.level}
	    [set_variable]
		name=am
		multiply=8
	    [/set_variable]	    
	    [heal_unit]
		[filter]
	    	    x=$second_unit.x
		    y=$second_unit.y
		[/filter]
		[filter_second]
	    	    ability=robber doctor
	    	    [filter_adjacent]
			x=$second_unit.x
			y=$second_unit.y
			is_enemy=no
	            [/filter_adjacent]
		[/filter_second]
		amount=$am
    	    [/heal_unit]  
	    {CLEAR_VARIABLE am}
	[/then]
	[else]
	    [gold]
	    	side=$second_unit.side
	    	amount=$unit.level
	    [/gold]
    	    [unstore_unit]
	    	variable=second_unit
	    	find_vacant=no
            	text= _ "+$unit.level"
            	red,green,blue=192,192,128
    	    [/unstore_unit]
	[/else]
	[/if]
    [/then]
    [/if]
[/event]
[event]
    id=villains2
    name=die
    first_time_only=no

    [filter]
	trait=wealthy
	[and]
	    [not]
		ability=criminal_authority
	    [/not]
	[/and]
    [/filter]
    [filter_second]
	trait=vile
    [/filter_second]
    [if]
	[variable]
	    name=second_unit.level
	    less_than=3
	[/variable]
	[and]
	    [variable]
	    	name=second_unit.race
	    	equals=SA_human
	    [/variable]
	    [and]
		[have_unit]
		    ability=mafiosi1
		    [filter_adjacent]
			x=$x2
			y=$y2
			is_enemy=no
		    [/filter_adjacent]
		[/have_unit]
		[or]
		    [have_unit]
		    	ability=cleaner
		    	x=$x2
		    	y=$y2
		    [/have_unit]		    
		[/or]
	    [/and]
	[/and]
	[or]
	[variable]
	    name=second_unit.level
	    less_than=4
	[/variable]
	[and]
	    [variable]
	    	name=second_unit.race
	    	equals=SA_human
	    [/variable]
	    [and]
		[have_unit]
		    ability=mafiosi2
		    [filter_adjacent]
			x=$x2
			y=$y2
			is_enemy=no
		    [/filter_adjacent]
		[/have_unit]
		[or]
		    [have_unit]
		    	ability=cleaner
		    	x=$x2
		    	y=$y2
		    [/have_unit]		    
		[/or]
	    [/and]
	[/and]	
	[/or]
	[then]
	    [gold]
		side=$second_unit.side
		amount=20
    	    [/gold]
    	    [if]
            [variable]
            	name=second_unit.gender
            	equals=female
            [/variable]

            [then]
            	[set_variable]
                    name=tmp_robber_text
                    value= _ "female^hit the jackpot! +20!"
            	[/set_variable]
            [/then]

            [else]
            	[set_variable]
                    name=tmp_robber_text
                    value= _ "hit the jackpot! +20!"
            	[/set_variable]
            [/else]
    	    [/if]
	[/then]
	[else]
	    [gold]
		side=$second_unit.side
		amount=10
    	    [/gold]
    	    [if]
            [variable]
            	name=second_unit.gender
            	equals=female
            [/variable]

            [then]
            	[set_variable]
                    name=tmp_robber_text
                    value= _ "female^hit the jackpot! +10!"
            	[/set_variable]
            [/then]

            [else]
            	[set_variable]
                    name=tmp_robber_text
                    value= _ "hit the jackpot! +10!"
            	[/set_variable]
            [/else]
    	    [/if]
	[/else]
    [/if]
    [unstore_unit]
	variable=second_unit
	find_vacant=no
        text=$tmp_robber_text
        red,green,blue=192,192,128
    [/unstore_unit]
    {CLEAR_VARIABLE tmp_robber_text}
[/event]
{~add-ons/Silver_Age/utils/spells.cfg}
[event]
    id=trolling_begin
    name=attack
    first_time_only=no
    [filter]
	{IS_MAGE}
    [/filter]
    [filter_second]
	ability=trolling
    [/filter_second]
    [set_variables]
	name=reserve_unit
	to_variable=second_unit
    [/set_variables]
    [set_variables]
     	name=spellname
        [split]
           list=$weapon.name
           key=n
           separator=_
        [/split]
    [/set_variables]
    [if]
    [variable]
        name=spellname[0].n
        equals="spell"
    [/variable]
    [and]
	[not]
            [variable]
	    	name=spellname[1].n
	    	equals=113
	    [/variable]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=117
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=305
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=323
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=335
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=336
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=402
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=405
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=406
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=409
	    	[/variable]
	    [/or]
	    [or]
            	[variable]
	    	    name=spellname[1].n
	     	    equals=410
	    	[/variable]
	    [/or]
	[/not]
    [/and]
    [then]
        {GIVE_SPELL $second_unit.id $spellname[1].n}
        [store_unit]
	    [filter]
		id=$second_unit.id
	    [/filter]
	    variable=troll
	    kill=no
        [/store_unit]
        {VARIABLE w 0}
        {VARIABLE w1 0}
        {FOREACH troll.attack as}
            [if]
            [variable]
                name=troll.attack[$as].name
                equals="spell_$spellname[1].n"
            [/variable]
            [then]
                {VARIABLE w $as}
            [/then]
            [/if]
            [if]
            [variable]
                name=troll.attack[$as].name
                equals="improvisation"
            [/variable]
            [then]
                {VARIABLE w1 $as}
                {VARIABLE w $as}
            [/then]
            [/if]
        {NEXT as}
        {CLEAR_VARIABLE second_unit.attack[$w]}
        [set_variables]
	    name=second_unit.attack[$w1]
	    to_variable=troll.attack[$w]
	[/set_variables]
        [unstore_unit]
            variable=second_unit
            find_vacant=no
            text=_"TROLLING!"
            red, green, blue=128,128,128
        [/unstore_unit]
     [/then]
     [/if]
     {CLEAR_VARIABLE troll}
     {CLEAR_VARIABLE w}
     {CLEAR_VARIABLE w1}
[/event]
[event]
    name=prerecruit
    first_time_only=no
    [filter]
	type=Robber,Robber Mercenary,Robber Dog of War
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{APPLY_TO_VARIATION "axe"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{APPLY_TO_VARIATION "club"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{APPLY_TO_VARIATION "spear"}
    [/then]
    [/if]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=prerecruit
    first_time_only=no
    [filter]
	type=Robber Poacher
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{APPLY_TO_VARIATION "hunter"}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{APPLY_TO_VARIATION "fisher"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{APPLY_TO_VARIATION "moonshiner"}
    [/then]
    [/if]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=prerecruit
    first_time_only=no
    [filter]
	type=Tribes Raider
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..5
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=5
    [/variable]
    [then]
	[unit]
            type=Tribes Raider
            generate_name=yes
	    gender=female
            side=$unit.side
	    x=$unit.x
	    y=$unit.y
            variation=female
	    overwrite=yes
	    animate=yes
	    moves=0
        [/unit]
    [/then]
    [/if]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
      name=prerecruit
      first_time_only=no
      [filter]
          type=Tribes Mech, Tribes Rock Caster, Tribes BOOM Caster, Tribes Launcher, Tribes Fire Mech, Tribes Streamy Mech
      [/filter]
      [unit]
          type=Tribes Raider
          generate_name=yes
          side=$unit.side
          to_variable=gob1
      [/unit]
      [unit]
          type=Tribes Raider
          generate_name=yes
          side=$unit.side
          to_variable=gob2
      [/unit]
      {MODIFY_UNIT x,y=$x1,$y1 name _"$gob1.name|&$gob2.name"}
      {CLEAR_VARIABLE gob1}
      {CLEAR_VARIABLE gob2}
[/event]
[event]
      name=prerecruit
      first_time_only=no
      [filter]
          type=Tribes Tachanka
      [/filter]
      [unit]
          type=Tribes Raider
          generate_name=yes
          side=$unit.side
          to_variable=gob
      [/unit]
      {MODIFY_UNIT x,y=$x1,$y1 name $gob.name}
      {CLEAR_VARIABLE gob}
[/event]
[event]
     name=pre advance
     first_time_only=no
     [filter]
         type=Monster Crow Flock
     [/filter]
     [unit]
         type=$unit.type
         side=$unit.side
         x=$unit.x
         y=$unit.y
         moves=0
	 random_traits=yes
	 passable=yes
     [/unit]
[/event]
[event]
     name=post advance
     first_time_only=no
     [filter]
         type=Monster Crow Flock
     [/filter]
     {MODIFY_UNIT x,y=$x1,$y1 name _""}
[/event]
[event]
     name=post advance
     first_time_only=no
     [filter]
         type=Tribes Tachanka
     [/filter]
     [set_variables]
         name=goblins
         [split]
             list=$unit.name
             key=name
             separator=&
         [/split]
     [/set_variables]
     {MODIFY_UNIT x,y=$x1,$y1 name $goblins[0].name}
     [unit]
         type=$unit.type
         side=$unit.side
         x=$unit.x
         y=$unit.y
         moves=0
         name=$goblins[1].name
	 passable=yes
     [/unit]
     {CLEAR_VARIABLE goblins}
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Undead Poltergeist
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..7
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [or]
	[have_unit]
	    x=$x1
	    y=$y1
	    trait=fire ghost
	[/have_unit]
    [/or]
    [then]
	{APPLY_TO_VARIATION "fire"}
	{VARIABLE tmp_luck 1}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{APPLY_TO_VARIATION "fire"}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [or]
	[have_unit]
	    x=$x1
	    y=$y1
	    trait=cold ghost
	[/have_unit]
    [/or]
    [then]
	{APPLY_TO_VARIATION "cold"}
	{VARIABLE tmp_luck 3}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=4
    [/variable]
    [then]
	{APPLY_TO_VARIATION "cold"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=5
    [/variable]
    [or]
	[have_unit]
	    x=$x1
	    y=$y1
	    trait=dark ghost
	[/have_unit]
    [/or]
    [then]
	{APPLY_TO_VARIATION "dark"}
	{VARIABLE tmp_luck 5}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=6
    [/variable]
    [then]
	{APPLY_TO_VARIATION "dark"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=7
    [/variable]
    [or]
	[have_unit]
	    x=$x1
	    y=$y1
	    trait=teasing ghost
	[/have_unit]
    [/or]
    [then]
	{VARIABLE tmp_luck 7}	
	{APPLY_TO_VARIATION "geisha"}
	[modify_unit]
	     [filter]
	     	id=$unit.id
	     [/filter]
	     gender=female
	[/modify_unit]
    [/then]
    [/if]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
	type=Undead Banshee
    [/filter]
    [modify_unit]
	[filter]
	   id=$unit.id
	[/filter]
	gender=female
    [/modify_unit]
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Robber Cripple
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..3
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	{APPLY_TO_VARIATION "one-handed"}	
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	{APPLY_TO_VARIATION "one-legged"}
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	{APPLY_TO_VARIATION "blind"}
    [/then]
    [/if]
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Robber Fugitive Mage Temp
    [/filter]
    [set_variable]
	name=tmp_luck
	rand=1..5
    [/set_variable]
    [if]
    [variable]
	name=tmp_luck
	equals=1
    [/variable]
    [then]
	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Robber Fugitive Mage Fake Fireball
    	[/transform_unit]
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=2
    [/variable]
    [then]
	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Robber Fugitive Mage Fake Firemissiles
    	[/transform_unit]
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=3
    [/variable]
    [then]
	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Robber Fugitive Mage Fake Waterball
    	[/transform_unit]
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=4
    [/variable]
    [then]
	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Robber Fugitive Mage Fake Chillwave
    	[/transform_unit]
    [/then]
    [/if]
    [if]
    [variable]
	name=tmp_luck
	equals=5
    [/variable]
    [then]
	[transform_unit]
	    x=$x1
	    y=$y1
	    transform_to=Robber Fugitive Mage Fake Flash
    	[/transform_unit]
    [/then]
    [/if]
    {ADVANCE_UNIT (x,y=$x1,$y1) ()}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Robber Ogre Raider
	trait=intelligent_double
    [/filter]
    [object]
        silent=yes
        duration=forever

        [filter]
           x,y=$x1,$y1
        [/filter]

        [effect]
           apply_to=new_advancement
           types=Robber Ogre Mage
        [/effect]
        [effect]
           apply_to=remove_advancement
           types=Robber Savage Ogre
        [/effect]
     [/object]  
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Robber Hoodlum
	trait=careful	
    [/filter]
    [object]
        silent=yes
        duration=forever

        [filter]
           x,y=$x1,$y1
        [/filter]

        [effect]
           apply_to=new_advancement
           types=Robber Slaver
        [/effect]
        [effect]
           apply_to=remove_advancement
           types=Robber Cripple
        [/effect]
     [/object]  
[/event]
[event]
    name=prerecruit, post advance
    first_time_only=no
    [filter]
	type=Royal Shieldman
    [/filter]
    {APPLY_TO_VARIATION "true_name"}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=prerecruit
    first_time_only=no
    [filter]
	type=Royal Light Infantryman
    [/filter]
    {APPLY_TO_VARIATION "true_advancement"}
    [heal_unit]
	[filter]
	   x=$x1
	   y=$y1
	[/filter]
	amount=full
    [/heal_unit]
[/event]
[event]
    name=unit placed
    first_time_only=no
    [filter]
	type=Robber Spy
    [/filter]
    [if]
    [variable]
	name=unit.gender
	equals="male"
    [/variable]
    [then]
    	[set_variable]
	    name=tmp_luck
	    rand=1..4
    	[/set_variable]
	[if]
    	    [variable]
		name=tmp_luck
		equals=1
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "lad"}	
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=2
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "peasant"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=3
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "butcher"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=4
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "beggar"}
    	    [/then]
    	[/if]
    [/then]
    [else]
    	[set_variable]
	    name=tmp_luck
	    rand=1..3
    	[/set_variable]
	[if]
    	    [variable]
		name=tmp_luck
		equals=1
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "girl"}	
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=2
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "peasant"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=3
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "maid"}
    	    [/then]
    	[/if]
    [/else]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
[/event]
[event]
    name=moveto
    first_time_only=no
    [filter]
	type=Robber Spy
	[filter_location]
	     terrain=*^V*
	[/filter_location]
    [/filter]
    [if]
    [variable]
	name=unit.gender
	equals="male"
    [/variable]
    [then]
    	[set_variable]
	    name=tmp_luck
	    rand=1..4
    	[/set_variable]
	[if]
    	    [variable]
		name=tmp_luck
		equals=1
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "lad"}	
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=2
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "peasant"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=3
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "butcher"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=4
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "beggar"}
    	    [/then]
    	[/if]
    [/then]
    [else]
    	[set_variable]
	    name=tmp_luck
	    rand=1..3
    	[/set_variable]
	[if]
    	    [variable]
		name=tmp_luck
		equals=1
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "girl"}	
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=2
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "peasant"}
    	    [/then]
    	[/if]
    	[if]
    	    [variable]
		name=tmp_luck
		equals=3
    	    [/variable]
    	    [then]
		{APPLY_TO_VARIATION "maid"}
    	    [/then]
    	[/if]
    [/else]
    [/if]
    {CLEAR_VARIABLE tmp_luck}
[/event]
#pupils
[event]
    id=remove_pupil_and_alignment
    name=post advance, recall, recruit
    first_time_only=no
    {VARIABLE p 0}
    {VARIABLE a 0}
    {FOREACH unit.modifications.trait ut}
        [if]
            [variable]
		name=unit.modifications.trait[$ut].availability
		equals="none"
	    [/variable]
	    [then]
		{CLEAR_VARIABLE unit.modifications.trait[$ut]}
		[set_variable]
		    name=ut
		    add=-1
		[/set_variable]
	    [/then]
        [/if]
        [if]
            [variable]
		name=unit.modifications.trait[$ut].availability
		equals="musthave"
	    [/variable]
	    [then]
		{VARIABLE unit.modifications.trait[$ut].availability "none"}
	    [/then]
        [/if]
    {NEXT ut}
    [unstore_unit]
	variable=unit
	find_vacant=no
    [/unstore_unit]
[/event]
[event]
    id=dayvision_activated
    name=turn refresh
    first_time_only=no
    [filter_condition]
	[have_location]
	     time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	[/have_location]
    [/filter_condition]
    [store_unit]
	[filter]
	    side=$side_number
	    trait=pupilD
	[/filter]
        variable=daypupils
	kill=no
    [/store_unit]
    {FOREACH daypupils dp}
        [object]
            silent=yes
            duration=turn

            [filter]
                id=$daypupils[$dp].id
		[filter_location]
    		    time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
		[/filter_location]
            [/filter]

            [effect]
                apply_to=vision
                increase=1
            [/effect]
        [/object]
    {NEXT dp}
    {CLEAR_VARIABLE daypupils}
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=dayvision_first_activated
    name=recruit, recall
    first_time_only=no
    [filter]
	trait=pupilD
    [/filter]
    [filter_condition]
	[have_location]
	     time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	[/have_location]
    [/filter_condition]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
	    [filter_location]
    		time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	    [/filter_location]
        [/filter]

        [effect]
            apply_to=vision
            increase=1
        [/effect]
    [/object]
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=dayvision_deactivated
    name=turn refresh
    first_time_only=no
    [filter_condition]
	[have_location]
	     time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	[/have_location]
    [/filter_condition]
    [store_unit]
	[filter]
	    side=$side_number
	    trait=pupilD
        [/filter]
        variable=daypupils
	kill=no
    [/store_unit]
    {FOREACH daypupils dp}
        [object]
            silent=yes
            duration=turn

            [filter]
                id=$daypupils[$dp].id
		[filter_location]
    		    time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
		[/filter_location]
            [/filter]

            [effect]
                apply_to=vision
                increase=-1
            [/effect]
        [/object]
    {NEXT dp}
    {CLEAR_VARIABLE daypupils}
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=dayvision_first_deactivated
    name=recruit, recall
    first_time_only=no
    [filter]
	trait=pupilD
    [/filter]
    [filter_condition]
	[have_location]
	     time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	[/have_location]
    [/filter_condition]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
	    [filter_location]
    		time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	    [/filter_location]
        [/filter]

        [effect]
            apply_to=vision
            increase=-1
        [/effect]
    [/object]
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=nightvision_activated
    name=turn refresh
    first_time_only=no
    [filter_condition]
	[have_location]
	     time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	[/have_location]
    [/filter_condition]
    [store_unit]
	[filter]
	    side=$side_number
	    trait=pupilN
        [/filter]
        variable=nightpupils
	kill=no
    [/store_unit]
    {FOREACH nightpupils np}
        [object]
            silent=yes
            duration=turn

            [filter]
                id=$nightpupils[$np].id
		[filter_location]
    		    time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
		[/filter_location]
            [/filter]

            [effect]
                apply_to=vision
                increase=1
            [/effect]
        [/object]
    {NEXT np}
    {CLEAR_VARIABLE nightpupils}
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=nightvision_first_activated
    name=recruit, recall
    first_time_only=no
    [filter]
	trait=pupilN
    [/filter]
    [filter_condition]
	[have_location]
	     time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	[/have_location]
    [/filter_condition]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
	    [filter_location]
    		time_of_day_id=first_watch, midnight, second_watch, underground, deep_underground, midnight_hour, second_watch_hour1, second_watch_hour2, second_watch_hour3, second_watch_hour4, first_watch_hour1, first_watch_hour2, first_watch_hour3, first_watch_hour4, second_watch_hour5, second_watch_hour6
	    [/filter_location]
        [/filter]

        [effect]
            apply_to=vision
            increase=1
        [/effect]
    [/object]
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=nightvision_deactivated
    name=turn refresh
    first_time_only=no
    [filter_condition]
	[have_location]
	     time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	[/have_location]
    [/filter_condition]
    [store_unit]
	[filter]
	    side=$side_number
	    trait=pupilN
        [/filter]
        variable=nightpupils
	kill=no
    [/store_unit]
    {FOREACH nightpupils np}
        [object]
            silent=yes
            duration=turn

            [filter]
                id=$nightpupils[$np].id
	    	[filter_location]
    		    time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	    	[/filter_location]
            [/filter]

            [effect]
                apply_to=vision
                increase=-1
            [/effect]
        [/object]
    {NEXT np}
    {CLEAR_VARIABLE nightpupils}
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
[event]
    id=nightvision_first_deactivated
    name=recruit, recall
    first_time_only=no
    [filter]
	trait=pupilN
    [/filter]
    [filter_condition]
	[have_location]
	     time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	[/have_location]
    [/filter_condition]
    [object]
        silent=yes
        duration=turn

        [filter]
            x,y=$x1,$y1
	    [filter_location]
    		time_of_day_id=morning, midday, afternoon, morning_hour1, morning_hour2, morning_hour3, morning_hour4, midday_hour, afternoon_hour1, afternoon_hour2, afternoon_hour3, afternoon_hour4, afternoon_hour5, afternoon_hour6
	    [/filter_location]
        [/filter]

        [effect]
            apply_to=vision
            increase=-1
        [/effect]
    [/object]
    [reset_fog]
	side=$side_number
    [/reset_fog]
    [redraw]
	side=$side_number
    [/redraw]
[/event]
